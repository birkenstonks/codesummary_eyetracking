<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getMessage_wrapped.java" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="23:67"><decl pos:start="1:1" pos:end="1:48"><type pos:start="1:1" pos:end="1:42"><name pos:start="1:1" pos:end="1:6">Please</name> <name pos:start="1:8" pos:end="1:11">note</name> <name pos:start="1:13" pos:end="1:16">that</name> <name pos:start="1:18" pos:end="1:22">since</name> <name pos:start="1:24" pos:end="1:24">I</name> <name pos:start="1:26" pos:end="1:27">am</name> <name pos:start="1:29" pos:end="1:30">an</name> <name pos:start="1:32" pos:end="1:33">AI</name> <name pos:start="1:35" pos:end="1:42">language</name></type> <name pos:start="1:44" pos:end="1:48">model</name></decl>, <decl pos:start="1:51" pos:end="1:98"><type ref="prev" pos:start="1:1" pos:end="1:42"/><name pos:start="1:51" pos:end="1:51">I</name> <name pos:start="1:53" pos:end="1:58">cannot</name> <name pos:start="1:60" pos:end="1:67">directly</name> <name pos:start="1:69" pos:end="1:74">create</name> <name pos:start="1:76" pos:end="1:77">or</name> <name pos:start="1:79" pos:end="1:83">parse</name> <name pos:start="1:85" pos:end="1:98"><name pos:start="1:85" pos:end="1:89">files</name><operator pos:start="1:90" pos:end="1:90">.</operator> <name pos:start="1:92" pos:end="1:98">However</name></name></decl>, <decl pos:start="1:101" pos:end="23:67"><type ref="prev" pos:start="1:1" pos:end="1:42"/><name pos:start="1:101" pos:end="1:101">I</name> <name pos:start="1:103" pos:end="1:105">can</name> <name pos:start="1:107" pos:end="1:113">provide</name> <name pos:start="1:115" pos:end="1:117">you</name> <name pos:start="1:119" pos:end="1:119">a</name> <name pos:start="1:121" pos:end="1:124">java</name> <name pos:start="1:126" pos:end="1:130">class</name> <name pos:start="1:132" pos:end="1:137">format</name> <name pos:start="1:139" pos:end="1:151">corresponding</name> <name pos:start="1:153" pos:end="1:154">to</name> <name pos:start="1:156" pos:end="1:158">the</name> <name pos:start="1:160" pos:end="1:164">given</name> <name pos:start="1:166" pos:end="1:179"><name pos:start="1:166" pos:end="1:173">function</name><operator pos:start="1:174" pos:end="1:174">.</operator> <name pos:start="1:176" pos:end="1:179">Here</name></name> <name pos:start="1:181" pos:end="1:182">is</name> <name pos:start="1:184" pos:end="1:186">the</name> <name pos:start="1:188" pos:end="1:192">class</name> <name pos:start="1:194" pos:end="1:199">format</name> <name pos:start="1:201" pos:end="1:203">you</name> <name pos:start="1:205" pos:end="1:207">can</name> <name pos:start="1:209" pos:end="1:211">use</name><range pos:start="1:212" pos:end="23:67">:

<expr pos:start="3:1" pos:end="23:67"><specifier pos:start="3:1" pos:end="3:6">public</specifier> <name pos:start="3:8" pos:end="3:12">class</name> <name pos:start="3:14" pos:end="3:20">MyClass</name> <block pos:start="3:22" pos:end="23:67">{
    
    <expr pos:start="5:5" pos:end="23:67"><specifier pos:start="5:5" pos:end="5:10">public</specifier> <name pos:start="5:12" pos:end="5:17">String</name> <call pos:start="5:19" pos:end="5:30"><name pos:start="5:19" pos:end="5:28">getMessage</name><argument_list pos:start="5:29" pos:end="5:30">()</argument_list></call> <block pos:start="5:32" pos:end="23:67">{
        <expr pos:start="6:9" pos:end="6:44"><name pos:start="6:9" pos:end="6:20">StringBuffer</name> <name pos:start="6:22" pos:end="6:23">sb</name> <operator pos:start="6:25" pos:end="6:25">=</operator> <operator pos:start="6:27" pos:end="6:29">new</operator> <call pos:start="6:31" pos:end="6:44"><name pos:start="6:31" pos:end="6:42">StringBuffer</name><argument_list pos:start="6:43" pos:end="6:44">()</argument_list></call></expr>;

        <if_stmt pos:start="8:9" pos:end="23:67"><if pos:start="8:9" pos:end="23:67">if <condition pos:start="8:12" pos:end="8:31">( <expr pos:start="8:14" pos:end="8:29"><name pos:start="8:14" pos:end="8:21">messages</name> <operator pos:start="8:23" pos:end="8:24">!=</operator> <literal type="null" pos:start="8:26" pos:end="8:29">null</literal></expr> )</condition> <block pos:start="8:33" pos:end="23:67">{<block_content pos:start="9:13" pos:end="20:5">
            <for pos:start="9:13" pos:end="19:29">for <control pos:start="9:17" pos:end="9:55">( <init pos:start="9:19" pos:end="9:28"><decl pos:start="9:19" pos:end="9:27"><type pos:start="9:19" pos:end="9:21"><name pos:start="9:19" pos:end="9:21">int</name></type> <name pos:start="9:23" pos:end="9:23">i</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</init> <condition pos:start="9:30" pos:end="9:49"><expr pos:start="9:30" pos:end="9:48"><name pos:start="9:30" pos:end="9:30">i</name> <operator pos:start="9:32" pos:end="9:32">&lt;</operator> <call pos:start="9:34" pos:end="9:48"><name pos:start="9:34" pos:end="9:46"><name pos:start="9:34" pos:end="9:41">messages</name><operator pos:start="9:42" pos:end="9:42">.</operator><name pos:start="9:43" pos:end="9:46">size</name></name><argument_list pos:start="9:47" pos:end="9:48">()</argument_list></call></expr>;</condition> <incr pos:start="9:51" pos:end="9:53"><expr pos:start="9:51" pos:end="9:53"><name pos:start="9:51" pos:end="9:51">i</name><operator pos:start="9:52" pos:end="9:53">++</operator></expr></incr> )</control> <block pos:start="9:57" pos:end="19:28">{<block_content pos:start="10:17" pos:end="19:28">
                <decl_stmt pos:start="10:17" pos:end="10:51"><decl pos:start="10:17" pos:end="10:50"><type pos:start="10:17" pos:end="10:22"><name pos:start="10:17" pos:end="10:22">Object</name></type> <name pos:start="10:24" pos:end="10:24">o</name> <init pos:start="10:26" pos:end="10:50">= <expr pos:start="10:28" pos:end="10:50"><call pos:start="10:28" pos:end="10:50"><name pos:start="10:28" pos:end="10:45"><name pos:start="10:28" pos:end="10:35">messages</name><operator pos:start="10:36" pos:end="10:36">.</operator><name pos:start="10:37" pos:end="10:45">elementAt</name></name><argument_list pos:start="10:46" pos:end="10:50">( <argument pos:start="10:48" pos:end="10:48"><expr pos:start="10:48" pos:end="10:48"><name pos:start="10:48" pos:end="10:48">i</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="12:17" pos:end="19:27"><if pos:start="12:17" pos:end="19:27">if <condition pos:start="12:20" pos:end="12:32">( <expr pos:start="12:22" pos:end="12:30"><name pos:start="12:22" pos:end="12:22">o</name> <operator pos:start="12:24" pos:end="12:25">!=</operator> <literal type="null" pos:start="12:27" pos:end="12:30">null</literal></expr> )</condition> <block pos:start="12:34" pos:end="19:27">{<block_content pos:start="13:21" pos:end="15:17">
                    <expr_stmt pos:start="13:21" pos:end="13:46"><expr pos:start="13:21" pos:end="13:45"><call pos:start="13:21" pos:end="13:45"><name pos:start="13:21" pos:end="13:29"><name pos:start="13:21" pos:end="13:22">sb</name><operator pos:start="13:23" pos:end="13:23">.</operator><name pos:start="13:24" pos:end="13:29">append</name></name><argument_list pos:start="13:30" pos:end="13:45">( <argument pos:start="13:32" pos:end="13:43"><expr pos:start="13:32" pos:end="13:43"><call pos:start="13:32" pos:end="13:43"><name pos:start="13:32" pos:end="13:41"><name pos:start="13:32" pos:end="13:32">o</name><operator pos:start="13:33" pos:end="13:33">.</operator><name pos:start="13:34" pos:end="13:41">toString</name></name><argument_list pos:start="13:42" pos:end="13:43">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="14:21" pos:end="14:38"><expr pos:start="14:21" pos:end="14:37"><call pos:start="14:21" pos:end="14:37"><name pos:start="14:21" pos:end="14:29"><name pos:start="14:21" pos:end="14:22">sb</name><operator pos:start="14:23" pos:end="14:23">.</operator><name pos:start="14:24" pos:end="14:29">append</name></name><argument_list pos:start="14:30" pos:end="14:37">( <argument pos:start="14:32" pos:end="14:35"><expr pos:start="14:32" pos:end="14:35"><literal type="string" pos:start="14:32" pos:end="14:35">"|n"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
                <expr_stmt/>}</block_content>
            }
        }
        
        return sb.toString(</block></if></if_stmt>)</block_content></block><empty_stmt pos:start="19:29" pos:end="19:29">;</empty_stmt></for>
    <expr_stmt/>}</block_content>
} 

Make sure to add the required imports or modify the code if needed.</block></if></if_stmt></block></expr></block></expr></range></decl></decl_stmt></unit>
