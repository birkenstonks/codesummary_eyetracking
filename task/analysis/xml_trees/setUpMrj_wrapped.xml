<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/setUpMrj_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="17:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:23">Belvedere4</name> <block pos:start="1:25" pos:end="17:1">{
    <decl_stmt pos:start="2:5" pos:end="2:37"><decl pos:start="2:5" pos:end="2:36"><type pos:start="2:5" pos:end="2:25"><specifier pos:start="2:5" pos:end="2:11">private</specifier> <specifier pos:start="2:13" pos:end="2:18">static</specifier> <name pos:start="2:20" pos:end="2:25">String</name></type> <name pos:start="2:27" pos:end="2:36">mrjVersion</name></decl>;</decl_stmt>
    <decl_stmt pos:start="3:5" pos:end="3:42"><decl pos:start="3:5" pos:end="3:41"><type pos:start="3:5" pos:end="3:25"><specifier pos:start="3:5" pos:end="3:11">private</specifier> <specifier pos:start="3:13" pos:end="3:18">static</specifier> <name pos:start="3:20" pos:end="3:25">double</name></type> <name pos:start="3:27" pos:end="3:41">mrjMajorVersion</name></decl>;</decl_stmt>

    <function pos:start="5:5" pos:end="16:5"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:11">private</specifier> <name pos:start="5:13" pos:end="5:16">void</name></type> <name pos:start="5:18" pos:end="5:25">setUpMrj</name><parameter_list pos:start="5:26" pos:end="5:27">()</parameter_list> <block pos:start="5:29" pos:end="16:5">{<block_content pos:start="6:9" pos:end="15:9">
        <expr_stmt pos:start="6:9" pos:end="6:55"><expr pos:start="6:9" pos:end="6:54"><name pos:start="6:9" pos:end="6:18">mrjVersion</name> <operator pos:start="6:20" pos:end="6:20">=</operator> <call pos:start="6:22" pos:end="6:54"><name pos:start="6:22" pos:end="6:39"><name pos:start="6:22" pos:end="6:27">System</name><operator pos:start="6:28" pos:end="6:28">.</operator><name pos:start="6:29" pos:end="6:39">getProperty</name></name><argument_list pos:start="6:40" pos:end="6:54">(<argument pos:start="6:41" pos:end="6:53"><expr pos:start="6:41" pos:end="6:53"><literal type="string" pos:start="6:41" pos:end="6:53">"mrj.version"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="8:9" pos:end="9:19"><if pos:start="8:9" pos:end="9:19">if <condition pos:start="8:12" pos:end="8:31">(<expr pos:start="8:13" pos:end="8:30"><name pos:start="8:13" pos:end="8:22">mrjVersion</name> <operator pos:start="8:24" pos:end="8:25">==</operator> <literal type="null" pos:start="8:27" pos:end="8:30">null</literal></expr>)</condition><block type="pseudo" pos:start="9:13" pos:end="9:19"><block_content pos:start="9:13" pos:end="9:19">
            <return pos:start="9:13" pos:end="9:19">return;</return></block_content></block></if></if_stmt>

        <try pos:start="11:9" pos:end="15:9">try <block pos:start="11:13" pos:end="13:9">{<block_content pos:start="12:13" pos:end="12:87">
            <expr_stmt pos:start="12:13" pos:end="12:87"><expr pos:start="12:13" pos:end="12:86"><name pos:start="12:13" pos:end="12:27">mrjMajorVersion</name> <operator pos:start="12:29" pos:end="12:29">=</operator> <call pos:start="12:31" pos:end="12:72"><name pos:start="12:31" pos:end="12:44"><name pos:start="12:31" pos:end="12:36">Double</name><operator pos:start="12:37" pos:end="12:37">.</operator><name pos:start="12:38" pos:end="12:44">valueOf</name></name><argument_list pos:start="12:45" pos:end="12:72">(<argument pos:start="12:46" pos:end="12:71"><expr pos:start="12:46" pos:end="12:71"><call pos:start="12:46" pos:end="12:71"><name pos:start="12:46" pos:end="12:65"><name pos:start="12:46" pos:end="12:55">mrjVersion</name><operator pos:start="12:56" pos:end="12:56">.</operator><name pos:start="12:57" pos:end="12:65">substring</name></name><argument_list pos:start="12:66" pos:end="12:71">(<argument pos:start="12:67" pos:end="12:67"><expr pos:start="12:67" pos:end="12:67"><literal type="number" pos:start="12:67" pos:end="12:67">0</literal></expr></argument>, <argument pos:start="12:70" pos:end="12:70"><expr pos:start="12:70" pos:end="12:70"><literal type="number" pos:start="12:70" pos:end="12:70">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="12:73" pos:end="12:73">.</operator><call pos:start="12:74" pos:end="12:86"><name pos:start="12:74" pos:end="12:84">doubleValue</name><argument_list pos:start="12:85" pos:end="12:86">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch pos:start="13:11" pos:end="15:9">catch <parameter_list pos:start="13:17" pos:end="13:29">(<parameter pos:start="13:18" pos:end="13:28"><decl pos:start="13:18" pos:end="13:28"><type pos:start="13:18" pos:end="13:28"><name pos:start="13:18" pos:end="13:26">Exception</name></type> <name pos:start="13:28" pos:end="13:28">e</name></decl></parameter>)</parameter_list> <block pos:start="13:31" pos:end="15:9">{<block_content pos:start="14:13" pos:end="14:32">
            <expr_stmt pos:start="14:13" pos:end="14:32"><expr pos:start="14:13" pos:end="14:31"><name pos:start="14:13" pos:end="14:27">mrjMajorVersion</name> <operator pos:start="14:29" pos:end="14:29">=</operator> <literal type="number" pos:start="14:31" pos:end="14:31">0</literal></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
}</block></class></unit>
