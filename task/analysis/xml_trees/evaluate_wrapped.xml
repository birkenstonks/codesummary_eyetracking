<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/evaluate_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="12:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:28">FunctionWrapper</name> <block pos:start="1:30" pos:end="12:1">{

    <function pos:start="3:5" pos:end="10:5"><type pos:start="3:5" pos:end="3:16"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:16">Value</name></type> <name pos:start="3:18" pos:end="3:25">evaluate</name><parameter_list pos:start="3:26" pos:end="3:40">( <parameter pos:start="3:28" pos:end="3:38"><decl pos:start="3:28" pos:end="3:38"><type pos:start="3:28" pos:end="3:32"><name pos:start="3:28" pos:end="3:32">Value</name></type> <name pos:start="3:34" pos:end="3:38">value</name></decl></parameter> )</parameter_list> <throws pos:start="3:42" pos:end="3:73">throws <argument pos:start="3:49" pos:end="3:73"><expr pos:start="3:49" pos:end="3:73"><name pos:start="3:49" pos:end="3:73">ExternalFunctionException</name></expr></argument></throws> <block pos:start="3:75" pos:end="10:5">{<block_content pos:start="4:9" pos:end="9:63">
        <if_stmt pos:start="4:9" pos:end="6:9"><if pos:start="4:9" pos:end="6:9">if <condition pos:start="4:12" pos:end="4:42">(<expr pos:start="4:13" pos:end="4:41"><operator pos:start="4:13" pos:end="4:13">!</operator><operator pos:start="4:14" pos:end="4:14">(</operator> <name pos:start="4:16" pos:end="4:20">value</name> <operator pos:start="4:22" pos:end="4:31">instanceof</operator> <name pos:start="4:33" pos:end="4:39">Literal</name> <operator pos:start="4:41" pos:end="4:41">)</operator></expr>)</condition> <block pos:start="4:44" pos:end="6:9">{<block_content pos:start="5:13" pos:end="5:97">
            <throw pos:start="5:13" pos:end="5:97">throw <expr pos:start="5:19" pos:end="5:96"><operator pos:start="5:19" pos:end="5:21">new</operator> <call pos:start="5:23" pos:end="5:96"><name pos:start="5:23" pos:end="5:47">ExternalFunctionException</name><argument_list pos:start="5:48" pos:end="5:96">( <argument pos:start="5:50" pos:end="5:94"><expr pos:start="5:50" pos:end="5:94"><literal type="string" pos:start="5:50" pos:end="5:94">"Values need to be literals to be understood"</literal></expr></argument> )</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>    
        <decl_stmt pos:start="7:9" pos:end="7:75"><decl pos:start="7:9" pos:end="7:74"><type pos:start="7:9" pos:end="7:16"><name pos:start="7:9" pos:end="7:16">DateTime</name></type> <name pos:start="7:18" pos:end="7:21">date</name> <init pos:start="7:23" pos:end="7:74">= <expr pos:start="7:25" pos:end="7:74"><call pos:start="7:25" pos:end="7:74"><name pos:start="7:25" pos:end="7:54"><name pos:start="7:25" pos:end="7:28">this</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:38">converter</name><operator pos:start="7:39" pos:end="7:39">.</operator><name pos:start="7:40" pos:end="7:54">convertDateTime</name></name><argument_list pos:start="7:55" pos:end="7:74">(<argument pos:start="7:56" pos:end="7:72"><expr pos:start="7:56" pos:end="7:72"><operator pos:start="7:56" pos:end="7:56">(</operator> <name pos:start="7:58" pos:end="7:64">Literal</name> <operator pos:start="7:66" pos:end="7:66">)</operator> <name pos:start="7:68" pos:end="7:72">value</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <return pos:start="9:9" pos:end="9:63">return <expr pos:start="9:16" pos:end="9:62"><call pos:start="9:16" pos:end="9:62"><name pos:start="9:16" pos:end="9:44"><name pos:start="9:16" pos:end="9:19">this</name><operator pos:start="9:20" pos:end="9:20">.</operator><name pos:start="9:21" pos:end="9:29">converter</name><operator pos:start="9:30" pos:end="9:30">.</operator><name pos:start="9:31" pos:end="9:44">convertInteger</name></name><argument_list pos:start="9:45" pos:end="9:62">( <argument pos:start="9:47" pos:end="9:60"><expr pos:start="9:47" pos:end="9:60"><call pos:start="9:47" pos:end="9:60"><name pos:start="9:47" pos:end="9:58"><name pos:start="9:47" pos:end="9:50">date</name><operator pos:start="9:51" pos:end="9:51">.</operator><name pos:start="9:52" pos:end="9:58">getHour</name></name><argument_list pos:start="9:59" pos:end="9:60">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</return>
    </block_content>}</block></function>
    
}</block></class></unit>
