<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/genIdents_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="12:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:22">GenIdents</name> <block pos:start="1:24" pos:end="12:1">{

    <function pos:start="3:5" pos:end="11:5"><type pos:start="3:5" pos:end="3:22"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:22">JExpression</name></type> <name pos:start="3:24" pos:end="3:32">genIdents</name><parameter_list pos:start="3:33" pos:end="3:34">()</parameter_list> <block pos:start="3:36" pos:end="11:5">{<block_content pos:start="4:9" pos:end="10:65">
        <decl_stmt pos:start="4:9" pos:end="4:49"><decl pos:start="4:9" pos:end="4:48"><type pos:start="4:9" pos:end="4:22"><name pos:start="4:9" pos:end="4:22">TokenReference</name></type> <name pos:start="4:24" pos:end="4:26">ref</name> <init pos:start="4:28" pos:end="4:48">= <expr pos:start="4:30" pos:end="4:48"><call pos:start="4:30" pos:end="4:48"><name pos:start="4:30" pos:end="4:46">getTokenReference</name><argument_list pos:start="4:47" pos:end="4:48">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="5:9" pos:end="5:61"><decl pos:start="5:9" pos:end="5:60"><type pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:19">Jexpression</name><index pos:start="5:20" pos:end="5:21">[]</index></name></type> <name pos:start="5:23" pos:end="5:26">init</name> <init pos:start="5:28" pos:end="5:60">= <expr pos:start="5:30" pos:end="5:60"><operator pos:start="5:30" pos:end="5:32">new</operator> <name pos:start="5:34" pos:end="5:60"><name pos:start="5:34" pos:end="5:44">JExpression</name><index pos:start="5:45" pos:end="5:60">[ <expr pos:start="5:47" pos:end="5:58"><name pos:start="5:47" pos:end="5:58"><name pos:start="5:47" pos:end="5:51">codes</name><operator pos:start="5:52" pos:end="5:52">.</operator><name pos:start="5:53" pos:end="5:58">length</name></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="7:9" pos:end="9:9">for <control pos:start="7:13" pos:end="7:48">( <init pos:start="7:15" pos:end="7:24"><decl pos:start="7:15" pos:end="7:23"><type pos:start="7:15" pos:end="7:17"><name pos:start="7:15" pos:end="7:17">int</name></type> <name pos:start="7:19" pos:end="7:19">i</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</init> <condition pos:start="7:26" pos:end="7:42"><expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:26">i</name> <operator pos:start="7:28" pos:end="7:28">&lt;</operator> <name pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:34">codes</name><operator pos:start="7:35" pos:end="7:35">.</operator><name pos:start="7:36" pos:end="7:41">length</name></name></expr>;</condition> <incr pos:start="7:44" pos:end="7:46"><expr pos:start="7:44" pos:end="7:46"><name pos:start="7:44" pos:end="7:44">i</name><operator pos:start="7:45" pos:end="7:46">++</operator></expr></incr> )</control> <block pos:start="7:50" pos:end="9:9">{<block_content pos:start="8:13" pos:end="8:73">
            <expr_stmt pos:start="8:13" pos:end="8:73"><expr pos:start="8:13" pos:end="8:72"><name pos:start="8:13" pos:end="8:21"><name pos:start="8:13" pos:end="8:16">init</name><index pos:start="8:17" pos:end="8:21">[ <expr pos:start="8:19" pos:end="8:19"><name pos:start="8:19" pos:end="8:19">i</name></expr> ]</index></name> <operator pos:start="8:23" pos:end="8:23">=</operator> <operator pos:start="8:25" pos:end="8:27">new</operator> <call pos:start="8:29" pos:end="8:72"><name pos:start="8:29" pos:end="8:42">JStringLiteral</name><argument_list pos:start="8:43" pos:end="8:72">( <argument pos:start="8:45" pos:end="8:47"><expr pos:start="8:45" pos:end="8:47"><name pos:start="8:45" pos:end="8:47">ref</name></expr></argument>, <argument pos:start="8:50" pos:end="8:70"><expr pos:start="8:50" pos:end="8:70"><name pos:start="8:50" pos:end="8:59"><name pos:start="8:50" pos:end="8:54">codes</name><index pos:start="8:55" pos:end="8:59">[ <expr pos:start="8:57" pos:end="8:57"><name pos:start="8:57" pos:end="8:57">i</name></expr> ]</index></name><operator pos:start="8:60" pos:end="8:60">.</operator><call pos:start="8:61" pos:end="8:70"><name pos:start="8:61" pos:end="8:68">getIdent</name><argument_list pos:start="8:69" pos:end="8:70">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <return pos:start="10:9" pos:end="10:65">return <expr pos:start="10:16" pos:end="10:64"><call pos:start="10:16" pos:end="10:64"><name pos:start="10:16" pos:end="10:34"><name pos:start="10:16" pos:end="10:22">VKUtils</name><operator pos:start="10:23" pos:end="10:23">.</operator><name pos:start="10:24" pos:end="10:34">createArray</name></name><argument_list pos:start="10:35" pos:end="10:64">( <argument pos:start="10:37" pos:end="10:39"><expr pos:start="10:37" pos:end="10:39"><name pos:start="10:37" pos:end="10:39">ref</name></expr></argument>, <argument pos:start="10:42" pos:end="10:56"><expr pos:start="10:42" pos:end="10:56"><name pos:start="10:42" pos:end="10:56"><name pos:start="10:42" pos:end="10:49">CStdType</name><operator pos:start="10:50" pos:end="10:50">.</operator><name pos:start="10:51" pos:end="10:56">String</name></name></expr></argument>, <argument pos:start="10:59" pos:end="10:62"><expr pos:start="10:59" pos:end="10:62"><name pos:start="10:59" pos:end="10:62">init</name></expr></argument> )</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
