<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/test_10_bug2689872_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="17:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:22">TestClass</name> <block pos:start="1:24" pos:end="17:1">{
    
    <function pos:start="3:5" pos:end="16:5"><type pos:start="3:5" pos:end="3:15"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:15">void</name></type> <name pos:start="3:17" pos:end="3:34">test_10_bug2689872</name><parameter_list pos:start="3:35" pos:end="3:36">()</parameter_list> <throws pos:start="3:38" pos:end="3:53">throws <argument pos:start="3:45" pos:end="3:53"><expr pos:start="3:45" pos:end="3:53"><name pos:start="3:45" pos:end="3:53">Exception</name></expr></argument></throws> <block pos:start="3:55" pos:end="16:5">{<block_content pos:start="4:9" pos:end="15:14">
        <decl_stmt pos:start="4:9" pos:end="4:52"><decl pos:start="4:9" pos:end="4:51"><type pos:start="4:9" pos:end="4:9"><name pos:start="4:9" pos:end="4:9">E</name></type> <name pos:start="4:11" pos:end="4:13">con</name> <init pos:start="4:15" pos:end="4:51">= <expr pos:start="4:17" pos:end="4:51"><call pos:start="4:17" pos:end="4:28"><name pos:start="4:17" pos:end="4:26">getGeneric</name><argument_list pos:start="4:27" pos:end="4:28">()</argument_list></call><operator pos:start="4:29" pos:end="4:29">.</operator><call pos:start="4:30" pos:end="4:51"><name pos:start="4:30" pos:end="4:42">createElement</name><argument_list pos:start="4:43" pos:end="4:51">( <argument pos:start="4:45" pos:end="4:49"><expr pos:start="4:45" pos:end="4:49"><literal type="string" pos:start="4:45" pos:end="4:49">"elt"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="5:9" pos:end="5:89"><expr pos:start="5:9" pos:end="5:88"><call pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:18">getGeneric</name><argument_list pos:start="5:19" pos:end="5:20">()</argument_list></call><operator pos:start="5:21" pos:end="5:21">.</operator><call pos:start="5:22" pos:end="5:88"><name pos:start="5:22" pos:end="5:34">addPredicates</name><argument_list pos:start="5:35" pos:end="5:88">( <argument pos:start="5:37" pos:end="5:39"><expr pos:start="5:37" pos:end="5:39"><name pos:start="5:37" pos:end="5:39">con</name></expr></argument>, <argument pos:start="5:42" pos:end="5:58"><expr pos:start="5:42" pos:end="5:58"><call pos:start="5:42" pos:end="5:58"><name pos:start="5:42" pos:end="5:50">makeSList</name><argument_list pos:start="5:51" pos:end="5:58">( <argument pos:start="5:53" pos:end="5:56"><expr pos:start="5:53" pos:end="5:56"><literal type="string" pos:start="5:53" pos:end="5:56">"A1"</literal></expr></argument> )</argument_list></call></expr></argument>, <argument pos:start="5:61" pos:end="5:79"><expr pos:start="5:61" pos:end="5:79"><call pos:start="5:61" pos:end="5:79"><name pos:start="5:61" pos:end="5:69">makeSList</name><argument_list pos:start="5:70" pos:end="5:79">( <argument pos:start="5:72" pos:end="5:77"><expr pos:start="5:72" pos:end="5:77"><literal type="string" pos:start="5:72" pos:end="5:77">"0/=1"</literal></expr></argument> )</argument_list></call></expr></argument>, <argument pos:start="5:82" pos:end="5:86"><expr pos:start="5:82" pos:end="5:86"><literal type="boolean" pos:start="5:82" pos:end="5:86">false</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="6:9" pos:end="6:33"><expr pos:start="6:9" pos:end="6:32"><call pos:start="6:9" pos:end="6:20"><name pos:start="6:9" pos:end="6:18">getGeneric</name><argument_list pos:start="6:19" pos:end="6:20">()</argument_list></call><operator pos:start="6:21" pos:end="6:21">.</operator><call pos:start="6:22" pos:end="6:32"><name pos:start="6:22" pos:end="6:25">save</name><argument_list pos:start="6:26" pos:end="6:32">( <argument pos:start="6:28" pos:end="6:30"><expr pos:start="6:28" pos:end="6:30"><name pos:start="6:28" pos:end="6:30">con</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:21"><expr pos:start="7:9" pos:end="7:20"><call pos:start="7:9" pos:end="7:20"><name pos:start="7:9" pos:end="7:18">runBuilder</name><argument_list pos:start="7:19" pos:end="7:20">()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="8:9" pos:end="8:52"><decl pos:start="8:9" pos:end="8:51"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">SCE</name></type> <name pos:start="8:13" pos:end="8:16">file</name> <init pos:start="8:18" pos:end="8:51">= <expr pos:start="8:20" pos:end="8:51"><call pos:start="8:20" pos:end="8:31"><name pos:start="8:20" pos:end="8:29">getGeneric</name><argument_list pos:start="8:30" pos:end="8:31">()</argument_list></call><operator pos:start="8:32" pos:end="8:32">.</operator><call pos:start="8:33" pos:end="8:51"><name pos:start="8:33" pos:end="8:44">getSCElement</name><argument_list pos:start="8:45" pos:end="8:51">( <argument pos:start="8:47" pos:end="8:49"><expr pos:start="8:47" pos:end="8:49"><name pos:start="8:47" pos:end="8:49">con</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:84"><expr pos:start="9:9" pos:end="9:83"><call pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:18">getGeneric</name><argument_list pos:start="9:19" pos:end="9:20">()</argument_list></call><operator pos:start="9:21" pos:end="9:21">.</operator><call pos:start="9:22" pos:end="9:83"><name pos:start="9:22" pos:end="9:39">containsPredicates</name><argument_list pos:start="9:40" pos:end="9:83">( <argument pos:start="9:42" pos:end="9:45"><expr pos:start="9:42" pos:end="9:45"><name pos:start="9:42" pos:end="9:45">file</name></expr></argument>, <argument pos:start="9:48" pos:end="9:55"><expr pos:start="9:48" pos:end="9:55"><name pos:start="9:48" pos:end="9:55">emptyEnv</name></expr></argument>, <argument pos:start="9:58" pos:end="9:68"><expr pos:start="9:58" pos:end="9:68"><call pos:start="9:58" pos:end="9:68"><name pos:start="9:58" pos:end="9:66">makeSList</name><argument_list pos:start="9:67" pos:end="9:68">()</argument_list></call></expr></argument>, <argument pos:start="9:71" pos:end="9:81"><expr pos:start="9:71" pos:end="9:81"><call pos:start="9:71" pos:end="9:81"><name pos:start="9:71" pos:end="9:79">makeSList</name><argument_list pos:start="9:80" pos:end="9:81">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="15:14"><expr pos:start="11:9" pos:end="15:13"><call pos:start="11:9" pos:end="15:13"><name pos:start="11:9" pos:end="11:17">hasMarker</name><argument_list pos:start="11:18" pos:end="15:13">( <argument pos:start="11:20" pos:end="11:57"><expr pos:start="11:20" pos:end="11:57"><call pos:start="11:20" pos:end="11:31"><name pos:start="11:20" pos:end="11:29">getGeneric</name><argument_list pos:start="11:30" pos:end="11:31">()</argument_list></call><operator pos:start="11:32" pos:end="11:32">.</operator><call pos:start="11:33" pos:end="11:52"><name pos:start="11:33" pos:end="11:45">getPredicates</name><argument_list pos:start="11:46" pos:end="11:52">( <argument pos:start="11:48" pos:end="11:50"><expr pos:start="11:48" pos:end="11:50"><name pos:start="11:48" pos:end="11:50">con</name></expr></argument> )</argument_list></call><index pos:start="11:53" pos:end="11:57">[ <expr pos:start="11:55" pos:end="11:55"><literal type="number" pos:start="11:55" pos:end="11:55">0</literal></expr> ]</index></expr></argument>,
            <argument pos:start="12:13" pos:end="12:48"><expr pos:start="12:13" pos:end="12:48"><name pos:start="12:13" pos:end="12:48"><name pos:start="12:13" pos:end="12:28">EventBAttributes</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:48">PREDICATE_ATTRIBUTE</name></name></expr></argument>,
            <argument pos:start="13:13" pos:end="13:35"><expr pos:start="13:13" pos:end="13:35"><name pos:start="13:13" pos:end="13:35"><name pos:start="13:13" pos:end="13:24">ParseProblem</name><operator pos:start="13:25" pos:end="13:25">.</operator><name pos:start="13:26" pos:end="13:35">LexerError</name></name></expr></argument>,
            <argument pos:start="14:13" pos:end="14:15"><expr pos:start="14:13" pos:end="14:15"><literal type="string" pos:start="14:13" pos:end="14:15">"/"</literal></expr></argument>
            )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
