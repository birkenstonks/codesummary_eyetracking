<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/testCookieGreaterThan_wrapped.java"><class><specifier>public</specifier> class <name>JSPTest</name> <block>{
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCookieGreaterThan</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ServletException</name></expr></argument>, <argument><expr><name>JspException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>GreaterThanTag</name></type> <name>gt</name> <init>= <expr><operator>new</operator> <call><name>GreaterThanTag</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>gt</name><operator>.</operator><name>setPageContext</name></name><argument_list>(<argument><expr><name>pageContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>gt</name><operator>.</operator><name>setCookie</name></name><argument_list>(<argument><expr><name>COOKIE_KEY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>gt</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><name>LESSER_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Cookie Value ("</literal> <operator>+</operator> <name>GREATER_VAL</name> <operator>+</operator> <literal type="string">") is greater than value ("</literal> <operator>+</operator> <name>LESSER_VAL</name> <operator>+</operator> <literal type="string">")"</literal></expr></argument>, <argument><expr><call><name><name>gt</name><operator>.</operator><name>condition</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
