<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getImageWithSource_wrapped.java" pos:tabs="8"><expr_stmt pos:start="1:1" pos:end="10:5"><expr pos:start="1:1" pos:end="10:5"><operator pos:start="1:1" pos:end="1:1">`</operator><operator pos:start="1:2" pos:end="1:2">`</operator><operator pos:start="1:3" pos:end="1:3">`</operator>
<specifier pos:start="2:1" pos:end="2:6">public</specifier> <name pos:start="2:8" pos:end="2:12">class</name> <name pos:start="2:14" pos:end="2:24">ImageParser</name> <block pos:start="2:26" pos:end="10:5">{
    <expr pos:start="3:5" pos:end="8:9"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:19">WebImage</name> <call pos:start="3:21" pos:end="3:55"><name pos:start="3:21" pos:end="3:38">getImageWithSource</name><argument_list pos:start="3:39" pos:end="3:55">( <argument pos:start="3:41" pos:end="3:53"><expr pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:46">String</name> <name pos:start="3:48" pos:end="3:53">source</name></expr></argument> )</argument_list></call> <block pos:start="3:57" pos:end="8:9">{
        <expr pos:start="4:9" pos:end="4:39"><name pos:start="4:9" pos:end="4:18"><name pos:start="4:9" pos:end="4:16">WebImage</name><index pos:start="4:17" pos:end="4:18">[]</index></name> <name pos:start="4:20" pos:end="4:25">images</name> <operator pos:start="4:27" pos:end="4:27">=</operator> <call pos:start="4:29" pos:end="4:39"><name pos:start="4:29" pos:end="4:37">getImages</name><argument_list pos:start="4:38" pos:end="4:39">()</argument_list></call></expr>;

        <for pos:start="6:9" pos:end="7:94">for <control pos:start="6:13" pos:end="6:49">( <init pos:start="6:15" pos:end="6:24"><decl pos:start="6:15" pos:end="6:23"><type pos:start="6:15" pos:end="6:17"><name pos:start="6:15" pos:end="6:17">int</name></type> <name pos:start="6:19" pos:end="6:19">i</name> <init pos:start="6:21" pos:end="6:23">= <expr pos:start="6:23" pos:end="6:23"><literal type="number" pos:start="6:23" pos:end="6:23">0</literal></expr></init></decl>;</init> <condition pos:start="6:26" pos:end="6:43"><expr pos:start="6:26" pos:end="6:42"><name pos:start="6:26" pos:end="6:26">i</name> <operator pos:start="6:28" pos:end="6:28">&lt;</operator> <name pos:start="6:30" pos:end="6:42"><name pos:start="6:30" pos:end="6:35">images</name><operator pos:start="6:36" pos:end="6:36">.</operator><name pos:start="6:37" pos:end="6:42">length</name></name></expr>;</condition> <incr pos:start="6:45" pos:end="6:47"><expr pos:start="6:45" pos:end="6:47"><name pos:start="6:45" pos:end="6:45">i</name><operator pos:start="6:46" pos:end="6:47">++</operator></expr></incr> )</control> <block pos:start="6:51" pos:end="7:94">{<block_content pos:start="7:13" pos:end="7:94">
            <if_stmt pos:start="7:13" pos:end="7:94"><if pos:start="7:13" pos:end="7:94">if <condition pos:start="7:16" pos:end="7:74">( <expr pos:start="7:18" pos:end="7:73"><call pos:start="7:18" pos:end="7:73"><name pos:start="7:18" pos:end="7:38"><name pos:start="7:18" pos:end="7:30">HttpUnitUtils</name><operator pos:start="7:31" pos:end="7:31">.</operator><name pos:start="7:32" pos:end="7:38">matches</name></name><argument_list pos:start="7:39" pos:end="7:73">( <argument pos:start="7:41" pos:end="7:46"><expr pos:start="7:41" pos:end="7:46"><name pos:start="7:41" pos:end="7:46">source</name></expr></argument>, <argument pos:start="7:49" pos:end="7:71"><expr pos:start="7:49" pos:end="7:71"><name pos:start="7:49" pos:end="7:59"><name pos:start="7:49" pos:end="7:54">images</name><index pos:start="7:55" pos:end="7:59">[ <expr pos:start="7:57" pos:end="7:57"><name pos:start="7:57" pos:end="7:57">i</name></expr> ]</index></name><operator pos:start="7:60" pos:end="7:60">.</operator><call pos:start="7:61" pos:end="7:71"><name pos:start="7:61" pos:end="7:69">getSource</name><argument_list pos:start="7:70" pos:end="7:71">()</argument_list></call></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo" pos:start="7:76" pos:end="7:94"><block_content pos:start="7:76" pos:end="7:94"> <return pos:start="7:76" pos:end="7:94">return <expr pos:start="7:83" pos:end="7:93"><name pos:start="7:83" pos:end="7:93"><name pos:start="7:83" pos:end="7:88">images</name><index pos:start="7:89" pos:end="7:93">[ <expr pos:start="7:91" pos:end="7:91"><name pos:start="7:91" pos:end="7:91">i</name></expr> ]</index></name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt/></block_content></block></for>}</block></expr>
        <return pos:start="9:9" pos:end="9:20">return <expr pos:start="9:16" pos:end="9:19"><literal type="null" pos:start="9:16" pos:end="9:19">null</literal></expr>;</return>
    }</block></expr></expr_stmt>
}
`<expr pos:start="12:2" pos:end="12:3"><operator pos:start="12:2" pos:end="12:2">`</operator><operator pos:start="12:3" pos:end="12:3">`</operator></expr></unit>
