<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/visitRetStmt_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="24:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:27">RetStmtVisitor</name> <block pos:start="1:29" pos:end="24:1">{
    
    <function pos:start="3:5" pos:end="15:5"><type pos:start="3:5" pos:end="3:15"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:15">void</name></type> <name pos:start="3:17" pos:end="3:28">visitRetStmt</name><parameter_list pos:start="3:29" pos:end="3:44">( <parameter pos:start="3:31" pos:end="3:42"><decl pos:start="3:31" pos:end="3:42"><type pos:start="3:31" pos:end="3:37"><name pos:start="3:31" pos:end="3:37">RetStmt</name></type> <name pos:start="3:39" pos:end="3:42">stmt</name></decl></parameter> )</parameter_list> <block pos:start="3:46" pos:end="15:5">{<block_content pos:start="4:9" pos:end="14:26">
        <decl_stmt pos:start="4:9" pos:end="4:42"><decl pos:start="4:9" pos:end="4:41"><type pos:start="4:9" pos:end="4:11"><name pos:start="4:9" pos:end="4:11">Set</name></type> <name pos:start="4:13" pos:end="4:19">targets</name> <init pos:start="4:21" pos:end="4:41">= <expr pos:start="4:23" pos:end="4:41"><operator pos:start="4:23" pos:end="4:25">new</operator> <call pos:start="4:27" pos:end="4:41"><name pos:start="4:27" pos:end="4:39">LinkedHashSet</name><argument_list pos:start="4:40" pos:end="4:41">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="5:9" pos:end="5:54"><decl pos:start="5:9" pos:end="5:53"><type pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:16">Iterator</name></type> <name pos:start="5:18" pos:end="5:21">iter</name> <init pos:start="5:23" pos:end="5:53">= <expr pos:start="5:25" pos:end="5:53"><call pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:28">stmt</name><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:32">sub</name></name><argument_list pos:start="5:33" pos:end="5:34">()</argument_list></call><operator pos:start="5:35" pos:end="5:35">.</operator><call pos:start="5:36" pos:end="5:42"><name pos:start="5:36" pos:end="5:40">paths</name><argument_list pos:start="5:41" pos:end="5:42">()</argument_list></call><operator pos:start="5:43" pos:end="5:43">.</operator><call pos:start="5:44" pos:end="5:53"><name pos:start="5:44" pos:end="5:51">iterator</name><argument_list pos:start="5:52" pos:end="5:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <while pos:start="7:9" pos:end="10:9">while <condition pos:start="7:15" pos:end="7:32">( <expr pos:start="7:17" pos:end="7:30"><call pos:start="7:17" pos:end="7:30"><name pos:start="7:17" pos:end="7:28"><name pos:start="7:17" pos:end="7:20">iter</name><operator pos:start="7:21" pos:end="7:21">.</operator><name pos:start="7:22" pos:end="7:28">hasNext</name></name><argument_list pos:start="7:29" pos:end="7:30">()</argument_list></call></expr> )</condition> <block pos:start="7:34" pos:end="10:9">{<block_content pos:start="8:13" pos:end="9:37">
            <decl_stmt pos:start="8:13" pos:end="8:50"><decl pos:start="8:13" pos:end="8:49"><type pos:start="8:13" pos:end="8:19"><name pos:start="8:13" pos:end="8:19"><name pos:start="8:13" pos:end="8:17">Block</name><index pos:start="8:18" pos:end="8:19">[]</index></name></type> <name pos:start="8:21" pos:end="8:24">path</name> <init pos:start="8:26" pos:end="8:49">= <expr pos:start="8:28" pos:end="8:49"><operator pos:start="8:28" pos:end="8:28">(</operator> <name pos:start="8:30" pos:end="8:36"><name pos:start="8:30" pos:end="8:34">Block</name><index pos:start="8:35" pos:end="8:36">[]</index></name><operator pos:start="8:37" pos:end="8:37">)</operator> <call pos:start="8:39" pos:end="8:49"><name pos:start="8:39" pos:end="8:47"><name pos:start="8:39" pos:end="8:42">iter</name><operator pos:start="8:43" pos:end="8:43">.</operator><name pos:start="8:44" pos:end="8:47">next</name></name><argument_list pos:start="8:48" pos:end="8:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="9:13" pos:end="9:37"><expr pos:start="9:13" pos:end="9:36"><call pos:start="9:13" pos:end="9:36"><name pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:19">targets</name><operator pos:start="9:20" pos:end="9:20">.</operator><name pos:start="9:21" pos:end="9:23">add</name></name><argument_list pos:start="9:24" pos:end="9:36">( <argument pos:start="9:26" pos:end="9:34"><expr pos:start="9:26" pos:end="9:34"><name pos:start="9:26" pos:end="9:34"><name pos:start="9:26" pos:end="9:29">path</name><index pos:start="9:30" pos:end="9:34">[ <expr pos:start="9:32" pos:end="9:32"><literal type="number" pos:start="9:32" pos:end="9:32">1</literal></expr> ]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>

        <expr_stmt pos:start="12:9" pos:end="12:46"><expr pos:start="12:9" pos:end="12:45"><call pos:start="12:9" pos:end="12:45"><name pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:15">targets</name><operator pos:start="12:16" pos:end="12:16">.</operator><name pos:start="12:17" pos:end="12:22">addAll</name></name><argument_list pos:start="12:23" pos:end="12:45">( <argument pos:start="12:25" pos:end="12:43"><expr pos:start="12:25" pos:end="12:43"><call pos:start="12:25" pos:end="12:43"><name pos:start="12:25" pos:end="12:41"><name pos:start="12:25" pos:end="12:28">stmt</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:41">catchTargets</name></name><argument_list pos:start="12:42" pos:end="12:43">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:47"><expr pos:start="13:9" pos:end="13:46"><call pos:start="13:9" pos:end="13:46"><name pos:start="13:9" pos:end="13:21">verifyTargets</name><argument_list pos:start="13:22" pos:end="13:46">( <argument pos:start="13:24" pos:end="13:35"><expr pos:start="13:24" pos:end="13:35"><call pos:start="13:24" pos:end="13:35"><name pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:27">stmt</name><operator pos:start="13:28" pos:end="13:28">.</operator><name pos:start="13:29" pos:end="13:33">block</name></name><argument_list pos:start="13:34" pos:end="13:35">()</argument_list></call></expr></argument>, <argument pos:start="13:38" pos:end="13:44"><expr pos:start="13:38" pos:end="13:44"><name pos:start="13:38" pos:end="13:44">targets</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:26"><expr pos:start="14:9" pos:end="14:25"><call pos:start="14:9" pos:end="14:25"><name pos:start="14:9" pos:end="14:17">visitNode</name><argument_list pos:start="14:18" pos:end="14:25">( <argument pos:start="14:20" pos:end="14:23"><expr pos:start="14:20" pos:end="14:23"><name pos:start="14:20" pos:end="14:23">stmt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function pos:start="17:5" pos:end="19:5"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:11">private</specifier> <name pos:start="17:13" pos:end="17:16">void</name></type> <name pos:start="17:18" pos:end="17:30">verifyTargets</name><parameter_list pos:start="17:31" pos:end="17:56">(<parameter pos:start="17:32" pos:end="17:42"><decl pos:start="17:32" pos:end="17:42"><type pos:start="17:32" pos:end="17:42"><name pos:start="17:32" pos:end="17:36">Block</name></type> <name pos:start="17:38" pos:end="17:42">block</name></decl></parameter>, <parameter pos:start="17:45" pos:end="17:55"><decl pos:start="17:45" pos:end="17:55"><type pos:start="17:45" pos:end="17:55"><name pos:start="17:45" pos:end="17:47">Set</name></type> <name pos:start="17:49" pos:end="17:55">targets</name></decl></parameter>)</parameter_list> <block pos:start="17:58" pos:end="19:5">{<block_content>
        <comment type="line" pos:start="18:9" pos:end="18:46">// implementation left out for brevity</comment>
    </block_content>}</block></function>

    <function pos:start="21:5" pos:end="23:5"><type pos:start="21:5" pos:end="21:16"><specifier pos:start="21:5" pos:end="21:11">private</specifier> <name pos:start="21:13" pos:end="21:16">void</name></type> <name pos:start="21:18" pos:end="21:26">visitNode</name><parameter_list pos:start="21:27" pos:end="21:40">(<parameter pos:start="21:28" pos:end="21:39"><decl pos:start="21:28" pos:end="21:39"><type pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:34">RetStmt</name></type> <name pos:start="21:36" pos:end="21:39">stmt</name></decl></parameter>)</parameter_list> <block pos:start="21:42" pos:end="23:5">{<block_content>
        <comment type="line" pos:start="22:9" pos:end="22:46">// implementation left out for brevity</comment>
    </block_content>}</block></function>
}</block></class></unit>
