<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/testSetEvtID_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="13:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:29">Email_DBImplTest</name> <block pos:start="1:31" pos:end="13:1">{

    <function pos:start="3:5" pos:end="11:5"><type pos:start="3:5" pos:end="3:15"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:15">void</name></type> <name pos:start="3:17" pos:end="3:28">testSetEvtID</name><parameter_list pos:start="3:29" pos:end="3:30">()</parameter_list> <block pos:start="3:32" pos:end="11:5">{<block_content pos:start="4:9" pos:end="10:48">
        <expr_stmt pos:start="4:9" pos:end="4:41"><expr pos:start="4:9" pos:end="4:40"><call pos:start="4:9" pos:end="4:40"><name pos:start="4:9" pos:end="4:26"><name pos:start="4:9" pos:end="4:14">System</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:18">out</name><operator pos:start="4:19" pos:end="4:19">.</operator><name pos:start="4:20" pos:end="4:26">println</name></name><argument_list pos:start="4:27" pos:end="4:40">( <argument pos:start="4:29" pos:end="4:38"><expr pos:start="4:29" pos:end="4:38"><literal type="string" pos:start="4:29" pos:end="4:38">"setEvtID"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    
        <decl_stmt pos:start="5:9" pos:end="5:26"><decl pos:start="5:9" pos:end="5:25"><type pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:14">String</name></type> <name pos:start="5:16" pos:end="5:20">evtID</name> <init pos:start="5:22" pos:end="5:25">= <expr pos:start="5:24" pos:end="5:25"><literal type="string" pos:start="5:24" pos:end="5:25">""</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="6:9" pos:end="6:51"><decl pos:start="6:9" pos:end="6:50"><type pos:start="6:9" pos:end="6:20"><name pos:start="6:9" pos:end="6:20">Email_DBImpl</name></type> <name pos:start="6:22" pos:end="6:29">instance</name> <init pos:start="6:31" pos:end="6:50">= <expr pos:start="6:33" pos:end="6:50"><operator pos:start="6:33" pos:end="6:35">new</operator> <call pos:start="6:37" pos:end="6:50"><name pos:start="6:37" pos:end="6:48">Email_DBImpl</name><argument_list pos:start="6:49" pos:end="6:50">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:35"><expr pos:start="7:9" pos:end="7:34"><call pos:start="7:9" pos:end="7:34"><name pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:16">instance</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:25">setEvtID</name></name><argument_list pos:start="7:26" pos:end="7:34">( <argument pos:start="7:28" pos:end="7:32"><expr pos:start="7:28" pos:end="7:32"><name pos:start="7:28" pos:end="7:32">evtID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="9:9" pos:end="9:83">// TODO review the generated test code and remove the default call to fail.</comment>
        <expr_stmt pos:start="10:9" pos:end="10:48"><expr pos:start="10:9" pos:end="10:47"><call pos:start="10:9" pos:end="10:47"><name pos:start="10:9" pos:end="10:12">fail</name><argument_list pos:start="10:13" pos:end="10:47">( <argument pos:start="10:15" pos:end="10:45"><expr pos:start="10:15" pos:end="10:45"><literal type="string" pos:start="10:15" pos:end="10:45">"The test case is a prototype."</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function> 

}</block></class></unit>
