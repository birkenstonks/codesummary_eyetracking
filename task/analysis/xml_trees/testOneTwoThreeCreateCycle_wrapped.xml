<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/testOneTwoThreeCreateCycle_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="21:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:20">MyClass</name> <block pos:start="1:22" pos:end="21:1">{
   <function pos:start="2:4" pos:end="20:4"><type pos:start="2:4" pos:end="2:14"><specifier pos:start="2:4" pos:end="2:9">public</specifier> <name pos:start="2:11" pos:end="2:14">void</name></type> <name pos:start="2:16" pos:end="2:41">testOneTwoThreeCreateCycle</name><parameter_list pos:start="2:42" pos:end="2:43">()</parameter_list> <throws pos:start="2:45" pos:end="2:60">throws <argument pos:start="2:52" pos:end="2:60"><expr pos:start="2:52" pos:end="2:60"><name pos:start="2:52" pos:end="2:60">Exception</name></expr></argument></throws> <block pos:start="2:62" pos:end="20:4">{<block_content pos:start="3:7" pos:end="19:56">
      <decl_stmt pos:start="3:7" pos:end="3:50"><decl pos:start="3:7" pos:end="3:49"><type pos:start="3:7" pos:end="3:16"><name pos:start="3:7" pos:end="3:16">IRodinFile</name></type> <name pos:start="3:18" pos:end="3:20">ctx</name> <init pos:start="3:22" pos:end="3:49">= <expr pos:start="3:24" pos:end="3:49"><call pos:start="3:24" pos:end="3:49"><name pos:start="3:24" pos:end="3:38">createRodinFile</name><argument_list pos:start="3:39" pos:end="3:49">(<argument pos:start="3:40" pos:end="3:48"><expr pos:start="3:40" pos:end="3:48"><literal type="string" pos:start="3:40" pos:end="3:48">"P/x.ctx"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt pos:start="4:7" pos:end="4:33"><expr pos:start="4:7" pos:end="4:32"><call pos:start="4:7" pos:end="4:32"><name pos:start="4:7" pos:end="4:22">createDependency</name><argument_list pos:start="4:23" pos:end="4:32">(<argument pos:start="4:24" pos:end="4:26"><expr pos:start="4:24" pos:end="4:26"><name pos:start="4:24" pos:end="4:26">ctx</name></expr></argument>, <argument pos:start="4:29" pos:end="4:31"><expr pos:start="4:29" pos:end="4:31"><literal type="string" pos:start="4:29" pos:end="4:31">"y"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt pos:start="5:7" pos:end="5:29"><expr pos:start="5:7" pos:end="5:28"><call pos:start="5:7" pos:end="5:28"><name pos:start="5:7" pos:end="5:16">createData</name><argument_list pos:start="5:17" pos:end="5:28">(<argument pos:start="5:18" pos:end="5:20"><expr pos:start="5:18" pos:end="5:20"><name pos:start="5:18" pos:end="5:20">ctx</name></expr></argument>, <argument pos:start="5:23" pos:end="5:27"><expr pos:start="5:23" pos:end="5:27"><literal type="string" pos:start="5:23" pos:end="5:27">"one"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt pos:start="6:7" pos:end="6:27"><expr pos:start="6:7" pos:end="6:26"><call pos:start="6:7" pos:end="6:26"><name pos:start="6:7" pos:end="6:14"><name pos:start="6:7" pos:end="6:9">ctx</name><operator pos:start="6:10" pos:end="6:10">.</operator><name pos:start="6:11" pos:end="6:14">save</name></name><argument_list pos:start="6:15" pos:end="6:26">(<argument pos:start="6:16" pos:end="6:19"><expr pos:start="6:16" pos:end="6:19"><literal type="null" pos:start="6:16" pos:end="6:19">null</literal></expr></argument>, <argument pos:start="6:22" pos:end="6:25"><expr pos:start="6:22" pos:end="6:25"><literal type="boolean" pos:start="6:22" pos:end="6:25">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt pos:start="7:7" pos:end="7:19"><expr pos:start="7:7" pos:end="7:18"><call pos:start="7:7" pos:end="7:18"><name pos:start="7:7" pos:end="7:16">runBuilder</name><argument_list pos:start="7:17" pos:end="7:18">()</argument_list></call></expr>;</expr_stmt>

      <decl_stmt pos:start="9:7" pos:end="9:50"><decl pos:start="9:7" pos:end="9:49"><type pos:start="9:7" pos:end="9:16"><name pos:start="9:7" pos:end="9:16">IRodinFile</name></type> <name pos:start="9:18" pos:end="9:20">cty</name> <init pos:start="9:22" pos:end="9:49">= <expr pos:start="9:24" pos:end="9:49"><call pos:start="9:24" pos:end="9:49"><name pos:start="9:24" pos:end="9:38">createRodinFile</name><argument_list pos:start="9:39" pos:end="9:49">(<argument pos:start="9:40" pos:end="9:48"><expr pos:start="9:40" pos:end="9:48"><literal type="string" pos:start="9:40" pos:end="9:48">"P/y.ctx"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt pos:start="10:7" pos:end="10:33"><expr pos:start="10:7" pos:end="10:32"><call pos:start="10:7" pos:end="10:32"><name pos:start="10:7" pos:end="10:22">createDependency</name><argument_list pos:start="10:23" pos:end="10:32">(<argument pos:start="10:24" pos:end="10:26"><expr pos:start="10:24" pos:end="10:26"><name pos:start="10:24" pos:end="10:26">cty</name></expr></argument>, <argument pos:start="10:29" pos:end="10:31"><expr pos:start="10:29" pos:end="10:31"><literal type="string" pos:start="10:29" pos:end="10:31">"x"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt pos:start="11:7" pos:end="11:29"><expr pos:start="11:7" pos:end="11:28"><call pos:start="11:7" pos:end="11:28"><name pos:start="11:7" pos:end="11:16">createData</name><argument_list pos:start="11:17" pos:end="11:28">(<argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">cty</name></expr></argument>, <argument pos:start="11:23" pos:end="11:27"><expr pos:start="11:23" pos:end="11:27"><literal type="string" pos:start="11:23" pos:end="11:27">"two"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt pos:start="12:7" pos:end="12:27"><expr pos:start="12:7" pos:end="12:26"><call pos:start="12:7" pos:end="12:26"><name pos:start="12:7" pos:end="12:14"><name pos:start="12:7" pos:end="12:9">cty</name><operator pos:start="12:10" pos:end="12:10">.</operator><name pos:start="12:11" pos:end="12:14">save</name></name><argument_list pos:start="12:15" pos:end="12:26">(<argument pos:start="12:16" pos:end="12:19"><expr pos:start="12:16" pos:end="12:19"><literal type="null" pos:start="12:16" pos:end="12:19">null</literal></expr></argument>, <argument pos:start="12:22" pos:end="12:25"><expr pos:start="12:22" pos:end="12:25"><literal type="boolean" pos:start="12:22" pos:end="12:25">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <decl_stmt pos:start="14:7" pos:end="14:50"><decl pos:start="14:7" pos:end="14:49"><type pos:start="14:7" pos:end="14:16"><name pos:start="14:7" pos:end="14:16">IRodinFile</name></type> <name pos:start="14:18" pos:end="14:20">ctz</name> <init pos:start="14:22" pos:end="14:49">= <expr pos:start="14:24" pos:end="14:49"><call pos:start="14:24" pos:end="14:49"><name pos:start="14:24" pos:end="14:38">createRodinFile</name><argument_list pos:start="14:39" pos:end="14:49">(<argument pos:start="14:40" pos:end="14:48"><expr pos:start="14:40" pos:end="14:48"><literal type="string" pos:start="14:40" pos:end="14:48">"P/z.ctx"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt pos:start="15:7" pos:end="15:31"><expr pos:start="15:7" pos:end="15:30"><call pos:start="15:7" pos:end="15:30"><name pos:start="15:7" pos:end="15:16">createData</name><argument_list pos:start="15:17" pos:end="15:30">(<argument pos:start="15:18" pos:end="15:20"><expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:20">ctz</name></expr></argument>, <argument pos:start="15:23" pos:end="15:29"><expr pos:start="15:23" pos:end="15:29"><literal type="string" pos:start="15:23" pos:end="15:29">"three"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt pos:start="16:7" pos:end="16:27"><expr pos:start="16:7" pos:end="16:26"><call pos:start="16:7" pos:end="16:26"><name pos:start="16:7" pos:end="16:14"><name pos:start="16:7" pos:end="16:9">ctz</name><operator pos:start="16:10" pos:end="16:10">.</operator><name pos:start="16:11" pos:end="16:14">save</name></name><argument_list pos:start="16:15" pos:end="16:26">(<argument pos:start="16:16" pos:end="16:19"><expr pos:start="16:16" pos:end="16:19"><literal type="null" pos:start="16:16" pos:end="16:19">null</literal></expr></argument>, <argument pos:start="16:22" pos:end="16:25"><expr pos:start="16:22" pos:end="16:25"><literal type="boolean" pos:start="16:22" pos:end="16:25">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="18:7" pos:end="19:56"><expr pos:start="18:7" pos:end="19:55"><call pos:start="18:7" pos:end="19:55"><name pos:start="18:7" pos:end="18:16">runBuilder</name><argument_list pos:start="18:17" pos:end="19:55">(<argument pos:start="18:18" pos:end="18:39"><expr pos:start="18:18" pos:end="18:39"><literal type="string" pos:start="18:18" pos:end="18:39">"CSC extract /P/x.ctx"</literal></expr></argument>, <argument pos:start="18:42" pos:end="18:59"><expr pos:start="18:42" pos:end="18:59"><literal type="string" pos:start="18:42" pos:end="18:59">"CSC run /P/x.csc"</literal></expr></argument>, <argument pos:start="18:62" pos:end="18:83"><expr pos:start="18:62" pos:end="18:83"><literal type="string" pos:start="18:62" pos:end="18:83">"CSC extract /P/y.ctx"</literal></expr></argument>,
            <argument pos:start="19:13" pos:end="19:34"><expr pos:start="19:13" pos:end="19:34"><literal type="string" pos:start="19:13" pos:end="19:34">"CSC extract /P/z.ctx"</literal></expr></argument>, <argument pos:start="19:37" pos:end="19:54"><expr pos:start="19:37" pos:end="19:54"><literal type="string" pos:start="19:37" pos:end="19:54">"CSC run /P/z.csc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function>
}</block></class></unit>
