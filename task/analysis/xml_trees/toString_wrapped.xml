<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/toString_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="19:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:25">RegexMatcher</name> <block pos:start="1:27" pos:end="19:1">{

    <function pos:start="3:5" pos:end="17:5"><type pos:start="3:5" pos:end="3:17"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:17">String</name></type> <name pos:start="3:19" pos:end="3:26">toString</name><parameter_list pos:start="3:27" pos:end="3:28">()</parameter_list> <block pos:start="3:30" pos:end="17:5">{<block_content pos:start="4:9" pos:end="16:29">
        <decl_stmt pos:start="4:9" pos:end="4:45"><decl pos:start="4:9" pos:end="4:44"><type pos:start="4:9" pos:end="4:20"><name pos:start="4:9" pos:end="4:20">StringBuffer</name></type> <name pos:start="4:22" pos:end="4:23">sb</name> <init pos:start="4:25" pos:end="4:44">= <expr pos:start="4:27" pos:end="4:44"><operator pos:start="4:27" pos:end="4:29">new</operator> <call pos:start="4:31" pos:end="4:44"><name pos:start="4:31" pos:end="4:42">StringBuffer</name><argument_list pos:start="4:43" pos:end="4:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="6:9" pos:end="6:47"><expr pos:start="6:9" pos:end="6:46"><call pos:start="6:9" pos:end="6:46"><name pos:start="6:9" pos:end="6:17"><name pos:start="6:9" pos:end="6:10">sb</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:17">append</name></name><argument_list pos:start="6:18" pos:end="6:46">( <argument pos:start="6:20" pos:end="6:44"><expr pos:start="6:20" pos:end="6:44"><literal type="string" pos:start="6:20" pos:end="6:44">"java.util.regex.Matcher"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:45"><expr pos:start="7:9" pos:end="7:44"><call pos:start="7:9" pos:end="7:44"><name pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:10">sb</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:17">append</name></name><argument_list pos:start="7:18" pos:end="7:44">( <argument pos:start="7:20" pos:end="7:42"><expr pos:start="7:20" pos:end="7:42"><literal type="string" pos:start="7:20" pos:end="7:30">"[pattern="</literal> <operator pos:start="7:32" pos:end="7:32">+</operator> <call pos:start="7:34" pos:end="7:42"><name pos:start="7:34" pos:end="7:40">pattern</name><argument_list pos:start="7:41" pos:end="7:42">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:32"><expr pos:start="8:9" pos:end="8:31"><call pos:start="8:9" pos:end="8:31"><name pos:start="8:9" pos:end="8:17"><name pos:start="8:9" pos:end="8:10">sb</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:17">append</name></name><argument_list pos:start="8:18" pos:end="8:31">( <argument pos:start="8:20" pos:end="8:29"><expr pos:start="8:20" pos:end="8:29"><literal type="string" pos:start="8:20" pos:end="8:29">" region="</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:55"><expr pos:start="9:9" pos:end="9:54"><call pos:start="9:9" pos:end="9:54"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:10">sb</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:17">append</name></name><argument_list pos:start="9:18" pos:end="9:54">( <argument pos:start="9:20" pos:end="9:52"><expr pos:start="9:20" pos:end="9:52"><call pos:start="9:20" pos:end="9:32"><name pos:start="9:20" pos:end="9:30">regionStart</name><argument_list pos:start="9:31" pos:end="9:32">()</argument_list></call> <operator pos:start="9:34" pos:end="9:34">+</operator> <literal type="string" pos:start="9:36" pos:end="9:38">","</literal> <operator pos:start="9:40" pos:end="9:40">+</operator> <call pos:start="9:42" pos:end="9:52"><name pos:start="9:42" pos:end="9:50">regionEnd</name><argument_list pos:start="9:51" pos:end="9:52">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:35"><expr pos:start="10:9" pos:end="10:34"><call pos:start="10:9" pos:end="10:34"><name pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:10">sb</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:17">append</name></name><argument_list pos:start="10:18" pos:end="10:34">( <argument pos:start="10:20" pos:end="10:32"><expr pos:start="10:20" pos:end="10:32"><literal type="string" pos:start="10:20" pos:end="10:32">" lastmatch="</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="12:9" pos:end="14:9"><if pos:start="12:9" pos:end="14:9">if <condition pos:start="12:12" pos:end="12:50">(<expr pos:start="12:13" pos:end="12:49"><operator pos:start="12:13" pos:end="12:13">(</operator> <name pos:start="12:15" pos:end="12:19">first</name> <operator pos:start="12:21" pos:end="12:22">&gt;=</operator> <literal type="number" pos:start="12:24" pos:end="12:24">0</literal> <operator pos:start="12:26" pos:end="12:26">)</operator> <operator pos:start="12:28" pos:end="12:29">&amp;&amp;</operator> <operator pos:start="12:31" pos:end="12:31">(</operator> <call pos:start="12:33" pos:end="12:39"><name pos:start="12:33" pos:end="12:37">group</name><argument_list pos:start="12:38" pos:end="12:39">()</argument_list></call> <operator pos:start="12:41" pos:end="12:42">!=</operator> <literal type="null" pos:start="12:44" pos:end="12:47">null</literal> <operator pos:start="12:49" pos:end="12:49">)</operator></expr>)</condition> <block pos:start="12:52" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:33">
            <expr_stmt pos:start="13:13" pos:end="13:33"><expr pos:start="13:13" pos:end="13:32"><call pos:start="13:13" pos:end="13:32"><name pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:14">sb</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:21">append</name></name><argument_list pos:start="13:22" pos:end="13:32">( <argument pos:start="13:24" pos:end="13:30"><expr pos:start="13:24" pos:end="13:30"><call pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:28">group</name><argument_list pos:start="13:29" pos:end="13:30">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><call pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:10">sb</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:17">append</name></name><argument_list pos:start="15:18" pos:end="15:24">( <argument pos:start="15:20" pos:end="15:22"><expr pos:start="15:20" pos:end="15:22"><literal type="string" pos:start="15:20" pos:end="15:22">"]"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <return pos:start="16:9" pos:end="16:29">return <expr pos:start="16:16" pos:end="16:28"><call pos:start="16:16" pos:end="16:28"><name pos:start="16:16" pos:end="16:26"><name pos:start="16:16" pos:end="16:17">sb</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:26">toString</name></name><argument_list pos:start="16:27" pos:end="16:28">()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

}</block></class></unit>
