<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/fetchString_wrapped.java"><class><specifier>public</specifier> class <name>MyClass</name> <block>{
    <function><type><specifier>protected</specifier> <name>String</name></type> <name>fetchString</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>register</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>getData</name><argument_list>(<argument><expr><name>register</name></expr></argument>, <argument><expr><name>byteBuff</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>char</name><index>[]</index></name></type> <name>charBuff</name> <init>= <expr><operator>new</operator> <name><name>char</name><index>[<expr><name>len</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
            <expr_stmt><expr><name><name>charBuff</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><ternary><condition><expr><name><name>byteBuff</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><literal type="char">' '</literal></expr> </then><else>: <expr><operator>(</operator><name>char</name><operator>)</operator> <name><name>byteBuff</name><index>[<expr><name>i</name></expr>]</index></name></expr></else></ternary><operator>)</operator></expr>;</expr_stmt></block_content></block></for>
        <return>return <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><name>charBuff</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
