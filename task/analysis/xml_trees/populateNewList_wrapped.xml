<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/populateNewList_wrapped.java"><class><specifier>public</specifier> class <name>ResourceList</name> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Wrapper</name></argument>&gt;</argument_list></name></type> <name>newResources</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>DefaultListModel</name><argument_list type="generic">&lt;<argument><name>Wrapper</name></argument>&gt;</argument_list></name></type> <name>newListModel</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>ResourceList</name><parameter_list>()</parameter_list> <block>{<block_content>
        <comment type="line">// constructor code here</comment>
    </block_content>}</block></constructor>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>populateNewList</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name>newResources</name> <operator>=</operator> <call><name>mergeNewResources</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>SwingUtilities</name><operator>.</operator><name>invokeLater</name></name><argument_list>( <argument><expr><operator>new</operator> <class><super><name>Runnable</name></super><argument_list>()</argument_list> <block>{
            <function><annotation>@<name>SuppressWarnings</name><argument_list>( <argument><expr><literal type="string">"synthetic-access"</literal></expr></argument> )</argument_list></annotation>
            <annotation>@<name>Override</name></annotation>
            <type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
                <expr_stmt><expr><call><name><name>newListModel</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <for>for <control>( <init><decl><type><name>Wrapper</name></type> <name>wr</name> <range>: <expr><name>newResources</name></expr></range></decl></init> )</control><block type="pseudo"><block_content>
                    <expr_stmt><expr><call><name><name>newListModel</name><operator>.</operator><name>addElement</name></name><argument_list>( <argument><expr><name>wr</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>private</specifier> <name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Wrapper</name></argument>&gt;</argument_list></name></type> <name>mergeNewResources</name><parameter_list>()</parameter_list> <block>{<block_content>
        <comment type="line">// merge code here</comment>
    </block_content>}</block></function>
}</block></class></unit>
