<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/invalidateSession_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="12:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:27">SessionManager</name> <block pos:start="1:29" pos:end="12:1">{
    <function pos:start="2:5" pos:end="11:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:33">invalidateSession</name><parameter_list pos:start="2:34" pos:end="2:57">(<parameter pos:start="2:35" pos:end="2:44"><decl pos:start="2:35" pos:end="2:44"><type pos:start="2:35" pos:end="2:44"><name pos:start="2:35" pos:end="2:40">String</name></type> <name pos:start="2:42" pos:end="2:44">uid</name></decl></parameter>, <parameter pos:start="2:47" pos:end="2:56"><decl pos:start="2:47" pos:end="2:56"><type pos:start="2:47" pos:end="2:56"><name pos:start="2:47" pos:end="2:52">String</name></type> <name pos:start="2:54" pos:end="2:56">sid</name></decl></parameter>)</parameter_list> <block pos:start="2:59" pos:end="11:5">{<block_content pos:start="3:9" pos:end="10:45">
        <expr_stmt pos:start="3:9" pos:end="3:102"><expr pos:start="3:9" pos:end="3:101"><call pos:start="3:9" pos:end="3:101"><name pos:start="3:9" pos:end="3:17"><name pos:start="3:9" pos:end="3:11">cat</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:17">debug</name></name><argument_list pos:start="3:18" pos:end="3:101">(<argument pos:start="3:19" pos:end="3:100"><expr pos:start="3:19" pos:end="3:100"><literal type="string" pos:start="3:19" pos:end="3:43">"==&gt; invalidateSession( "</literal> <operator pos:start="3:45" pos:end="3:45">+</operator> <call pos:start="3:47" pos:end="3:65"><name pos:start="3:47" pos:end="3:60"><name pos:start="3:47" pos:end="3:52">String</name><operator pos:start="3:53" pos:end="3:53">.</operator><name pos:start="3:54" pos:end="3:60">valueOf</name></name><argument_list pos:start="3:61" pos:end="3:65">(<argument pos:start="3:62" pos:end="3:64"><expr pos:start="3:62" pos:end="3:64"><name pos:start="3:62" pos:end="3:64">uid</name></expr></argument>)</argument_list></call> <operator pos:start="3:67" pos:end="3:67">+</operator> <literal type="string" pos:start="3:69" pos:end="3:72">", "</literal> <operator pos:start="3:74" pos:end="3:74">+</operator> <call pos:start="3:76" pos:end="3:94"><name pos:start="3:76" pos:end="3:89"><name pos:start="3:76" pos:end="3:81">String</name><operator pos:start="3:82" pos:end="3:82">.</operator><name pos:start="3:83" pos:end="3:89">valueOf</name></name><argument_list pos:start="3:90" pos:end="3:94">(<argument pos:start="3:91" pos:end="3:93"><expr pos:start="3:91" pos:end="3:93"><name pos:start="3:91" pos:end="3:93">sid</name></expr></argument>)</argument_list></call> <operator pos:start="3:96" pos:end="3:96">+</operator> <literal type="string" pos:start="3:98" pos:end="3:100">")"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <synchronized pos:start="5:9" pos:end="9:9">synchronized <init pos:start="5:22" pos:end="5:27">(<expr pos:start="5:23" pos:end="5:26"><name pos:start="5:23" pos:end="5:26">lock</name></expr>)</init> <block pos:start="5:29" pos:end="9:9">{<block_content pos:start="6:13" pos:end="8:32">
            <expr_stmt pos:start="6:13" pos:end="6:32"><expr pos:start="6:13" pos:end="6:31"><call pos:start="6:13" pos:end="6:31"><name pos:start="6:13" pos:end="6:26"><name pos:start="6:13" pos:end="6:19">uid2sid</name><operator pos:start="6:20" pos:end="6:20">.</operator><name pos:start="6:21" pos:end="6:26">remove</name></name><argument_list pos:start="6:27" pos:end="6:31">(<argument pos:start="6:28" pos:end="6:30"><expr pos:start="6:28" pos:end="6:30"><name pos:start="6:28" pos:end="6:30">uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="7:13" pos:end="7:32"><expr pos:start="7:13" pos:end="7:31"><call pos:start="7:13" pos:end="7:31"><name pos:start="7:13" pos:end="7:26"><name pos:start="7:13" pos:end="7:19">sid2ssc</name><operator pos:start="7:20" pos:end="7:20">.</operator><name pos:start="7:21" pos:end="7:26">remove</name></name><argument_list pos:start="7:27" pos:end="7:31">(<argument pos:start="7:28" pos:end="7:30"><expr pos:start="7:28" pos:end="7:30"><name pos:start="7:28" pos:end="7:30">sid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="8:13" pos:end="8:32"><expr pos:start="8:13" pos:end="8:31"><call pos:start="8:13" pos:end="8:31"><name pos:start="8:13" pos:end="8:26"><name pos:start="8:13" pos:end="8:19">sid2ttl</name><operator pos:start="8:20" pos:end="8:20">.</operator><name pos:start="8:21" pos:end="8:26">remove</name></name><argument_list pos:start="8:27" pos:end="8:31">(<argument pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><name pos:start="8:28" pos:end="8:30">sid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></synchronized>
        <expr_stmt pos:start="10:9" pos:end="10:45"><expr pos:start="10:9" pos:end="10:44"><call pos:start="10:9" pos:end="10:44"><name pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:11">cat</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:17">debug</name></name><argument_list pos:start="10:18" pos:end="10:44">(<argument pos:start="10:19" pos:end="10:43"><expr pos:start="10:19" pos:end="10:43"><literal type="string" pos:start="10:19" pos:end="10:43">"&lt;== invalidateSession()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
