<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/go_wrapped.java"><class><specifier>public</specifier> class <name>ChatClient</name> <block>{
    <function><type><specifier>public</specifier> <name>void</name></type> <name>go</name><parameter_list>( <parameter><decl><type><name>String</name></type> <name>theUserName</name></decl></parameter> )</parameter_list> <block>{<block_content>
        <try>try <block>{<block_content>
            <expr_stmt><expr><operator>new</operator> <call><name>ChatUI</name><argument_list>(<argument><expr><operator>(</operator> <name>MessageInputReceiver</name> <operator>)</operator> <name>this</name></expr></argument>, <argument><expr><name>theUserName</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// shake hands</comment>
            <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>println</name></name><argument_list>( <argument><expr><name>theUserName</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>writer</name><operator>.</operator><name>flush</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// OK means init with server went well</comment>

            <if_stmt><if>if <condition>( <expr><call><name><name>reader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>( <argument><expr><literal type="string">"OK"</literal></expr></argument> )</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>initialized</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>readChat</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else>else <block>{<block_content>
                <expr_stmt><expr><call><name>bailOut</name><argument_list>( <argument><expr><operator>new</operator> <call><name>IOException</name><argument_list>( <argument><expr><literal type="string">"handshake failed"</literal></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block> <catch>catch <parameter_list>( <parameter><decl><type><name>IOException</name></type> <name>ioe</name></decl></parameter> )</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>bailOut</name><argument_list>( <argument><expr><name>ioe</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch> <catch>catch <parameter_list>( <parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter> )</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>bailOut</name><argument_list>( <argument><expr><name>e</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
}</block></class></unit>
