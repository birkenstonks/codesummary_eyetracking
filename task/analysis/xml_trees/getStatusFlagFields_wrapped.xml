<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getStatusFlagFields_wrapped.java" pos:tabs="8"><expr_stmt pos:start="1:1" pos:end="14:9"><expr pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:13">Unfortunately</name></expr><operator pos:start="1:14" pos:end="1:14">,</operator> <expr pos:start="1:16" pos:end="1:38"><name pos:start="1:16" pos:end="1:17">as</name> <name pos:start="1:19" pos:end="1:20">an</name> <name pos:start="1:22" pos:end="1:23">AI</name> <name pos:start="1:25" pos:end="1:32">language</name> <name pos:start="1:34" pos:end="1:38">model</name></expr><operator pos:start="1:39" pos:end="1:39">,</operator> <expr pos:start="1:41" pos:end="1:78"><name pos:start="1:41" pos:end="1:41">I</name> <name pos:start="1:43" pos:end="1:44">am</name> <name pos:start="1:46" pos:end="1:48">not</name> <name pos:start="1:50" pos:end="1:53">able</name> <name pos:start="1:55" pos:end="1:56">to</name> <name pos:start="1:58" pos:end="1:63">create</name> <name pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:69">files</name><operator pos:start="1:70" pos:end="1:70">.</operator> <name pos:start="1:72" pos:end="1:78">However</name></name></expr><operator pos:start="1:79" pos:end="1:79">,</operator> <expr pos:start="1:81" pos:end="14:9"><name pos:start="1:81" pos:end="1:81">I</name> <name pos:start="1:83" pos:end="1:85">can</name> <name pos:start="1:87" pos:end="1:93">provide</name> <name pos:start="1:95" pos:end="1:97">you</name> <name pos:start="1:99" pos:end="1:102">with</name> <name pos:start="1:104" pos:end="1:106">the</name> <name pos:start="1:108" pos:end="1:112">class</name> <name pos:start="1:114" pos:end="1:122">structure</name> <name pos:start="1:124" pos:end="1:126">you</name> <name pos:start="1:128" pos:end="1:130">can</name> <name pos:start="1:132" pos:end="1:134">use</name> <name pos:start="1:136" pos:end="1:137">to</name> <name pos:start="1:139" pos:end="1:142">wrap</name> <name pos:start="1:144" pos:end="1:147">your</name> <name pos:start="1:149" pos:end="1:156">function</name><operator pos:start="1:157" pos:end="1:157">:</operator>

<specifier pos:start="3:1" pos:end="3:6">public</specifier> <name pos:start="3:8" pos:end="3:12">class</name> <name pos:start="3:14" pos:end="3:20">MyClass</name> <block pos:start="3:22" pos:end="14:9">{
    
    <expr pos:start="5:5" pos:end="13:13"><specifier pos:start="5:5" pos:end="5:10">public</specifier> <name pos:start="5:12" pos:end="5:15">List</name> <call pos:start="5:17" pos:end="5:37"><name pos:start="5:17" pos:end="5:35">getStatusFlagFields</name><argument_list pos:start="5:36" pos:end="5:37">()</argument_list></call> <block pos:start="5:39" pos:end="13:13">{
        <expr pos:start="6:9" pos:end="6:35"><name pos:start="6:9" pos:end="6:12">List</name> <name pos:start="6:14" pos:end="6:17">list</name> <operator pos:start="6:19" pos:end="6:19">=</operator> <operator pos:start="6:21" pos:end="6:23">new</operator> <call pos:start="6:25" pos:end="6:35"><name pos:start="6:25" pos:end="6:33">ArrayList</name><argument_list pos:start="6:34" pos:end="6:35">()</argument_list></call></expr>;
        <expr pos:start="7:9" pos:end="7:87"><name pos:start="7:9" pos:end="7:14">String</name> <name pos:start="7:16" pos:end="7:29">statusFlagPath</name> <operator pos:start="7:31" pos:end="7:31">=</operator> <literal type="string" pos:start="7:33" pos:end="7:87">"/collectionConfigRecord/statusFlags/statusFlag/status"</literal></expr>;
        <for pos:start="8:9" pos:end="12:34">for <control pos:start="8:13" pos:end="8:73">( <init pos:start="8:15" pos:end="8:58"><decl pos:start="8:15" pos:end="8:57"><type pos:start="8:15" pos:end="8:22"><name pos:start="8:15" pos:end="8:22">Iterator</name></type> <name pos:start="8:24" pos:end="8:24">i</name> <init pos:start="8:26" pos:end="8:57">= <expr pos:start="8:28" pos:end="8:57"><call pos:start="8:28" pos:end="8:46"><name pos:start="8:28" pos:end="8:44"><name pos:start="8:28" pos:end="8:29">im</name><operator pos:start="8:30" pos:end="8:30">.</operator><name pos:start="8:31" pos:end="8:44">getInputFields</name></name><argument_list pos:start="8:45" pos:end="8:46">()</argument_list></call><operator pos:start="8:47" pos:end="8:47">.</operator><call pos:start="8:48" pos:end="8:57"><name pos:start="8:48" pos:end="8:55">iterator</name><argument_list pos:start="8:56" pos:end="8:57">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="8:60" pos:end="8:71"><expr pos:start="8:60" pos:end="8:70"><call pos:start="8:60" pos:end="8:70"><name pos:start="8:60" pos:end="8:68"><name pos:start="8:60" pos:end="8:60">i</name><operator pos:start="8:61" pos:end="8:61">.</operator><name pos:start="8:62" pos:end="8:68">hasNext</name></name><argument_list pos:start="8:69" pos:end="8:70">()</argument_list></call></expr>;</condition> <incr/>)</control> <block pos:start="8:75" pos:end="12:34">{<block_content pos:start="9:13" pos:end="12:34">
            <decl_stmt pos:start="9:13" pos:end="9:55"><decl pos:start="9:13" pos:end="9:54"><type pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:22">InputField</name></type> <name pos:start="9:24" pos:end="9:28">field</name> <init pos:start="9:30" pos:end="9:54">= <expr pos:start="9:32" pos:end="9:54"><operator pos:start="9:32" pos:end="9:32">(</operator> <name pos:start="9:34" pos:end="9:43">InputField</name> <operator pos:start="9:45" pos:end="9:45">)</operator> <call pos:start="9:47" pos:end="9:54"><name pos:start="9:47" pos:end="9:52"><name pos:start="9:47" pos:end="9:47">i</name><operator pos:start="9:48" pos:end="9:48">.</operator><name pos:start="9:49" pos:end="9:52">next</name></name><argument_list pos:start="9:53" pos:end="9:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:start="10:13" pos:end="10:42">// prtln ( field.toString() );</comment>
            <if_stmt pos:start="11:13" pos:end="12:34"><if pos:start="11:13" pos:end="12:34">if <condition pos:start="11:16" pos:end="11:73">( <expr pos:start="11:18" pos:end="11:72"><call pos:start="11:18" pos:end="11:43"><name pos:start="11:18" pos:end="11:41"><name pos:start="11:18" pos:end="11:22">field</name><operator pos:start="11:23" pos:end="11:23">.</operator><name pos:start="11:24" pos:end="11:41">getNormalizedXPath</name></name><argument_list pos:start="11:42" pos:end="11:43">()</argument_list></call><operator pos:start="11:44" pos:end="11:44">.</operator><call pos:start="11:45" pos:end="11:72"><name pos:start="11:45" pos:end="11:54">startsWith</name><argument_list pos:start="11:55" pos:end="11:72">( <argument pos:start="11:57" pos:end="11:70"><expr pos:start="11:57" pos:end="11:70"><name pos:start="11:57" pos:end="11:70">statusFlagPath</name></expr></argument> )</argument_list></call></expr>)</condition> <block pos:start="11:75" pos:end="12:34">{<block_content pos:start="12:17" pos:end="12:34">
                <expr_stmt pos:start="12:17" pos:end="12:34"><expr pos:start="12:17" pos:end="12:33"><call pos:start="12:17" pos:end="12:33"><name pos:start="12:17" pos:end="12:24"><name pos:start="12:17" pos:end="12:20">list</name><operator pos:start="12:21" pos:end="12:21">.</operator><name pos:start="12:22" pos:end="12:24">add</name></name><argument_list pos:start="12:25" pos:end="12:33">( <argument pos:start="12:27" pos:end="12:31"><expr pos:start="12:27" pos:end="12:31"><name pos:start="12:27" pos:end="12:31">field</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt/></block_content></block></if></if_stmt></block_content></block></for>}</block></expr>
        }</block></expr></expr_stmt>
        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">list</name></expr>;</return>
    }
} 

<expr_stmt pos:start="19:1" pos:end="19:12"><expr pos:start="19:1" pos:end="19:12"><name pos:start="19:1" pos:end="19:4">Make</name> <name pos:start="19:6" pos:end="19:9">sure</name> <name pos:start="19:11" pos:end="19:12">to</name></expr></expr_stmt> <import pos:start="19:14" pos:end="19:95">import <name pos:start="19:21" pos:end="19:23">the</name> <name pos:start="19:25" pos:end="19:33">necessary</name> <name pos:start="19:35" pos:end="19:43">libraries</name> <name pos:start="19:45" pos:end="19:47">and</name> <name pos:start="19:49" pos:end="19:59">instantiate</name> <name pos:start="19:61" pos:end="19:63">the</name> <name pos:start="19:65" pos:end="19:74">InputField</name> <name pos:start="19:76" pos:end="19:81">object</name> <name pos:start="19:83" pos:end="19:84">in</name> <name pos:start="19:86" pos:end="19:89">your</name> <name pos:start="19:91" pos:end="19:95"><name pos:start="19:91" pos:end="19:94">code</name><operator pos:start="19:95" pos:end="19:95">.</operator></name></import></unit>
