<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/setUrls_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="17:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:22">UrlSetter</name> <block pos:start="1:24" pos:end="17:1">{
    <decl_stmt pos:start="2:5" pos:end="2:26"><decl pos:start="2:5" pos:end="2:25"><type pos:start="2:5" pos:end="2:20"><specifier pos:start="2:5" pos:end="2:11">private</specifier> <name pos:start="2:13" pos:end="2:20"><name pos:start="2:13" pos:end="2:18">String</name><index pos:start="2:19" pos:end="2:20">[]</index></name></type> <name pos:start="2:22" pos:end="2:25">urls</name></decl>;</decl_stmt>
    <decl_stmt pos:start="3:5" pos:end="3:70"><decl pos:start="3:5" pos:end="3:69"><type pos:start="3:5" pos:end="3:18"><specifier pos:start="3:5" pos:end="3:11">private</specifier> <name pos:start="3:13" pos:end="3:18">String</name></type> <name pos:start="3:20" pos:end="3:41">illegalPostProssingMsg</name> <init pos:start="3:43" pos:end="3:69">= <expr pos:start="3:45" pos:end="3:69"><literal type="string" pos:start="3:45" pos:end="3:69">"Illegal Post-Processing"</literal></expr></init></decl>;</decl_stmt>

    <function pos:start="5:5" pos:end="16:5"><type pos:start="5:5" pos:end="5:15"><specifier pos:start="5:5" pos:end="5:10">public</specifier> <name pos:start="5:12" pos:end="5:15">void</name></type> <name pos:start="5:17" pos:end="5:23">setUrls</name><parameter_list pos:start="5:24" pos:end="5:43">( <parameter pos:start="5:26" pos:end="5:41"><decl pos:start="5:26" pos:end="5:41"><type pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:31">String</name><index pos:start="5:32" pos:end="5:33">[]</index></name></type> <name pos:start="5:35" pos:end="5:41">theUrls</name></decl></parameter> )</parameter_list> <throws pos:start="5:45" pos:end="5:72">throws <argument pos:start="5:52" pos:end="5:72"><expr pos:start="5:52" pos:end="5:72"><name pos:start="5:52" pos:end="5:72">IllegalStateException</name></expr></argument></throws> <block pos:start="5:74" pos:end="16:5">{<block_content pos:start="6:9" pos:end="15:29">
        <if_stmt pos:start="6:9" pos:end="7:70"><if pos:start="6:9" pos:end="7:70">if <condition pos:start="6:12" pos:end="6:27">( <expr pos:start="6:14" pos:end="6:25"><name pos:start="6:14" pos:end="6:25">xmlProcessed</name></expr> )</condition><block type="pseudo" pos:start="7:13" pos:end="7:70"><block_content pos:start="7:13" pos:end="7:70">
            <throw pos:start="7:13" pos:end="7:70">throw <expr pos:start="7:19" pos:end="7:69"><operator pos:start="7:19" pos:end="7:21">new</operator> <call pos:start="7:23" pos:end="7:69"><name pos:start="7:23" pos:end="7:43">IllegalStateException</name><argument_list pos:start="7:44" pos:end="7:69">( <argument pos:start="7:46" pos:end="7:67"><expr pos:start="7:46" pos:end="7:67"><name pos:start="7:46" pos:end="7:67">illegalPostProssingMsg</name></expr></argument> )</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
		
        <if_stmt pos:start="9:9" pos:end="15:29"><if pos:start="9:9" pos:end="13:9">if<condition pos:start="9:11" pos:end="9:29">( <expr pos:start="9:13" pos:end="9:27"><name pos:start="9:13" pos:end="9:19">theUrls</name> <operator pos:start="9:21" pos:end="9:22">!=</operator> <literal type="null" pos:start="9:24" pos:end="9:27">null</literal></expr> )</condition> <block pos:start="9:31" pos:end="13:9">{<block_content pos:start="10:13" pos:end="12:68">
            <expr_stmt pos:start="10:13" pos:end="10:54"><expr pos:start="10:13" pos:end="10:53"><name pos:start="10:13" pos:end="10:21"><name pos:start="10:13" pos:end="10:16">this</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:21">urls</name></name> <operator pos:start="10:23" pos:end="10:23">=</operator> <operator pos:start="10:25" pos:end="10:27">new</operator> <name pos:start="10:29" pos:end="10:53"><name pos:start="10:29" pos:end="10:34">String</name> <index pos:start="10:36" pos:end="10:53">[ <expr pos:start="10:38" pos:end="10:51"><name pos:start="10:38" pos:end="10:51"><name pos:start="10:38" pos:end="10:44">theUrls</name><operator pos:start="10:45" pos:end="10:45">.</operator><name pos:start="10:46" pos:end="10:51">length</name></name></expr> ]</index></name></expr>;</expr_stmt>
            <for pos:start="11:13" pos:end="12:68">for<control pos:start="11:16" pos:end="11:53">( <init pos:start="11:18" pos:end="11:27"><decl pos:start="11:18" pos:end="11:26"><type pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">int</name></type> <name pos:start="11:22" pos:end="11:22">i</name> <init pos:start="11:24" pos:end="11:26">= <expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr></init></decl>;</init> <condition pos:start="11:29" pos:end="11:47"><expr pos:start="11:29" pos:end="11:46"><name pos:start="11:29" pos:end="11:29">i</name> <operator pos:start="11:31" pos:end="11:31">&lt;</operator> <name pos:start="11:33" pos:end="11:46"><name pos:start="11:33" pos:end="11:39">theUrls</name><operator pos:start="11:40" pos:end="11:40">.</operator><name pos:start="11:41" pos:end="11:46">length</name></name></expr>;</condition> <incr pos:start="11:49" pos:end="11:51"><expr pos:start="11:49" pos:end="11:51"><name pos:start="11:49" pos:end="11:49">i</name><operator pos:start="11:50" pos:end="11:51">++</operator></expr></incr> )</control><block type="pseudo" pos:start="12:17" pos:end="12:68"><block_content pos:start="12:17" pos:end="12:68">
                <expr_stmt pos:start="12:17" pos:end="12:68"><expr pos:start="12:17" pos:end="12:67"><name pos:start="12:17" pos:end="12:30"><name pos:start="12:17" pos:end="12:20">this</name><operator pos:start="12:21" pos:end="12:21">.</operator><name pos:start="12:22" pos:end="12:25">urls</name><index pos:start="12:26" pos:end="12:30">[ <expr pos:start="12:28" pos:end="12:28"><name pos:start="12:28" pos:end="12:28">i</name></expr> ]</index></name> <operator pos:start="12:32" pos:end="12:32">=</operator> <call pos:start="12:34" pos:end="12:67"><name pos:start="12:34" pos:end="12:52"><name pos:start="12:34" pos:end="12:42">UrlHelper</name><operator pos:start="12:43" pos:end="12:43">.</operator><name pos:start="12:44" pos:end="12:52">normalize</name></name><argument_list pos:start="12:53" pos:end="12:67">( <argument pos:start="12:55" pos:end="12:66"><expr pos:start="12:55" pos:end="12:66"><name pos:start="12:55" pos:end="12:66"><name pos:start="12:55" pos:end="12:61">theUrls</name><index pos:start="12:62" pos:end="12:66">[ <expr pos:start="12:64" pos:end="12:64"><name pos:start="12:64" pos:end="12:64">i</name></expr> ]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
        </block_content>}</block></if>
        <else pos:start="14:9" pos:end="15:29">else<block type="pseudo" pos:start="15:13" pos:end="15:29"><block_content pos:start="15:13" pos:end="15:29">
            <expr_stmt pos:start="15:13" pos:end="15:29"><expr pos:start="15:13" pos:end="15:28"><name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:16">this</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:21">urls</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:28">urls</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></function>
}</block></class></unit>
