<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/moveUpTarget_wrapped.java"><class><specifier>public</specifier> class <name>MoveUpTarget</name> <block>{

    <function><type><specifier>public</specifier> <name>void</name></type> <name>moveUpTarget</name><parameter_list>( <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter> )</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Object</name></type> <name>target</name><init>= <expr><call><name><name>targets</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><name>index</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>( <expr><name>index</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>target</name> <operator>==</operator> <literal type="null">null</literal></expr> )</condition> <block>{<block_content>
            <return>return;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt><expr><call><name><name>targets</name><operator>.</operator><name>set</name></name><argument_list>( <argument><expr><name>index</name></expr></argument>, <argument><expr><call><name><name>targets</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><name>index</name> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>targets</name><operator>.</operator><name>set</name></name><argument_list>( <argument><expr><name>index</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>target</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>( <argument><expr><literal type="string">"New ordering"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>targets</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>( <argument><expr><literal type="string">"|t"</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <call><name><name>targets</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></function>
    
}</block></class></unit>
