<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/exportXVRL_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="10:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:21">Exporter</name> <block pos:start="1:23" pos:end="10:1">{
    <function pos:start="2:5" pos:end="9:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:26">exportXVRL</name><parameter_list pos:start="2:27" pos:end="2:53">( <parameter pos:start="2:29" pos:end="2:51"><decl pos:start="2:29" pos:end="2:51"><type pos:start="2:29" pos:end="2:43"><name pos:start="2:29" pos:end="2:43">XMLStreamWriter</name></type> <name pos:start="2:45" pos:end="2:51">xvrLDoc</name></decl></parameter> )</parameter_list> <throws pos:start="2:55" pos:end="2:70">throws <argument pos:start="2:62" pos:end="2:70"><expr pos:start="2:62" pos:end="2:70"><name pos:start="2:62" pos:end="2:70">Exception</name></expr></argument></throws><block pos:start="2:71" pos:end="9:5">{<block_content pos:start="3:9" pos:end="8:61">
        <decl_stmt pos:start="3:9" pos:end="3:80"><decl pos:start="3:9" pos:end="3:79"><type pos:start="3:9" pos:end="3:19"><name pos:start="3:9" pos:end="3:19">JAXBContext</name></type> <name pos:start="3:21" pos:end="3:27">context</name> <init pos:start="3:29" pos:end="3:79">= <expr pos:start="3:31" pos:end="3:79"><call pos:start="3:31" pos:end="3:79"><name pos:start="3:31" pos:end="3:53"><name pos:start="3:31" pos:end="3:41">JAXBContext</name><operator pos:start="3:42" pos:end="3:42">.</operator><name pos:start="3:43" pos:end="3:53">newInstance</name></name><argument_list pos:start="3:54" pos:end="3:79">( <argument pos:start="3:56" pos:end="3:77"><expr pos:start="3:56" pos:end="3:77"><name pos:start="3:56" pos:end="3:77"><name pos:start="3:56" pos:end="3:71">ValidationReport</name><operator pos:start="3:72" pos:end="3:72">.</operator><name pos:start="3:73" pos:end="3:77">class</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="4:9" pos:end="4:50"><decl pos:start="4:9" pos:end="4:49"><type pos:start="4:9" pos:end="4:18"><name pos:start="4:9" pos:end="4:18">Marshaller</name></type> <name pos:start="4:20" pos:end="4:20">m</name> <init pos:start="4:22" pos:end="4:49">= <expr pos:start="4:24" pos:end="4:49"><call pos:start="4:24" pos:end="4:49"><name pos:start="4:24" pos:end="4:47"><name pos:start="4:24" pos:end="4:30">context</name><operator pos:start="4:31" pos:end="4:31">.</operator><name pos:start="4:32" pos:end="4:47">createMarshaller</name></name><argument_list pos:start="4:48" pos:end="4:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="5:9" pos:end="5:64"><expr pos:start="5:9" pos:end="5:63"><call pos:start="5:9" pos:end="5:63"><name pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:9">m</name><operator pos:start="5:10" pos:end="5:10">.</operator><name pos:start="5:11" pos:end="5:21">setProperty</name></name><argument_list pos:start="5:22" pos:end="5:63">( <argument pos:start="5:24" pos:end="5:55"><expr pos:start="5:24" pos:end="5:55"><name pos:start="5:24" pos:end="5:55"><name pos:start="5:24" pos:end="5:33">Marshaller</name><operator pos:start="5:34" pos:end="5:34">.</operator><name pos:start="5:35" pos:end="5:55">JAXB_FORMATTED_OUTPUT</name></name></expr></argument>, <argument pos:start="5:58" pos:end="5:61"><expr pos:start="5:58" pos:end="5:61"><literal type="boolean" pos:start="5:58" pos:end="5:61">true</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="6:9" pos:end="6:51"><decl pos:start="6:9" pos:end="6:50"><type pos:start="6:9" pos:end="6:24"><name pos:start="6:9" pos:end="6:24">ValidationReport</name></type> <name pos:start="6:26" pos:end="6:32">vReport</name> <init pos:start="6:34" pos:end="6:50">= <expr pos:start="6:36" pos:end="6:50"><call pos:start="6:36" pos:end="6:50"><name pos:start="6:36" pos:end="6:48">exportVReport</name><argument_list pos:start="6:49" pos:end="6:50">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="8:9" pos:end="8:61"><if pos:start="8:9" pos:end="8:61">if <condition pos:start="8:12" pos:end="8:30">( <expr pos:start="8:14" pos:end="8:28"><name pos:start="8:14" pos:end="8:20">vReport</name> <operator pos:start="8:22" pos:end="8:23">!=</operator> <literal type="null" pos:start="8:25" pos:end="8:28">null</literal></expr> )</condition><block type="pseudo" pos:start="8:32" pos:end="8:61"><block_content pos:start="8:32" pos:end="8:61"> <expr_stmt pos:start="8:32" pos:end="8:61"><expr pos:start="8:32" pos:end="8:60"><call pos:start="8:32" pos:end="8:60"><name pos:start="8:32" pos:end="8:40"><name pos:start="8:32" pos:end="8:32">m</name><operator pos:start="8:33" pos:end="8:33">.</operator><name pos:start="8:34" pos:end="8:40">marshal</name></name><argument_list pos:start="8:41" pos:end="8:60">( <argument pos:start="8:43" pos:end="8:49"><expr pos:start="8:43" pos:end="8:49"><name pos:start="8:43" pos:end="8:49">vReport</name></expr></argument>, <argument pos:start="8:52" pos:end="8:58"><expr pos:start="8:52" pos:end="8:58"><name pos:start="8:52" pos:end="8:58">xvrLDoc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></function>
}</block></class></unit>
