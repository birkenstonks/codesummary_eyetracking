<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/resolveValue_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="14:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:29">TemplateResolver</name> <block pos:start="1:31" pos:end="14:1">{
    <function pos:start="2:5" pos:end="13:5"><type pos:start="2:5" pos:end="2:20"><specifier pos:start="2:5" pos:end="2:13">protected</specifier> <name pos:start="2:15" pos:end="2:20">String</name></type> <name pos:start="2:22" pos:end="2:33">resolveValue</name><parameter_list pos:start="2:34" pos:end="2:72">(<parameter pos:start="2:35" pos:end="2:56"><decl pos:start="2:35" pos:end="2:56"><type pos:start="2:35" pos:end="2:56"><name pos:start="2:35" pos:end="2:47">MagnetContext</name></type> <name pos:start="2:49" pos:end="2:56">aContext</name></decl></parameter>, <parameter pos:start="2:59" pos:end="2:71"><decl pos:start="2:59" pos:end="2:71"><type pos:start="2:59" pos:end="2:71"><name pos:start="2:59" pos:end="2:64">String</name></type> <name pos:start="2:66" pos:end="2:71">aValue</name></decl></parameter>)</parameter_list> <throws pos:start="2:74" pos:end="2:98">throws <argument pos:start="2:81" pos:end="2:98"><expr pos:start="2:81" pos:end="2:98"><name pos:start="2:81" pos:end="2:98">RenderingException</name></expr></argument></throws> <block pos:start="2:100" pos:end="13:5">{<block_content pos:start="3:9" pos:end="12:9">
        <try pos:start="3:9" pos:end="12:9">try <block pos:start="3:13" pos:end="10:9">{<block_content pos:start="4:13" pos:end="9:13">
            <if_stmt pos:start="4:13" pos:end="9:13"><if pos:start="4:13" pos:end="6:13">if <condition pos:start="4:16" pos:end="4:31">(<expr pos:start="4:17" pos:end="4:30"><name pos:start="4:17" pos:end="4:22">aValue</name> <operator pos:start="4:24" pos:end="4:25">==</operator> <literal type="null" pos:start="4:27" pos:end="4:30">null</literal></expr>)</condition> <block pos:start="4:33" pos:end="6:13">{<block_content pos:start="5:17" pos:end="5:28">
                <return pos:start="5:17" pos:end="5:28">return <expr pos:start="5:24" pos:end="5:27"><literal type="null" pos:start="5:24" pos:end="5:27">null</literal></expr>;</return>
            </block_content>}</block></if> <else pos:start="6:15" pos:end="9:13">else <block pos:start="6:20" pos:end="9:13">{<block_content pos:start="7:17" pos:end="8:50">
                <decl_stmt pos:start="7:17" pos:end="7:80"><decl pos:start="7:17" pos:end="7:79"><type pos:start="7:17" pos:end="7:33"><name pos:start="7:17" pos:end="7:33">TemplateElementIF</name></type> <name pos:start="7:35" pos:end="7:43">aTemplate</name> <init pos:start="7:45" pos:end="7:79">= <expr pos:start="7:47" pos:end="7:79"><call pos:start="7:47" pos:end="7:79"><name pos:start="7:47" pos:end="7:71"><name pos:start="7:47" pos:end="7:65">_theTemplateFactory</name><operator pos:start="7:66" pos:end="7:66">.</operator><name pos:start="7:67" pos:end="7:71">parse</name></name><argument_list pos:start="7:72" pos:end="7:79">(<argument pos:start="7:73" pos:end="7:78"><expr pos:start="7:73" pos:end="7:78"><name pos:start="7:73" pos:end="7:78">aValue</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return pos:start="8:17" pos:end="8:50">return <expr pos:start="8:24" pos:end="8:49"><call pos:start="8:24" pos:end="8:49"><name pos:start="8:24" pos:end="8:39"><name pos:start="8:24" pos:end="8:32">aTemplate</name><operator pos:start="8:33" pos:end="8:33">.</operator><name pos:start="8:34" pos:end="8:39">render</name></name><argument_list pos:start="8:40" pos:end="8:49">(<argument pos:start="8:41" pos:end="8:48"><expr pos:start="8:41" pos:end="8:48"><name pos:start="8:41" pos:end="8:48">aContext</name></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block> <catch pos:start="10:11" pos:end="12:9">catch <parameter_list pos:start="10:17" pos:end="10:38">(<parameter pos:start="10:18" pos:end="10:37"><decl pos:start="10:18" pos:end="10:37"><type pos:start="10:18" pos:end="10:37"><name pos:start="10:18" pos:end="10:34">TemplateException</name></type> <name pos:start="10:36" pos:end="10:37">te</name></decl></parameter>)</parameter_list> <block pos:start="10:40" pos:end="12:9">{<block_content pos:start="11:13" pos:end="11:86">
            <throw pos:start="11:13" pos:end="11:86">throw <expr pos:start="11:19" pos:end="11:85"><operator pos:start="11:19" pos:end="11:21">new</operator> <call pos:start="11:23" pos:end="11:85"><name pos:start="11:23" pos:end="11:40">RenderingException</name><argument_list pos:start="11:41" pos:end="11:85">(<argument pos:start="11:42" pos:end="11:80"><expr pos:start="11:42" pos:end="11:80"><literal type="string" pos:start="11:42" pos:end="11:71">"Unable to resolve the value "</literal> <operator pos:start="11:73" pos:end="11:73">+</operator> <name pos:start="11:75" pos:end="11:80">aValue</name></expr></argument>, <argument pos:start="11:83" pos:end="11:84"><expr pos:start="11:83" pos:end="11:84"><name pos:start="11:83" pos:end="11:84">te</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
}</block></class></unit>
