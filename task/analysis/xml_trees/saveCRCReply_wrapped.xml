<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/saveCRCReply_wrapped.java"><class><specifier>public</specifier> class <name>SaveCRCReply</name> <block>{
    <function><type><specifier>private</specifier> <name>void</name></type> <name>saveCRCReply</name><parameter_list>(<parameter><decl><type><name>ClientRemoteContainerReply</name></type> <name>crcReply</name></decl></parameter>)</parameter_list> <block>{<block_content>	
        <expr_stmt><expr><name><name>LoadService</name><operator>.</operator><name>currentlyWritingFile</name></name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>mySavingPath</name> <init>= <expr><name><name>LoadService</name><operator>.</operator><name>SERVICE_NODE_DESCRIPTION_FILE</name></name></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>ObjectOutputStream</name></type> <name>out</name> <init>= <expr><operator>new</operator> <call><name>ObjectOutputStream</name><argument_list>(<argument><expr><operator>new</operator> <call><name>FileOutputStream</name><argument_list>(<argument><expr><name>mySavingPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>writeObject</name></name><argument_list>(<argument><expr><name>crcReply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>flush</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>out</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>	
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>FileNotFoundException</name></type> <name>e1</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e1</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>e1</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt><expr><name><name>LoadService</name><operator>.</operator><name>currentlyWritingFile</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
