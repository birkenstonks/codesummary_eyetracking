<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getBackCommand12_wrapped.java" pos:tabs="8"><expr_stmt pos:start="1:1" pos:end="10:5"><expr pos:start="1:1" pos:end="10:5"><operator pos:start="1:1" pos:end="1:1">`</operator><operator pos:start="1:2" pos:end="1:2">`</operator><operator pos:start="1:3" pos:end="1:3">`</operator><name pos:start="1:4" pos:end="1:7">java</name>
<specifier pos:start="2:1" pos:end="2:6">public</specifier> <name pos:start="2:8" pos:end="2:12">class</name> <name pos:start="2:14" pos:end="2:20">MyClass</name> <block pos:start="2:22" pos:end="10:5">{
    <expr pos:start="3:5" pos:end="8:9"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:18">Command</name> <call pos:start="3:20" pos:end="3:37"><name pos:start="3:20" pos:end="3:35">getBackCommand12</name><argument_list pos:start="3:36" pos:end="3:37">()</argument_list></call> <block pos:start="3:39" pos:end="8:9">{
        <if_stmt pos:start="4:9" pos:end="6:65"><if pos:start="4:9" pos:end="6:65">if <condition pos:start="4:12" pos:end="4:36">( <expr pos:start="4:14" pos:end="4:34"><name pos:start="4:14" pos:end="4:26">backCommand12</name> <operator pos:start="4:28" pos:end="4:29">==</operator> <literal type="null" pos:start="4:31" pos:end="4:34">null</literal></expr> )</condition> <block pos:start="4:38" pos:end="6:65">{<block_content pos:start="6:13" pos:end="6:65"><comment type="line" pos:start="4:39" pos:end="4:73">//GEN-END:|264-getter|0|264-preInit</comment>
            <comment type="line" pos:start="5:13" pos:end="5:44">// write pre-init user code here</comment>
            <expr_stmt pos:start="6:13" pos:end="6:65"><expr pos:start="6:13" pos:end="6:64"><name pos:start="6:13" pos:end="6:25">backCommand12</name> <operator pos:start="6:27" pos:end="6:27">=</operator> <operator pos:start="6:29" pos:end="6:31">new</operator> <call pos:start="6:33" pos:end="6:64"><name pos:start="6:33" pos:end="6:39">Command</name><argument_list pos:start="6:40" pos:end="6:64">( <argument pos:start="6:42" pos:end="6:45"><expr pos:start="6:42" pos:end="6:45"><literal type="string" pos:start="6:42" pos:end="6:45">"OK"</literal></expr></argument>, <argument pos:start="6:48" pos:end="6:59"><expr pos:start="6:48" pos:end="6:59"><name pos:start="6:48" pos:end="6:59"><name pos:start="6:48" pos:end="6:54">Command</name><operator pos:start="6:55" pos:end="6:55">.</operator><name pos:start="6:56" pos:end="6:59">BACK</name></name></expr></argument>, <argument pos:start="6:62" pos:end="6:62"><expr pos:start="6:62" pos:end="6:62"><literal type="number" pos:start="6:62" pos:end="6:62">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt><comment type="line" pos:start="6:66" pos:end="6:108">//GEN-LINE: | 264-getter | 1 | 264-postInit</comment>
            <comment type="line" pos:start="7:13" pos:end="7:45">// write post-init user code here</comment>
        <expr_stmt/></block_content></block></if></if_stmt>}</block></expr><comment type="line" pos:start="8:10" pos:end="8:40">//GEN-BEGIN: | 264-getter | 2 |</comment>
        <return pos:start="9:9" pos:end="9:29">return <expr pos:start="9:16" pos:end="9:28"><name pos:start="9:16" pos:end="9:28">backCommand12</name></expr>;</return>
    }</block></expr></expr_stmt>
}
`<expr pos:start="12:2" pos:end="12:3"><operator pos:start="12:2" pos:end="12:2">`</operator><operator pos:start="12:3" pos:end="12:3">`</operator></expr></unit>
