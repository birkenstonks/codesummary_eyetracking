<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/createDataset_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="14:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:22">ChartData</name> <block pos:start="1:24" pos:end="14:1">{

    <function pos:start="3:5" pos:end="13:5"><type pos:start="3:5" pos:end="3:20"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:20">XYDataset</name></type> <name pos:start="3:22" pos:end="3:34">createDataset</name><parameter_list pos:start="3:35" pos:end="3:64">(<parameter pos:start="3:36" pos:end="3:50"><decl pos:start="3:36" pos:end="3:50"><type pos:start="3:36" pos:end="3:50"><name pos:start="3:36" pos:end="3:43"><name pos:start="3:36" pos:end="3:41">double</name><index pos:start="3:42" pos:end="3:43">[]</index></name></type> <name pos:start="3:45" pos:end="3:50">values</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:63"><decl pos:start="3:53" pos:end="3:63"><type pos:start="3:53" pos:end="3:63"><name pos:start="3:53" pos:end="3:58">String</name></type> <name pos:start="3:60" pos:end="3:63">name</name></decl></parameter>)</parameter_list> <block pos:start="3:66" pos:end="13:5">{<block_content pos:start="4:9" pos:end="12:26">
        <decl_stmt pos:start="4:9" pos:end="4:51"><decl pos:start="4:9" pos:end="4:50"><type pos:start="4:9" pos:end="4:22"><specifier pos:start="4:9" pos:end="4:13">final</specifier> <name pos:start="4:15" pos:end="4:22">XYSeries</name></type> <name pos:start="4:24" pos:end="4:29">series</name> <init pos:start="4:31" pos:end="4:50">= <expr pos:start="4:33" pos:end="4:50"><operator pos:start="4:33" pos:end="4:35">new</operator> <call pos:start="4:37" pos:end="4:50"><name pos:start="4:37" pos:end="4:44">XYSeries</name><argument_list pos:start="4:45" pos:end="4:50">(<argument pos:start="4:46" pos:end="4:49"><expr pos:start="4:46" pos:end="4:49"><name pos:start="4:46" pos:end="4:49">name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <for pos:start="6:9" pos:end="8:9">for <control pos:start="6:13" pos:end="6:47">(<init pos:start="6:14" pos:end="6:23"><decl pos:start="6:14" pos:end="6:22"><type pos:start="6:14" pos:end="6:16"><name pos:start="6:14" pos:end="6:16">int</name></type> <name pos:start="6:18" pos:end="6:18">i</name> <init pos:start="6:20" pos:end="6:22">= <expr pos:start="6:22" pos:end="6:22"><literal type="number" pos:start="6:22" pos:end="6:22">0</literal></expr></init></decl>;</init> <condition pos:start="6:25" pos:end="6:42"><expr pos:start="6:25" pos:end="6:41"><name pos:start="6:25" pos:end="6:25">i</name> <operator pos:start="6:27" pos:end="6:27">&lt;</operator> <name pos:start="6:29" pos:end="6:41"><name pos:start="6:29" pos:end="6:34">values</name><operator pos:start="6:35" pos:end="6:35">.</operator><name pos:start="6:36" pos:end="6:41">length</name></name></expr>;</condition> <incr pos:start="6:44" pos:end="6:46"><expr pos:start="6:44" pos:end="6:46"><name pos:start="6:44" pos:end="6:44">i</name><operator pos:start="6:45" pos:end="6:46">++</operator></expr></incr>)</control> <block pos:start="6:49" pos:end="8:9">{<block_content pos:start="7:13" pos:end="7:37">
            <expr_stmt pos:start="7:13" pos:end="7:37"><expr pos:start="7:13" pos:end="7:36"><call pos:start="7:13" pos:end="7:36"><name pos:start="7:13" pos:end="7:22"><name pos:start="7:13" pos:end="7:18">series</name><operator pos:start="7:19" pos:end="7:19">.</operator><name pos:start="7:20" pos:end="7:22">add</name></name><argument_list pos:start="7:23" pos:end="7:36">(<argument pos:start="7:24" pos:end="7:24"><expr pos:start="7:24" pos:end="7:24"><name pos:start="7:24" pos:end="7:24">i</name></expr></argument>, <argument pos:start="7:27" pos:end="7:35"><expr pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:32">values</name><index pos:start="7:33" pos:end="7:35">[<expr pos:start="7:34" pos:end="7:34"><name pos:start="7:34" pos:end="7:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <decl_stmt pos:start="9:9" pos:end="9:71"><decl pos:start="9:9" pos:end="9:70"><type pos:start="9:9" pos:end="9:32"><specifier pos:start="9:9" pos:end="9:13">final</specifier> <name pos:start="9:15" pos:end="9:32">XYSeriesCollection</name></type> <name pos:start="9:34" pos:end="9:43">collection</name> <init pos:start="9:45" pos:end="9:70">= <expr pos:start="9:47" pos:end="9:70"><operator pos:start="9:47" pos:end="9:49">new</operator> <call pos:start="9:51" pos:end="9:70"><name pos:start="9:51" pos:end="9:68">XYSeriesCollection</name><argument_list pos:start="9:69" pos:end="9:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:37"><expr pos:start="10:9" pos:end="10:36"><call pos:start="10:9" pos:end="10:36"><name pos:start="10:9" pos:end="10:28"><name pos:start="10:9" pos:end="10:18">collection</name><operator pos:start="10:19" pos:end="10:19">.</operator><name pos:start="10:20" pos:end="10:28">addSeries</name></name><argument_list pos:start="10:29" pos:end="10:36">(<argument pos:start="10:30" pos:end="10:35"><expr pos:start="10:30" pos:end="10:35"><name pos:start="10:30" pos:end="10:35">series</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="12:9" pos:end="12:26">return <expr pos:start="12:16" pos:end="12:25"><name pos:start="12:16" pos:end="12:25">collection</name></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
