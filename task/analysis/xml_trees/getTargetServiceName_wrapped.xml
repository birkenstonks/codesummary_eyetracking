<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getTargetServiceName_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="16:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:19">Parser</name> <block pos:start="1:21" pos:end="16:1">{
    <function pos:start="2:5" pos:end="15:5"><type pos:start="2:5" pos:end="2:20"><specifier pos:start="2:5" pos:end="2:13">protected</specifier> <name pos:start="2:15" pos:end="2:20">String</name></type> <name pos:start="2:22" pos:end="2:41">getTargetServiceName</name><parameter_list pos:start="2:42" pos:end="2:70">( <parameter pos:start="2:44" pos:end="2:68"><decl pos:start="2:44" pos:end="2:68"><type pos:start="2:44" pos:end="2:60"><name pos:start="2:44" pos:end="2:60">AddressingHeaders</name></type> <name pos:start="2:62" pos:end="2:68">headers</name></decl></parameter> )</parameter_list> <throws pos:start="2:72" pos:end="2:87">throws <argument pos:start="2:79" pos:end="2:87"><expr pos:start="2:79" pos:end="2:87"><name pos:start="2:79" pos:end="2:87">Exception</name></expr></argument></throws> <block pos:start="2:89" pos:end="15:5">{<block_content pos:start="3:9" pos:end="14:60">
        <decl_stmt pos:start="3:9" pos:end="3:35"><decl pos:start="3:9" pos:end="3:34"><type pos:start="3:9" pos:end="3:10"><name pos:start="3:9" pos:end="3:10">To</name></type> <name pos:start="3:12" pos:end="3:16">toURI</name> <init pos:start="3:18" pos:end="3:34">= <expr pos:start="3:20" pos:end="3:34"><call pos:start="3:20" pos:end="3:34"><name pos:start="3:20" pos:end="3:32"><name pos:start="3:20" pos:end="3:26">headers</name><operator pos:start="3:27" pos:end="3:27">.</operator><name pos:start="3:28" pos:end="3:32">getTo</name></name><argument_list pos:start="3:33" pos:end="3:34">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="5:9" pos:end="7:9"><if pos:start="5:9" pos:end="7:9">if <condition pos:start="5:12" pos:end="5:28">( <expr pos:start="5:14" pos:end="5:26"><name pos:start="5:14" pos:end="5:18">toURI</name> <operator pos:start="5:20" pos:end="5:21">==</operator> <literal type="null" pos:start="5:23" pos:end="5:26">null</literal></expr> )</condition> <block pos:start="5:30" pos:end="7:9">{<block_content pos:start="6:13" pos:end="6:24">
            <return pos:start="6:13" pos:end="6:24">return <expr pos:start="6:20" pos:end="6:23"><literal type="null" pos:start="6:20" pos:end="6:23">null</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <decl_stmt pos:start="8:9" pos:end="8:36"><decl pos:start="8:9" pos:end="8:35"><type pos:start="8:9" pos:end="8:14"><name pos:start="8:9" pos:end="8:14">String</name></type> <name pos:start="8:16" pos:end="8:17">to</name> <init pos:start="8:19" pos:end="8:35">= <expr pos:start="8:21" pos:end="8:35"><call pos:start="8:21" pos:end="8:35"><name pos:start="8:21" pos:end="8:33"><name pos:start="8:21" pos:end="8:25">toURI</name><operator pos:start="8:26" pos:end="8:26">.</operator><name pos:start="8:27" pos:end="8:33">getPath</name></name><argument_list pos:start="8:34" pos:end="8:35">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="10:9" pos:end="12:9"><if pos:start="10:9" pos:end="12:9">if <condition pos:start="10:12" pos:end="10:25">( <expr pos:start="10:14" pos:end="10:23"><name pos:start="10:14" pos:end="10:15">to</name> <operator pos:start="10:17" pos:end="10:18">==</operator> <literal type="null" pos:start="10:20" pos:end="10:23">null</literal></expr> )</condition> <block pos:start="10:27" pos:end="12:9">{<block_content pos:start="11:13" pos:end="11:24">
            <return pos:start="11:13" pos:end="11:24">return <expr pos:start="11:20" pos:end="11:23"><literal type="null" pos:start="11:20" pos:end="11:23">null</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <comment type="line" pos:start="13:9" pos:end="13:33">// set the target service</comment>
        <return pos:start="14:9" pos:end="14:60">return <expr pos:start="14:16" pos:end="14:59"><operator pos:start="14:16" pos:end="14:16">(</operator> <call pos:start="14:18" pos:end="14:58"><name pos:start="14:18" pos:end="14:29"><name pos:start="14:18" pos:end="14:19">to</name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:29">substring</name></name><argument_list pos:start="14:30" pos:end="14:58">( <argument pos:start="14:32" pos:end="14:56"><expr pos:start="14:32" pos:end="14:56"><call pos:start="14:32" pos:end="14:52"><name pos:start="14:32" pos:end="14:45"><name pos:start="14:32" pos:end="14:33">to</name><operator pos:start="14:34" pos:end="14:34">.</operator><name pos:start="14:35" pos:end="14:45">lastIndexOf</name></name><argument_list pos:start="14:46" pos:end="14:52">( <argument pos:start="14:48" pos:end="14:50"><expr pos:start="14:48" pos:end="14:50"><literal type="char" pos:start="14:48" pos:end="14:50">'/'</literal></expr></argument> )</argument_list></call> <operator pos:start="14:54" pos:end="14:54">+</operator> <literal type="number" pos:start="14:56" pos:end="14:56">1</literal></expr></argument> )</argument_list></call><operator pos:start="14:59" pos:end="14:59">)</operator></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
