<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/testSetWelcomeMsg_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="12:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:36">TestSystemClient_DBImpl</name> <block pos:start="1:38" pos:end="12:1">{

   <function pos:start="3:4" pos:end="11:4"><type pos:start="3:4" pos:end="3:14"><specifier pos:start="3:4" pos:end="3:9">public</specifier> <name pos:start="3:11" pos:end="3:14">void</name></type> <name pos:start="3:16" pos:end="3:32">testSetWelcomeMsg</name><parameter_list pos:start="3:33" pos:end="3:34">()</parameter_list> <block pos:start="3:36" pos:end="11:4">{<block_content pos:start="4:7" pos:end="10:44">
      <expr_stmt pos:start="4:7" pos:end="4:42"><expr pos:start="4:7" pos:end="4:41"><call pos:start="4:7" pos:end="4:41"><name pos:start="4:7" pos:end="4:24"><name pos:start="4:7" pos:end="4:12">System</name><operator pos:start="4:13" pos:end="4:13">.</operator><name pos:start="4:14" pos:end="4:16">out</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:24">println</name></name><argument_list pos:start="4:25" pos:end="4:41">(<argument pos:start="4:26" pos:end="4:40"><expr pos:start="4:26" pos:end="4:40"><literal type="string" pos:start="4:26" pos:end="4:40">"setWelcomeMsg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <decl_stmt pos:start="5:7" pos:end="5:29"><decl pos:start="5:7" pos:end="5:28"><type pos:start="5:7" pos:end="5:12"><name pos:start="5:7" pos:end="5:12">String</name></type> <name pos:start="5:14" pos:end="5:23">welcomeMsg</name> <init pos:start="5:25" pos:end="5:28">= <expr pos:start="5:27" pos:end="5:28"><literal type="string" pos:start="5:27" pos:end="5:28">""</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt pos:start="6:7" pos:end="6:63"><decl pos:start="6:7" pos:end="6:62"><type pos:start="6:7" pos:end="6:25"><name pos:start="6:7" pos:end="6:25">SystemClient_DBImpl</name></type> <name pos:start="6:27" pos:end="6:34">instance</name> <init pos:start="6:36" pos:end="6:62">= <expr pos:start="6:38" pos:end="6:62"><operator pos:start="6:38" pos:end="6:40">new</operator> <call pos:start="6:42" pos:end="6:62"><name pos:start="6:42" pos:end="6:60">SystemClient_DBImpl</name><argument_list pos:start="6:61" pos:end="6:62">()</argument_list></call></expr></init></decl>;</decl_stmt>     
      <expr_stmt pos:start="7:7" pos:end="7:41"><expr pos:start="7:7" pos:end="7:40"><call pos:start="7:7" pos:end="7:40"><name pos:start="7:7" pos:end="7:28"><name pos:start="7:7" pos:end="7:14">instance</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:28">setWelcomeMsg</name></name><argument_list pos:start="7:29" pos:end="7:40">(<argument pos:start="7:30" pos:end="7:39"><expr pos:start="7:30" pos:end="7:39"><name pos:start="7:30" pos:end="7:39">welcomeMsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
      <comment type="line" pos:start="9:7" pos:end="9:81">// TODO review the generated test code and remove the default call to fail.</comment>
      <expr_stmt pos:start="10:7" pos:end="10:44"><expr pos:start="10:7" pos:end="10:43"><call pos:start="10:7" pos:end="10:43"><name pos:start="10:7" pos:end="10:10">fail</name><argument_list pos:start="10:11" pos:end="10:43">(<argument pos:start="10:12" pos:end="10:42"><expr pos:start="10:12" pos:end="10:42"><literal type="string" pos:start="10:12" pos:end="10:42">"The test case is a prototype."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   </block_content>}</block></function> 
}</block></class></unit>
