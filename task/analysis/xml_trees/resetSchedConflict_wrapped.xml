<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/resetSchedConflict_wrapped.java"><class><specifier>public</specifier> class <name>ResetSchedConflict</name> <block>{

    <function><type><specifier>public</specifier> <name>void</name></type> <name>resetSchedConflict</name><parameter_list>()</parameter_list> <block>{<block_content>
        <try>try <block>{<block_content>
            <if_stmt><if>if <condition>( <expr><name>listData</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>listData</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
                <return>return;</return></block_content></block></if></if_stmt>
            <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>listData</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition>  <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{<block_content>
                <decl_stmt><decl><type><name>TblAuditor</name></type> <name>auditor</name> <init>= <expr><operator>(</operator> <name>TblAuditor</name> <operator>)</operator> <call><name><name>listData</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>auditor</name><operator>.</operator><name>setSchedConflict</name></name><argument_list>( <argument><expr><literal type="boolean">false</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block> <catch>catch <parameter_list>( <parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter> )</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>error</name></name><argument_list>( <argument><expr><name>ex</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>FacesUtils</name><operator>.</operator><name>addErrorMessage</name></name><argument_list>( <argument><expr><call><name><name>ex</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
    
}</block></class></unit>
