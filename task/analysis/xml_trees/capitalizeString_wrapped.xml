<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/capitalizeString_wrapped.java"><class><specifier>public</specifier> class <name>StringManipulation</name> <block>{
    <function><type><specifier>public</specifier> <name>String</name></type> <name>capitalizeString</name><parameter_list>( <parameter><decl><type><name>String</name></type> <name>s</name></decl></parameter> )</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>result</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{<block_content>
            <if_stmt><if>if <condition>( <expr><name>i</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <call><name><name>s</name><operator>.</operator><name>substring</name></name><argument_list>( <argument><expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>( <argument><expr><literal type="string">" "</literal></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
                <expr_stmt><expr><name>result</name> <operator>+=</operator> <call><name><name>s</name><operator>.</operator><name>substring</name></name><argument_list>( <argument><expr><name>i</name></expr></argument>, <argument><expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call><operator>.</operator><call><name>toUpperCase</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if>
            <else>else<block type="pseudo"><block_content>
                <expr_stmt><expr><name>result</name> <operator>+=</operator> <call><name><name>s</name><operator>.</operator><name>substring</name></name><argument_list>( <argument><expr><name>i</name></expr></argument>, <argument><expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>          
        </block_content>}</block></for>  
        <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
