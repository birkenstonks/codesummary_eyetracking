<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getApplicableLaw_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="20:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:31">InfluenceLawFinder</name> <block pos:start="1:33" pos:end="20:1">{
    <decl_stmt pos:start="2:5" pos:end="2:45"><decl pos:start="2:5" pos:end="2:44"><type pos:start="2:5" pos:end="2:30"><specifier pos:start="2:5" pos:end="2:11">private</specifier> <name pos:start="2:13" pos:end="2:30"><name pos:start="2:13" pos:end="2:16">List</name><argument_list type="generic" pos:start="2:17" pos:end="2:30">&lt;<argument pos:start="2:18" pos:end="2:29"><name pos:start="2:18" pos:end="2:29">InfluenceLaw</name></argument>&gt;</argument_list></name></type> <name pos:start="2:32" pos:end="2:44">influenceLaws</name></decl>;</decl_stmt>

    <constructor pos:start="4:5" pos:end="6:5"><specifier pos:start="4:5" pos:end="4:10">public</specifier> <name pos:start="4:12" pos:end="4:29">InfluenceLawFinder</name><parameter_list pos:start="4:30" pos:end="4:63">(<parameter pos:start="4:31" pos:end="4:62"><decl pos:start="4:31" pos:end="4:62"><type pos:start="4:31" pos:end="4:48"><name pos:start="4:31" pos:end="4:48"><name pos:start="4:31" pos:end="4:34">List</name><argument_list type="generic" pos:start="4:35" pos:end="4:48">&lt;<argument pos:start="4:36" pos:end="4:47"><name pos:start="4:36" pos:end="4:47">InfluenceLaw</name></argument>&gt;</argument_list></name></type> <name pos:start="4:50" pos:end="4:62">influenceLaws</name></decl></parameter>)</parameter_list> <block pos:start="4:65" pos:end="6:5">{<block_content pos:start="5:9" pos:end="5:43">
        <expr_stmt pos:start="5:9" pos:end="5:43"><expr pos:start="5:9" pos:end="5:42"><name pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:12">this</name><operator pos:start="5:13" pos:end="5:13">.</operator><name pos:start="5:14" pos:end="5:26">influenceLaws</name></name> <operator pos:start="5:28" pos:end="5:28">=</operator> <name pos:start="5:30" pos:end="5:42">influenceLaws</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function pos:start="8:5" pos:end="19:5"><type pos:start="8:5" pos:end="8:23"><specifier pos:start="8:5" pos:end="8:10">public</specifier> <name pos:start="8:12" pos:end="8:23">InfluenceLaw</name></type> <name pos:start="8:25" pos:end="8:40">getApplicableLaw</name><parameter_list pos:start="8:41" pos:end="8:55">(<parameter pos:start="8:42" pos:end="8:54"><decl pos:start="8:42" pos:end="8:54"><type pos:start="8:42" pos:end="8:50"><name pos:start="8:42" pos:end="8:50">Influence</name></type> <name pos:start="8:52" pos:end="8:54">inf</name></decl></parameter>)</parameter_list> <block pos:start="8:57" pos:end="19:5">{<block_content pos:start="9:9" pos:end="18:20">
        <if_stmt pos:start="9:9" pos:end="11:9"><if pos:start="9:9" pos:end="11:9">if <condition pos:start="9:12" pos:end="9:24">(<expr pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:15">inf</name> <operator pos:start="9:17" pos:end="9:18">==</operator> <literal type="null" pos:start="9:20" pos:end="9:23">null</literal></expr>)</condition> <block pos:start="9:26" pos:end="11:9">{<block_content pos:start="10:13" pos:end="10:49">
            <throw pos:start="10:13" pos:end="10:49">throw <expr pos:start="10:19" pos:end="10:48"><operator pos:start="10:19" pos:end="10:21">new</operator> <call pos:start="10:23" pos:end="10:48"><name pos:start="10:23" pos:end="10:46">IllegalArgumentException</name><argument_list pos:start="10:47" pos:end="10:48">()</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
        <for pos:start="12:9" pos:end="17:9">for <control pos:start="12:13" pos:end="12:85">(<init pos:start="12:14" pos:end="12:68"><decl pos:start="12:14" pos:end="12:67"><type pos:start="12:14" pos:end="12:35"><name pos:start="12:14" pos:end="12:35"><name pos:start="12:14" pos:end="12:21">Iterator</name><argument_list type="generic" pos:start="12:22" pos:end="12:35">&lt;<argument pos:start="12:23" pos:end="12:34"><name pos:start="12:23" pos:end="12:34">InfluenceLaw</name></argument>&gt;</argument_list></name></type> <name pos:start="12:37" pos:end="12:40">iter</name> <init pos:start="12:42" pos:end="12:67">= <expr pos:start="12:44" pos:end="12:67"><call pos:start="12:44" pos:end="12:67"><name pos:start="12:44" pos:end="12:65"><name pos:start="12:44" pos:end="12:56">influenceLaws</name><operator pos:start="12:57" pos:end="12:57">.</operator><name pos:start="12:58" pos:end="12:65">iterator</name></name><argument_list pos:start="12:66" pos:end="12:67">()</argument_list></call></expr></init></decl>;</init> <condition pos:start="12:70" pos:end="12:84"><expr pos:start="12:70" pos:end="12:83"><call pos:start="12:70" pos:end="12:83"><name pos:start="12:70" pos:end="12:81"><name pos:start="12:70" pos:end="12:73">iter</name><operator pos:start="12:74" pos:end="12:74">.</operator><name pos:start="12:75" pos:end="12:81">hasNext</name></name><argument_list pos:start="12:82" pos:end="12:83">()</argument_list></call></expr>;</condition><incr/>)</control> <block pos:start="12:87" pos:end="17:9">{<block_content pos:start="13:13" pos:end="16:13">
            <decl_stmt pos:start="13:13" pos:end="13:46"><decl pos:start="13:13" pos:end="13:45"><type pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:24">InfluenceLaw</name></type> <name pos:start="13:26" pos:end="13:31">infLaw</name> <init pos:start="13:33" pos:end="13:45">= <expr pos:start="13:35" pos:end="13:45"><call pos:start="13:35" pos:end="13:45"><name pos:start="13:35" pos:end="13:43"><name pos:start="13:35" pos:end="13:38">iter</name><operator pos:start="13:39" pos:end="13:39">.</operator><name pos:start="13:40" pos:end="13:43">next</name></name><argument_list pos:start="13:44" pos:end="13:45">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="14:13" pos:end="16:13"><if pos:start="14:13" pos:end="16:13">if <condition pos:start="14:16" pos:end="14:43">(<expr pos:start="14:17" pos:end="14:42"><call pos:start="14:17" pos:end="14:42"><name pos:start="14:17" pos:end="14:37"><name pos:start="14:17" pos:end="14:22">infLaw</name><operator pos:start="14:23" pos:end="14:23">.</operator><name pos:start="14:24" pos:end="14:37">isApplicableTo</name></name><argument_list pos:start="14:38" pos:end="14:42">(<argument pos:start="14:39" pos:end="14:41"><expr pos:start="14:39" pos:end="14:41"><name pos:start="14:39" pos:end="14:41">inf</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="14:45" pos:end="16:13">{<block_content pos:start="15:17" pos:end="15:30">
                <return pos:start="15:17" pos:end="15:30">return <expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">infLaw</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <return pos:start="18:9" pos:end="18:20">return <expr pos:start="18:16" pos:end="18:19"><literal type="null" pos:start="18:16" pos:end="18:19">null</literal></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
