<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/addDigit_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="23:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:23">DigitAdder</name> <block pos:start="1:25" pos:end="23:1">{
    <decl_stmt pos:start="2:5" pos:end="2:25"><decl pos:start="2:5" pos:end="2:24"><type pos:start="2:5" pos:end="2:18"><specifier pos:start="2:5" pos:end="2:11">private</specifier> <name pos:start="2:13" pos:end="2:18">String</name></type> <name pos:start="2:20" pos:end="2:24">value</name></decl>;</decl_stmt>
    <decl_stmt pos:start="3:5" pos:end="3:27"><decl pos:start="3:5" pos:end="3:26"><type pos:start="3:5" pos:end="3:19"><specifier pos:start="3:5" pos:end="3:11">private</specifier> <name pos:start="3:13" pos:end="3:19">boolean</name></type> <name pos:start="3:21" pos:end="3:26">update</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:26"><decl pos:start="4:5" pos:end="4:25"><type pos:start="4:5" pos:end="4:19"><specifier pos:start="4:5" pos:end="4:11">private</specifier> <name pos:start="4:13" pos:end="4:19">boolean</name></type> <name pos:start="4:21" pos:end="4:25">minus</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:11">private</specifier> <name pos:start="5:13" pos:end="5:19">boolean</name></type> <name pos:start="5:21" pos:end="5:25">comma</name></decl>;</decl_stmt>

    <function pos:start="7:5" pos:end="18:5"><type pos:start="7:5" pos:end="7:15"><specifier pos:start="7:5" pos:end="7:10">public</specifier> <name pos:start="7:12" pos:end="7:15">void</name></type> <name pos:start="7:17" pos:end="7:24">addDigit</name><parameter_list pos:start="7:25" pos:end="7:36">(<parameter pos:start="7:26" pos:end="7:35"><decl pos:start="7:26" pos:end="7:35"><type pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">char</name></type> <name pos:start="7:31" pos:end="7:35">digit</name></decl></parameter>)</parameter_list> <block pos:start="7:38" pos:end="18:5">{<block_content pos:start="8:9" pos:end="17:20">
        <if_stmt pos:start="8:9" pos:end="8:54"><if pos:start="8:9" pos:end="8:54">if <condition pos:start="8:12" pos:end="8:46">(<expr pos:start="8:13" pos:end="8:45"><name pos:start="8:13" pos:end="8:17">digit</name> <operator pos:start="8:19" pos:end="8:20">==</operator> <literal type="char" pos:start="8:22" pos:end="8:24">'0'</literal> <operator pos:start="8:26" pos:end="8:27">&amp;&amp;</operator> <call pos:start="8:29" pos:end="8:45"><name pos:start="8:29" pos:end="8:40"><name pos:start="8:29" pos:end="8:33">value</name><operator pos:start="8:34" pos:end="8:34">.</operator><name pos:start="8:35" pos:end="8:40">equals</name></name><argument_list pos:start="8:41" pos:end="8:45">(<argument pos:start="8:42" pos:end="8:44"><expr pos:start="8:42" pos:end="8:44"><literal type="string" pos:start="8:42" pos:end="8:44">"0"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="8:48" pos:end="8:54"><block_content pos:start="8:48" pos:end="8:54"> <return pos:start="8:48" pos:end="8:54">return;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="9:9" pos:end="9:42"><if pos:start="9:9" pos:end="9:42">if <condition pos:start="9:12" pos:end="9:30">(<expr pos:start="9:13" pos:end="9:29"><call pos:start="9:13" pos:end="9:29"><name pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:17">value</name><operator pos:start="9:18" pos:end="9:18">.</operator><name pos:start="9:19" pos:end="9:24">equals</name></name><argument_list pos:start="9:25" pos:end="9:29">(<argument pos:start="9:26" pos:end="9:28"><expr pos:start="9:26" pos:end="9:28"><literal type="string" pos:start="9:26" pos:end="9:28">"0"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="9:32" pos:end="9:42"><block_content pos:start="9:32" pos:end="9:42"> <expr_stmt pos:start="9:32" pos:end="9:42"><expr pos:start="9:32" pos:end="9:41"><name pos:start="9:32" pos:end="9:36">value</name> <operator pos:start="9:38" pos:end="9:38">=</operator> <literal type="string" pos:start="9:40" pos:end="9:41">""</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="10:9" pos:end="14:9"><if pos:start="10:9" pos:end="14:9">if <condition pos:start="10:12" pos:end="10:19">(<expr pos:start="10:13" pos:end="10:18"><name pos:start="10:13" pos:end="10:18">update</name></expr>)</condition> <block pos:start="10:21" pos:end="14:9">{<block_content pos:start="11:13" pos:end="13:26">
            <expr_stmt pos:start="11:13" pos:end="11:23"><expr pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:17">value</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <literal type="string" pos:start="11:21" pos:end="11:22">""</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:26"><expr pos:start="12:13" pos:end="12:25"><name pos:start="12:13" pos:end="12:17">minus</name> <operator pos:start="12:19" pos:end="12:19">=</operator> <literal type="boolean" pos:start="12:21" pos:end="12:25">false</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:26"><expr pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:17">comma</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="boolean" pos:start="13:21" pos:end="13:25">false</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:23"><expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:14">update</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="boolean" pos:start="15:18" pos:end="15:22">false</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:23"><expr pos:start="16:9" pos:end="16:22"><name pos:start="16:9" pos:end="16:13">value</name> <operator pos:start="16:15" pos:end="16:16">+=</operator> <name pos:start="16:18" pos:end="16:22">digit</name></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><call pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:17">showValue</name><argument_list pos:start="17:18" pos:end="17:19">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function pos:start="20:5" pos:end="22:5"><type pos:start="20:5" pos:end="20:16"><specifier pos:start="20:5" pos:end="20:11">private</specifier> <name pos:start="20:13" pos:end="20:16">void</name></type> <name pos:start="20:18" pos:end="20:26">showValue</name><parameter_list pos:start="20:27" pos:end="20:28">()</parameter_list> <block pos:start="20:30" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:34">
        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:14">System</name><operator pos:start="21:15" pos:end="21:15">.</operator><name pos:start="21:16" pos:end="21:18">out</name><operator pos:start="21:19" pos:end="21:19">.</operator><name pos:start="21:20" pos:end="21:26">println</name></name><argument_list pos:start="21:27" pos:end="21:33">(<argument pos:start="21:28" pos:end="21:32"><expr pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:32">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
