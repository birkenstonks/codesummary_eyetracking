<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/setCombo_Value_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="11:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:24">ComboSetter</name> <block pos:start="1:26" pos:end="11:1">{
    <function pos:start="2:5" pos:end="10:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:30">setCombo_Value</name><parameter_list pos:start="2:31" pos:end="2:44">( <parameter pos:start="2:33" pos:end="2:42"><decl pos:start="2:33" pos:end="2:42"><type pos:start="2:33" pos:end="2:38"><name pos:start="2:33" pos:end="2:38">String</name></type> <name pos:start="2:40" pos:end="2:42">val</name></decl></parameter> )</parameter_list> <block pos:start="2:46" pos:end="10:5">{<block_content pos:start="3:9" pos:end="9:9">
        <expr_stmt pos:start="3:9" pos:end="5:9"><expr pos:start="3:9" pos:end="5:9"><call pos:start="3:9" pos:end="3:101"><name pos:start="3:9" pos:end="3:10">If</name> <argument_list pos:start="3:12" pos:end="3:101">(<argument pos:start="3:13" pos:end="3:100"><expr pos:start="3:13" pos:end="3:100"><operator pos:start="3:13" pos:end="3:13">(</operator> <name pos:start="3:15" pos:end="3:17">val</name> <operator pos:start="3:19" pos:end="3:20">==</operator> <literal type="null" pos:start="3:22" pos:end="3:25">null</literal> <operator pos:start="3:27" pos:end="3:28">||</operator> <literal type="string" pos:start="3:30" pos:end="3:31">""</literal><operator pos:start="3:32" pos:end="3:32">.</operator><call pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:38">equals</name><argument_list pos:start="3:39" pos:end="3:45">( <argument pos:start="3:41" pos:end="3:43"><expr pos:start="3:41" pos:end="3:43"><name pos:start="3:41" pos:end="3:43">val</name></expr></argument> )</argument_list></call><operator pos:start="3:46" pos:end="3:46">)</operator> <operator pos:start="3:48" pos:end="3:49">&amp;&amp;</operator> <operator pos:start="3:51" pos:end="3:51">(</operator> <name pos:start="3:53" pos:end="3:63">Combo_Value</name> <operator pos:start="3:65" pos:end="3:66">==</operator> <literal type="null" pos:start="3:68" pos:end="3:71">null</literal> <operator pos:start="3:73" pos:end="3:74">||</operator> <literal type="string" pos:start="3:76" pos:end="3:77">""</literal><operator pos:start="3:78" pos:end="3:78">.</operator><call pos:start="3:79" pos:end="3:99"><name pos:start="3:79" pos:end="3:84">equals</name><argument_list pos:start="3:85" pos:end="3:99">( <argument pos:start="3:87" pos:end="3:97"><expr pos:start="3:87" pos:end="3:97"><name pos:start="3:87" pos:end="3:97">Combo_Value</name></expr></argument> )</argument_list></call><operator pos:start="3:100" pos:end="3:100">)</operator></expr></argument>)</argument_list></call> <block pos:start="3:103" pos:end="5:9">{
            <return pos:start="4:13" pos:end="4:19">return;</return>
        }</block></expr></expr_stmt>
        <if_stmt pos:start="6:9" pos:end="9:9"><if pos:start="6:9" pos:end="9:9">if <condition pos:start="6:12" pos:end="6:99">(<expr pos:start="6:13" pos:end="6:98"><operator pos:start="6:13" pos:end="6:13">(</operator> <name pos:start="6:15" pos:end="6:17">val</name> <operator pos:start="6:19" pos:end="6:20">==</operator> <literal type="null" pos:start="6:22" pos:end="6:25">null</literal> <operator pos:start="6:27" pos:end="6:27">)</operator> <operator pos:start="6:29" pos:end="6:30">||</operator> <operator pos:start="6:32" pos:end="6:32">(</operator> <operator pos:start="6:34" pos:end="6:34">!</operator><call pos:start="6:35" pos:end="6:59"><name pos:start="6:35" pos:end="6:44"><name pos:start="6:35" pos:end="6:37">val</name><operator pos:start="6:38" pos:end="6:38">.</operator><name pos:start="6:39" pos:end="6:44">equals</name></name><argument_list pos:start="6:45" pos:end="6:59">( <argument pos:start="6:47" pos:end="6:57"><expr pos:start="6:47" pos:end="6:57"><name pos:start="6:47" pos:end="6:57">Combo_Value</name></expr></argument> )</argument_list></call><operator pos:start="6:60" pos:end="6:60">)</operator> <operator pos:start="6:62" pos:end="6:63">||</operator> <operator pos:start="6:65" pos:end="6:65">(</operator> <name pos:start="6:67" pos:end="6:78">updateStatus</name> <operator pos:start="6:80" pos:end="6:81">==</operator> <name pos:start="6:83" pos:end="6:96">NULL_INT_VALUE</name> <operator pos:start="6:98" pos:end="6:98">)</operator></expr>)</condition> <block pos:start="6:101" pos:end="9:9">{<block_content pos:start="7:13" pos:end="8:35">
            <expr_stmt pos:start="7:13" pos:end="7:30"><expr pos:start="7:13" pos:end="7:29"><name pos:start="7:13" pos:end="7:23">Combo_Value</name> <operator pos:start="7:25" pos:end="7:25">=</operator> <name pos:start="7:27" pos:end="7:29">val</name></expr>;</expr_stmt>
            <expr_stmt pos:start="8:13" pos:end="8:35"><expr pos:start="8:13" pos:end="8:34"><name pos:start="8:13" pos:end="8:24">updateStatus</name> <operator pos:start="8:26" pos:end="8:26">=</operator> <name pos:start="8:28" pos:end="8:34">UPDATED</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
}</block></class></unit>
