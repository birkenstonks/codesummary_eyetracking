<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/setCombo_Value_wrapped.java" pos:tabs="8"><expr_stmt pos:start="1:1" pos:end="10:9"><expr pos:start="1:1" pos:end="10:9"><operator pos:start="1:1" pos:end="1:1">`</operator><operator pos:start="1:2" pos:end="1:2">`</operator><operator pos:start="1:3" pos:end="1:3">`</operator>
<specifier pos:start="2:1" pos:end="2:6">public</specifier> <name pos:start="2:8" pos:end="2:12">class</name> <name pos:start="2:14" pos:end="2:24">ComboSetter</name> <block pos:start="2:26" pos:end="10:9">{
    <expr pos:start="3:5" pos:end="6:9"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:15">void</name> <call pos:start="3:17" pos:end="3:44"><name pos:start="3:17" pos:end="3:30">setCombo_Value</name><argument_list pos:start="3:31" pos:end="3:44">( <argument pos:start="3:33" pos:end="3:42"><expr pos:start="3:33" pos:end="3:42"><name pos:start="3:33" pos:end="3:38">String</name> <name pos:start="3:40" pos:end="3:42">val</name></expr></argument> )</argument_list></call> <block pos:start="3:46" pos:end="6:9">{
        <expr pos:start="4:9" pos:end="5:19"><call pos:start="4:9" pos:end="4:101"><name pos:start="4:9" pos:end="4:10">If</name> <argument_list pos:start="4:12" pos:end="4:101">(<argument pos:start="4:13" pos:end="4:100"><expr pos:start="4:13" pos:end="4:100"><operator pos:start="4:13" pos:end="4:13">(</operator> <name pos:start="4:15" pos:end="4:17">val</name> <operator pos:start="4:19" pos:end="4:20">==</operator> <literal type="null" pos:start="4:22" pos:end="4:25">null</literal> <operator pos:start="4:27" pos:end="4:28">||</operator> <literal type="string" pos:start="4:30" pos:end="4:31">""</literal><operator pos:start="4:32" pos:end="4:32">.</operator><call pos:start="4:33" pos:end="4:45"><name pos:start="4:33" pos:end="4:38">equals</name><argument_list pos:start="4:39" pos:end="4:45">( <argument pos:start="4:41" pos:end="4:43"><expr pos:start="4:41" pos:end="4:43"><name pos:start="4:41" pos:end="4:43">val</name></expr></argument> )</argument_list></call><operator pos:start="4:46" pos:end="4:46">)</operator> <operator pos:start="4:48" pos:end="4:49">&amp;&amp;</operator> <operator pos:start="4:51" pos:end="4:51">(</operator> <name pos:start="4:53" pos:end="4:63">Combo_Value</name> <operator pos:start="4:65" pos:end="4:66">==</operator> <literal type="null" pos:start="4:68" pos:end="4:71">null</literal> <operator pos:start="4:73" pos:end="4:74">||</operator> <literal type="string" pos:start="4:76" pos:end="4:77">""</literal><operator pos:start="4:78" pos:end="4:78">.</operator><call pos:start="4:79" pos:end="4:99"><name pos:start="4:79" pos:end="4:84">equals</name><argument_list pos:start="4:85" pos:end="4:99">( <argument pos:start="4:87" pos:end="4:97"><expr pos:start="4:87" pos:end="4:97"><name pos:start="4:87" pos:end="4:97">Combo_Value</name></expr></argument> )</argument_list></call><operator pos:start="4:100" pos:end="4:100">)</operator></expr></argument>)</argument_list></call> <block pos:start="4:103" pos:end="5:19">{
            <return pos:start="5:13" pos:end="5:19">return;</return></block></expr>
        }</block></expr>
        <if_stmt pos:start="7:9" pos:end="9:35"><if pos:start="7:9" pos:end="9:35">if <condition pos:start="7:12" pos:end="7:99">(<expr pos:start="7:13" pos:end="7:98"><operator pos:start="7:13" pos:end="7:13">(</operator> <name pos:start="7:15" pos:end="7:17">val</name> <operator pos:start="7:19" pos:end="7:20">==</operator> <literal type="null" pos:start="7:22" pos:end="7:25">null</literal> <operator pos:start="7:27" pos:end="7:27">)</operator> <operator pos:start="7:29" pos:end="7:30">||</operator> <operator pos:start="7:32" pos:end="7:32">(</operator> <operator pos:start="7:34" pos:end="7:34">!</operator><call pos:start="7:35" pos:end="7:59"><name pos:start="7:35" pos:end="7:44"><name pos:start="7:35" pos:end="7:37">val</name><operator pos:start="7:38" pos:end="7:38">.</operator><name pos:start="7:39" pos:end="7:44">equals</name></name><argument_list pos:start="7:45" pos:end="7:59">( <argument pos:start="7:47" pos:end="7:57"><expr pos:start="7:47" pos:end="7:57"><name pos:start="7:47" pos:end="7:57">Combo_Value</name></expr></argument> )</argument_list></call><operator pos:start="7:60" pos:end="7:60">)</operator> <operator pos:start="7:62" pos:end="7:63">||</operator> <operator pos:start="7:65" pos:end="7:65">(</operator> <name pos:start="7:67" pos:end="7:78">updateStatus</name> <operator pos:start="7:80" pos:end="7:81">==</operator> <name pos:start="7:83" pos:end="7:96">NULL_INT_VALUE</name> <operator pos:start="7:98" pos:end="7:98">)</operator></expr>)</condition> <block pos:start="7:101" pos:end="9:35">{<block_content pos:start="8:13" pos:end="9:35">
            <expr_stmt pos:start="8:13" pos:end="8:30"><expr pos:start="8:13" pos:end="8:29"><name pos:start="8:13" pos:end="8:23">Combo_Value</name> <operator pos:start="8:25" pos:end="8:25">=</operator> <name pos:start="8:27" pos:end="8:29">val</name></expr>;</expr_stmt>
            <expr_stmt pos:start="9:13" pos:end="9:35"><expr pos:start="9:13" pos:end="9:34"><name pos:start="9:13" pos:end="9:24">updateStatus</name> <operator pos:start="9:26" pos:end="9:26">=</operator> <name pos:start="9:28" pos:end="9:34">UPDATED</name></expr>;</expr_stmt>
        <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>
    }
}
<expr pos:start="13:1" pos:end="13:3"><operator pos:start="13:1" pos:end="13:1">`</operator><operator pos:start="13:2" pos:end="13:2">`</operator><operator pos:start="13:3" pos:end="13:3">`</operator></expr></unit>
