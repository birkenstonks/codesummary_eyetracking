<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/pluginRegistryContains_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="29:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:27">PluginRegistry</name> <block pos:start="1:29" pos:end="29:1">{

    <decl_stmt pos:start="3:5" pos:end="3:46"><decl pos:start="3:5" pos:end="3:45"><type pos:start="3:5" pos:end="3:36"><specifier pos:start="3:5" pos:end="3:11">private</specifier> <name pos:start="3:13" pos:end="3:36"><name pos:start="3:13" pos:end="3:16">List</name><argument_list type="generic" pos:start="3:17" pos:end="3:36">&lt;<argument pos:start="3:18" pos:end="3:35"><name pos:start="3:18" pos:end="3:35">PluginRegistryNode</name></argument>&gt;</argument_list></name></type> <name pos:start="3:38" pos:end="3:45">registry</name></decl>;</decl_stmt>

    <constructor pos:start="5:5" pos:end="7:5"><specifier pos:start="5:5" pos:end="5:10">public</specifier> <name pos:start="5:12" pos:end="5:25">PluginRegistry</name><parameter_list pos:start="5:26" pos:end="5:27">()</parameter_list> <block pos:start="5:29" pos:end="7:5">{<block_content pos:start="6:9" pos:end="6:42">
        <expr_stmt pos:start="6:9" pos:end="6:42"><expr pos:start="6:9" pos:end="6:41"><name pos:start="6:9" pos:end="6:21"><name pos:start="6:9" pos:end="6:12">this</name><operator pos:start="6:13" pos:end="6:13">.</operator><name pos:start="6:14" pos:end="6:21">registry</name></name> <operator pos:start="6:23" pos:end="6:23">=</operator> <operator pos:start="6:25" pos:end="6:27">new</operator> <call pos:start="6:29" pos:end="6:41"><name pos:start="6:29" pos:end="6:39"><name pos:start="6:29" pos:end="6:37">ArrayList</name><argument_list type="generic" pos:start="6:38" pos:end="6:39">&lt;&gt;</argument_list></name><argument_list pos:start="6:40" pos:end="6:41">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function pos:start="9:5" pos:end="13:5"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:10">public</specifier> <name pos:start="9:12" pos:end="9:15">void</name></type> <name pos:start="9:17" pos:end="9:23">addNode</name><parameter_list pos:start="9:24" pos:end="9:48">(<parameter pos:start="9:25" pos:end="9:47"><decl pos:start="9:25" pos:end="9:47"><type pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:42">PluginRegistryNode</name></type> <name pos:start="9:44" pos:end="9:47">node</name></decl></parameter>)</parameter_list> <block pos:start="9:50" pos:end="13:5">{<block_content pos:start="10:9" pos:end="12:9">
        <synchronized pos:start="10:9" pos:end="12:9">synchronized <init pos:start="10:22" pos:end="10:31">(<expr pos:start="10:23" pos:end="10:30"><name pos:start="10:23" pos:end="10:30">registry</name></expr>)</init> <block pos:start="10:33" pos:end="12:9">{<block_content pos:start="11:13" pos:end="11:31">
            <expr_stmt pos:start="11:13" pos:end="11:31"><expr pos:start="11:13" pos:end="11:30"><call pos:start="11:13" pos:end="11:30"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:20">registry</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:24">add</name></name><argument_list pos:start="11:25" pos:end="11:30">(<argument pos:start="11:26" pos:end="11:29"><expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></synchronized>
    </block_content>}</block></function>

    <function pos:start="15:5" pos:end="27:5"><type pos:start="15:5" pos:end="15:18"><specifier pos:start="15:5" pos:end="15:10">public</specifier> <name pos:start="15:12" pos:end="15:18">boolean</name></type> <name pos:start="15:20" pos:end="15:41">pluginRegistryContains</name><parameter_list pos:start="15:42" pos:end="15:60">(<parameter pos:start="15:43" pos:end="15:59"><decl pos:start="15:43" pos:end="15:59"><type pos:start="15:43" pos:end="15:48"><name pos:start="15:43" pos:end="15:48">String</name></type> <name pos:start="15:50" pos:end="15:59">pluginName</name></decl></parameter>)</parameter_list> <block pos:start="15:62" pos:end="27:5">{<block_content pos:start="16:9" pos:end="26:21">
        <synchronized pos:start="16:9" pos:end="25:9">synchronized <init pos:start="16:22" pos:end="16:31">(<expr pos:start="16:23" pos:end="16:30"><name pos:start="16:23" pos:end="16:30">registry</name></expr>)</init> <block pos:start="16:33" pos:end="25:9">{<block_content pos:start="17:13" pos:end="24:13">
            <decl_stmt pos:start="17:13" pos:end="17:46"><decl pos:start="17:13" pos:end="17:45"><type pos:start="17:13" pos:end="17:40"><name pos:start="17:13" pos:end="17:40"><name pos:start="17:13" pos:end="17:20">Iterator</name><argument_list type="generic" pos:start="17:21" pos:end="17:40">&lt;<argument pos:start="17:22" pos:end="17:39"><name pos:start="17:22" pos:end="17:39">PluginRegistryNode</name></argument>&gt;</argument_list></name></type> <name pos:start="17:42" pos:end="17:45">iter</name></decl>;</decl_stmt>

            <for pos:start="19:13" pos:end="24:13">for <control pos:start="19:17" pos:end="19:62">(<init pos:start="19:18" pos:end="19:44"><expr pos:start="19:18" pos:end="19:43"><name pos:start="19:18" pos:end="19:21">iter</name> <operator pos:start="19:23" pos:end="19:23">=</operator> <call pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:41"><name pos:start="19:25" pos:end="19:32">registry</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:41">iterator</name></name><argument_list pos:start="19:42" pos:end="19:43">()</argument_list></call></expr>;</init> <condition pos:start="19:46" pos:end="19:60"><expr pos:start="19:46" pos:end="19:59"><call pos:start="19:46" pos:end="19:59"><name pos:start="19:46" pos:end="19:57"><name pos:start="19:46" pos:end="19:49">iter</name><operator pos:start="19:50" pos:end="19:50">.</operator><name pos:start="19:51" pos:end="19:57">hasNext</name></name><argument_list pos:start="19:58" pos:end="19:59">()</argument_list></call></expr>;</condition> <incr/>)</control> <block pos:start="19:64" pos:end="24:13">{<block_content pos:start="20:17" pos:end="23:17">
                <decl_stmt pos:start="20:17" pos:end="20:54"><decl pos:start="20:17" pos:end="20:53"><type pos:start="20:17" pos:end="20:34"><name pos:start="20:17" pos:end="20:34">PluginRegistryNode</name></type> <name pos:start="20:36" pos:end="20:39">node</name> <init pos:start="20:41" pos:end="20:53">= <expr pos:start="20:43" pos:end="20:53"><call pos:start="20:43" pos:end="20:53"><name pos:start="20:43" pos:end="20:51"><name pos:start="20:43" pos:end="20:46">iter</name><operator pos:start="20:47" pos:end="20:47">.</operator><name pos:start="20:48" pos:end="20:51">next</name></name><argument_list pos:start="20:52" pos:end="20:53">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="21:17" pos:end="23:17"><if pos:start="21:17" pos:end="23:17">if <condition pos:start="21:20" pos:end="21:61">(<expr pos:start="21:21" pos:end="21:60"><call pos:start="21:21" pos:end="21:41"><name pos:start="21:21" pos:end="21:39"><name pos:start="21:21" pos:end="21:24">node</name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:31">plugin</name><operator pos:start="21:32" pos:end="21:32">.</operator><name pos:start="21:33" pos:end="21:39">getName</name></name><argument_list pos:start="21:40" pos:end="21:41">()</argument_list></call><operator pos:start="21:42" pos:end="21:42">.</operator><call pos:start="21:43" pos:end="21:60"><name pos:start="21:43" pos:end="21:48">equals</name><argument_list pos:start="21:49" pos:end="21:60">(<argument pos:start="21:50" pos:end="21:59"><expr pos:start="21:50" pos:end="21:59"><name pos:start="21:50" pos:end="21:59">pluginName</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:63" pos:end="23:17">{<block_content pos:start="22:21" pos:end="22:32">
                    <return pos:start="22:21" pos:end="22:32">return <expr pos:start="22:28" pos:end="22:31"><literal type="boolean" pos:start="22:28" pos:end="22:31">true</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></synchronized>
        <return pos:start="26:9" pos:end="26:21">return <expr pos:start="26:16" pos:end="26:20"><literal type="boolean" pos:start="26:16" pos:end="26:20">false</literal></expr>;</return>
    </block_content>}</block></function>

}</block></class></unit>
