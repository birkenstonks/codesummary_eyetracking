<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/iamNear_wrapped.java"><class><specifier>public</specifier> class <name>ActorNearChecker</name> <block>{

   <function><type><specifier>private</specifier> <name>boolean</name></type> <name>iamNear</name><parameter_list>( <parameter><decl><type><name>Actor</name></type> <name>defender</name></decl></parameter> )</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name>short</name></type> <name>xDiff</name> <init>= <expr><operator>(</operator> <name>short</name> <operator>)</operator> <operator>(</operator> <call><name><name>defender</name><operator>.</operator><name>getXpos</name></name><argument_list>()</argument_list></call> <operator>-</operator> <call><name>getXpos</name><argument_list>()</argument_list></call> <operator>)</operator></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>short</name></type> <name>yDiff</name> <init>= <expr><operator>(</operator> <name>short</name> <operator>)</operator> <operator>(</operator> <call><name><name>defender</name><operator>.</operator><name>getYpos</name></name><argument_list>()</argument_list></call> <operator>-</operator> <call><name>getYpos</name><argument_list>()</argument_list></call> <operator>)</operator></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>( <expr><name>xDiff</name> <operator>&gt;</operator> <literal type="number">1</literal> <operator>||</operator> <name>yDiff</name> <operator>&gt;</operator> <literal type="number">1</literal> <operator>||</operator> <name>xDiff</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal> <operator>||</operator> <name>yDiff</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition> <block>{<block_content>
          <return>return <expr><literal type="boolean">false</literal></expr>;</return>
      </block_content>}</block></if></if_stmt>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
  </block_content>}</block></function> 
}</block></class></unit>
