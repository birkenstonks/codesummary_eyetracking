<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/iamNear_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="12:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:29">ActorNearChecker</name> <block pos:start="1:31" pos:end="12:1">{

   <function pos:start="3:4" pos:end="11:3"><type pos:start="3:4" pos:end="3:18"><specifier pos:start="3:4" pos:end="3:10">private</specifier> <name pos:start="3:12" pos:end="3:18">boolean</name></type> <name pos:start="3:20" pos:end="3:26">iamNear</name><parameter_list pos:start="3:27" pos:end="3:44">( <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:33"><name pos:start="3:29" pos:end="3:33">Actor</name></type> <name pos:start="3:35" pos:end="3:42">defender</name></decl></parameter> )</parameter_list> <block pos:start="3:46" pos:end="11:3">{<block_content pos:start="4:7" pos:end="10:18">
      <decl_stmt pos:start="4:7" pos:end="4:65"><decl pos:start="4:7" pos:end="4:64"><type pos:start="4:7" pos:end="4:11"><name pos:start="4:7" pos:end="4:11">short</name></type> <name pos:start="4:13" pos:end="4:17">xDiff</name> <init pos:start="4:19" pos:end="4:64">= <expr pos:start="4:21" pos:end="4:64"><operator pos:start="4:21" pos:end="4:21">(</operator> <name pos:start="4:23" pos:end="4:27">short</name> <operator pos:start="4:29" pos:end="4:29">)</operator> <operator pos:start="4:31" pos:end="4:31">(</operator> <call pos:start="4:33" pos:end="4:50"><name pos:start="4:33" pos:end="4:48"><name pos:start="4:33" pos:end="4:40">defender</name><operator pos:start="4:41" pos:end="4:41">.</operator><name pos:start="4:42" pos:end="4:48">getXpos</name></name><argument_list pos:start="4:49" pos:end="4:50">()</argument_list></call> <operator pos:start="4:52" pos:end="4:52">-</operator> <call pos:start="4:54" pos:end="4:62"><name pos:start="4:54" pos:end="4:60">getXpos</name><argument_list pos:start="4:61" pos:end="4:62">()</argument_list></call> <operator pos:start="4:64" pos:end="4:64">)</operator></expr></init></decl>;</decl_stmt>
      <decl_stmt pos:start="5:7" pos:end="5:65"><decl pos:start="5:7" pos:end="5:64"><type pos:start="5:7" pos:end="5:11"><name pos:start="5:7" pos:end="5:11">short</name></type> <name pos:start="5:13" pos:end="5:17">yDiff</name> <init pos:start="5:19" pos:end="5:64">= <expr pos:start="5:21" pos:end="5:64"><operator pos:start="5:21" pos:end="5:21">(</operator> <name pos:start="5:23" pos:end="5:27">short</name> <operator pos:start="5:29" pos:end="5:29">)</operator> <operator pos:start="5:31" pos:end="5:31">(</operator> <call pos:start="5:33" pos:end="5:50"><name pos:start="5:33" pos:end="5:48"><name pos:start="5:33" pos:end="5:40">defender</name><operator pos:start="5:41" pos:end="5:41">.</operator><name pos:start="5:42" pos:end="5:48">getYpos</name></name><argument_list pos:start="5:49" pos:end="5:50">()</argument_list></call> <operator pos:start="5:52" pos:end="5:52">-</operator> <call pos:start="5:54" pos:end="5:62"><name pos:start="5:54" pos:end="5:60">getYpos</name><argument_list pos:start="5:61" pos:end="5:62">()</argument_list></call> <operator pos:start="5:64" pos:end="5:64">)</operator></expr></init></decl>;</decl_stmt>

      <if_stmt pos:start="7:7" pos:end="9:7"><if pos:start="7:7" pos:end="9:7">if <condition pos:start="7:10" pos:end="7:63">( <expr pos:start="7:12" pos:end="7:61"><name pos:start="7:12" pos:end="7:16">xDiff</name> <operator pos:start="7:18" pos:end="7:18">&gt;</operator> <literal type="number" pos:start="7:20" pos:end="7:20">1</literal> <operator pos:start="7:22" pos:end="7:23">||</operator> <name pos:start="7:25" pos:end="7:29">yDiff</name> <operator pos:start="7:31" pos:end="7:31">&gt;</operator> <literal type="number" pos:start="7:33" pos:end="7:33">1</literal> <operator pos:start="7:35" pos:end="7:36">||</operator> <name pos:start="7:38" pos:end="7:42">xDiff</name> <operator pos:start="7:44" pos:end="7:44">&lt;</operator> <operator pos:start="7:46" pos:end="7:46">-</operator><literal type="number" pos:start="7:47" pos:end="7:47">1</literal> <operator pos:start="7:49" pos:end="7:50">||</operator> <name pos:start="7:52" pos:end="7:56">yDiff</name> <operator pos:start="7:58" pos:end="7:58">&lt;</operator> <operator pos:start="7:60" pos:end="7:60">-</operator><literal type="number" pos:start="7:61" pos:end="7:61">1</literal></expr> )</condition> <block pos:start="7:65" pos:end="9:7">{<block_content pos:start="8:11" pos:end="8:23">
          <return pos:start="8:11" pos:end="8:23">return <expr pos:start="8:18" pos:end="8:22"><literal type="boolean" pos:start="8:18" pos:end="8:22">false</literal></expr>;</return>
      </block_content>}</block></if></if_stmt>
      <return pos:start="10:7" pos:end="10:18">return <expr pos:start="10:14" pos:end="10:17"><literal type="boolean" pos:start="10:14" pos:end="10:17">true</literal></expr>;</return>
  </block_content>}</block></function> 
}</block></class></unit>
