<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/asMap_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="14:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:25">MapConverter</name> <block pos:start="1:27" pos:end="14:1">{
    <function pos:start="2:5" pos:end="13:5"><type pos:start="2:5" pos:end="2:14"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:14">Map</name></type> <name pos:start="2:16" pos:end="2:20">asMap</name><parameter_list pos:start="2:21" pos:end="2:22">()</parameter_list> <block pos:start="2:24" pos:end="13:5">{<block_content pos:start="3:9" pos:end="12:19">
        <decl_stmt pos:start="3:9" pos:end="3:32"><decl pos:start="3:9" pos:end="3:31"><type pos:start="3:9" pos:end="3:11"><name pos:start="3:9" pos:end="3:11">Map</name></type> <name pos:start="3:13" pos:end="3:15">map</name> <init pos:start="3:17" pos:end="3:31">= <expr pos:start="3:19" pos:end="3:31"><operator pos:start="3:19" pos:end="3:21">new</operator> <call pos:start="3:23" pos:end="3:31"><name pos:start="3:23" pos:end="3:29">HashMap</name><argument_list pos:start="3:30" pos:end="3:31">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:start="4:9" pos:end="4:40">// map.put ( "org_id", org_id );</comment>
        <expr_stmt pos:start="5:9" pos:end="5:43"><expr pos:start="5:9" pos:end="5:42"><call pos:start="5:9" pos:end="5:42"><name pos:start="5:9" pos:end="5:15"><name pos:start="5:9" pos:end="5:11">map</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:15">put</name></name><argument_list pos:start="5:16" pos:end="5:42">( <argument pos:start="5:18" pos:end="5:28"><expr pos:start="5:18" pos:end="5:28"><literal type="string" pos:start="5:18" pos:end="5:28">"startDate"</literal></expr></argument>, <argument pos:start="5:31" pos:end="5:40"><expr pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:40">start_date</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="6:9" pos:end="6:39"><expr pos:start="6:9" pos:end="6:38"><call pos:start="6:9" pos:end="6:38"><name pos:start="6:9" pos:end="6:15"><name pos:start="6:9" pos:end="6:11">map</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:15">put</name></name><argument_list pos:start="6:16" pos:end="6:38">( <argument pos:start="6:18" pos:end="6:26"><expr pos:start="6:18" pos:end="6:26"><literal type="string" pos:start="6:18" pos:end="6:26">"endDate"</literal></expr></argument>, <argument pos:start="6:29" pos:end="6:36"><expr pos:start="6:29" pos:end="6:36"><name pos:start="6:29" pos:end="6:36">end_date</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="8:9" pos:end="9:65"><if pos:start="8:9" pos:end="9:65">if <condition pos:start="8:12" pos:end="8:40">( <expr pos:start="8:14" pos:end="8:38"><name pos:start="8:14" pos:end="8:30"><name pos:start="8:14" pos:end="8:17">this</name><operator pos:start="8:18" pos:end="8:18">.</operator><name pos:start="8:19" pos:end="8:30">organization</name></name> <operator pos:start="8:32" pos:end="8:33">!=</operator> <literal type="null" pos:start="8:35" pos:end="8:38">null</literal></expr> )</condition><block type="pseudo" pos:start="9:13" pos:end="9:65"><block_content pos:start="9:13" pos:end="9:65">
            <expr_stmt pos:start="9:13" pos:end="9:65"><expr pos:start="9:13" pos:end="9:64"><call pos:start="9:13" pos:end="9:64"><name pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:15">map</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:19">put</name></name><argument_list pos:start="9:20" pos:end="9:64">( <argument pos:start="9:22" pos:end="9:35"><expr pos:start="9:22" pos:end="9:35"><literal type="string" pos:start="9:22" pos:end="9:35">"organization"</literal></expr></argument>, <argument pos:start="9:38" pos:end="9:62"><expr pos:start="9:38" pos:end="9:62"><name pos:start="9:38" pos:end="9:62"><name pos:start="9:38" pos:end="9:41">this</name><operator pos:start="9:42" pos:end="9:42">.</operator><name pos:start="9:43" pos:end="9:54">organization</name><operator pos:start="9:55" pos:end="9:55">.</operator><name pos:start="9:56" pos:end="9:62">acronym</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:72"><expr pos:start="10:9" pos:end="10:71"><call pos:start="10:9" pos:end="10:71"><name pos:start="10:9" pos:end="10:15"><name pos:start="10:9" pos:end="10:11">map</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:15">put</name></name><argument_list pos:start="10:16" pos:end="10:71">( <argument pos:start="10:18" pos:end="10:23"><expr pos:start="10:18" pos:end="10:23"><literal type="string" pos:start="10:18" pos:end="10:23">"type"</literal></expr></argument>, <argument pos:start="10:26" pos:end="10:70"><expr pos:start="10:26" pos:end="10:70"><operator pos:start="10:26" pos:end="10:26">(</operator> <ternary pos:start="10:28" pos:end="10:68"><condition pos:start="10:28" pos:end="10:45"><expr pos:start="10:28" pos:end="10:43"><call pos:start="10:28" pos:end="10:43"><name pos:start="10:28" pos:end="10:41"><name pos:start="10:28" pos:end="10:31">this</name><operator pos:start="10:32" pos:end="10:32">.</operator><name pos:start="10:33" pos:end="10:41">isVisitor</name></name><argument_list pos:start="10:42" pos:end="10:43">()</argument_list></call></expr> ?</condition><then pos:start="10:47" pos:end="10:55"> <expr pos:start="10:47" pos:end="10:55"><literal type="string" pos:start="10:47" pos:end="10:55">"Visitor"</literal></expr> </then><else pos:start="10:57" pos:end="10:68">: <expr pos:start="10:59" pos:end="10:68"><literal type="string" pos:start="10:59" pos:end="10:68">"Employee"</literal></expr></else></ternary> <operator pos:start="10:70" pos:end="10:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:start="11:9" pos:end="11:40">// return new JSONObject( map );</comment>
        <return pos:start="12:9" pos:end="12:19">return <expr pos:start="12:16" pos:end="12:18"><name pos:start="12:16" pos:end="12:18">map</name></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
