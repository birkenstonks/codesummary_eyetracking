<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/add_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="26:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:24">DateManager</name> <block pos:start="1:26" pos:end="26:1">{
    <decl_stmt pos:start="2:5" pos:end="2:29"><decl pos:start="2:5" pos:end="2:28"><type pos:start="2:5" pos:end="2:22"><specifier pos:start="2:5" pos:end="2:11">private</specifier> <name pos:start="2:13" pos:end="2:22"><name pos:start="2:13" pos:end="2:16">List</name><argument_list type="generic" pos:start="2:17" pos:end="2:22">&lt;<argument pos:start="2:18" pos:end="2:21"><name pos:start="2:18" pos:end="2:21">Date</name></argument>&gt;</argument_list></name></type> <name pos:start="2:24" pos:end="2:28">dates</name></decl>;</decl_stmt>

    <constructor pos:start="4:5" pos:end="6:5"><specifier pos:start="4:5" pos:end="4:10">public</specifier> <name pos:start="4:12" pos:end="4:22">DateManager</name><parameter_list pos:start="4:23" pos:end="4:24">()</parameter_list> <block pos:start="4:26" pos:end="6:5">{<block_content pos:start="5:9" pos:end="5:34">
        <expr_stmt pos:start="5:9" pos:end="5:34"><expr pos:start="5:9" pos:end="5:33"><name pos:start="5:9" pos:end="5:13">dates</name> <operator pos:start="5:15" pos:end="5:15">=</operator> <operator pos:start="5:17" pos:end="5:19">new</operator> <call pos:start="5:21" pos:end="5:33"><name pos:start="5:21" pos:end="5:31"><name pos:start="5:21" pos:end="5:29">ArrayList</name><argument_list type="generic" pos:start="5:30" pos:end="5:31">&lt;&gt;</argument_list></name><argument_list pos:start="5:32" pos:end="5:33">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function pos:start="8:5" pos:end="25:5"><type pos:start="8:5" pos:end="8:18"><specifier pos:start="8:5" pos:end="8:10">public</specifier> <name pos:start="8:12" pos:end="8:18">boolean</name></type> <name pos:start="8:20" pos:end="8:22">add</name><parameter_list pos:start="8:23" pos:end="8:33">(<parameter pos:start="8:24" pos:end="8:32"><decl pos:start="8:24" pos:end="8:32"><type pos:start="8:24" pos:end="8:27"><name pos:start="8:24" pos:end="8:27">Date</name></type> <name pos:start="8:29" pos:end="8:32">date</name></decl></parameter>)</parameter_list> <block pos:start="8:35" pos:end="25:5">{<block_content pos:start="9:9" pos:end="24:20">
        <if_stmt pos:start="9:9" pos:end="10:25"><if pos:start="9:9" pos:end="10:25">if <condition pos:start="9:12" pos:end="9:33">(<expr pos:start="9:13" pos:end="9:32"><call pos:start="9:13" pos:end="9:32"><name pos:start="9:13" pos:end="9:26"><name pos:start="9:13" pos:end="9:17">dates</name><operator pos:start="9:18" pos:end="9:18">.</operator><name pos:start="9:19" pos:end="9:26">contains</name></name><argument_list pos:start="9:27" pos:end="9:32">(<argument pos:start="9:28" pos:end="9:31"><expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">date</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="10:13" pos:end="10:25"><block_content pos:start="10:13" pos:end="10:25">
            <return pos:start="10:13" pos:end="10:25">return <expr pos:start="10:20" pos:end="10:24"><literal type="boolean" pos:start="10:20" pos:end="10:24">false</literal></expr>;</return></block_content></block></if></if_stmt>

        <decl_stmt pos:start="12:9" pos:end="12:30"><decl pos:start="12:9" pos:end="12:29"><type pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:15">boolean</name></type> <name pos:start="12:17" pos:end="12:21">added</name> <init pos:start="12:23" pos:end="12:29">= <expr pos:start="12:25" pos:end="12:29"><literal type="boolean" pos:start="12:25" pos:end="12:29">false</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="13:9" pos:end="20:9">for <control pos:start="13:13" pos:end="13:56">(<init pos:start="13:14" pos:end="13:23"><decl pos:start="13:14" pos:end="13:22"><type pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">i</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</init> <condition pos:start="13:25" pos:end="13:51"><expr pos:start="13:25" pos:end="13:50"><name pos:start="13:25" pos:end="13:25">i</name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <call pos:start="13:29" pos:end="13:40"><name pos:start="13:29" pos:end="13:38"><name pos:start="13:29" pos:end="13:33">dates</name><operator pos:start="13:34" pos:end="13:34">.</operator><name pos:start="13:35" pos:end="13:38">size</name></name><argument_list pos:start="13:39" pos:end="13:40">()</argument_list></call> <operator pos:start="13:42" pos:end="13:43">&amp;&amp;</operator> <operator pos:start="13:45" pos:end="13:45">!</operator><name pos:start="13:46" pos:end="13:50">added</name></expr>;</condition> <incr pos:start="13:53" pos:end="13:55"><expr pos:start="13:53" pos:end="13:55"><name pos:start="13:53" pos:end="13:53">i</name><operator pos:start="13:54" pos:end="13:55">++</operator></expr></incr>)</control> <block pos:start="13:58" pos:end="20:9">{<block_content pos:start="14:13" pos:end="19:13">
            <decl_stmt pos:start="14:13" pos:end="14:41"><decl pos:start="14:13" pos:end="14:40"><type pos:start="14:13" pos:end="14:16"><name pos:start="14:13" pos:end="14:16">Date</name></type> <name pos:start="14:18" pos:end="14:25">nextDate</name> <init pos:start="14:27" pos:end="14:40">= <expr pos:start="14:29" pos:end="14:40"><call pos:start="14:29" pos:end="14:40"><name pos:start="14:29" pos:end="14:37"><name pos:start="14:29" pos:end="14:33">dates</name><operator pos:start="14:34" pos:end="14:34">.</operator><name pos:start="14:35" pos:end="14:37">get</name></name><argument_list pos:start="14:38" pos:end="14:40">(<argument pos:start="14:39" pos:end="14:39"><expr pos:start="14:39" pos:end="14:39"><name pos:start="14:39" pos:end="14:39">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="16:13" pos:end="19:13"><if pos:start="16:13" pos:end="19:13">if <condition pos:start="16:16" pos:end="16:38">(<expr pos:start="16:17" pos:end="16:37"><call pos:start="16:17" pos:end="16:37"><name pos:start="16:17" pos:end="16:27"><name pos:start="16:17" pos:end="16:20">date</name><operator pos:start="16:21" pos:end="16:21">.</operator><name pos:start="16:22" pos:end="16:27">before</name></name><argument_list pos:start="16:28" pos:end="16:37">(<argument pos:start="16:29" pos:end="16:36"><expr pos:start="16:29" pos:end="16:36"><name pos:start="16:29" pos:end="16:36">nextDate</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:40" pos:end="19:13">{<block_content pos:start="17:17" pos:end="18:29">
                <expr_stmt pos:start="17:17" pos:end="17:35"><expr pos:start="17:17" pos:end="17:34"><call pos:start="17:17" pos:end="17:34"><name pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:21">dates</name><operator pos:start="17:22" pos:end="17:22">.</operator><name pos:start="17:23" pos:end="17:25">add</name></name><argument_list pos:start="17:26" pos:end="17:34">(<argument pos:start="17:27" pos:end="17:27"><expr pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">i</name></expr></argument>, <argument pos:start="17:30" pos:end="17:33"><expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="18:17" pos:end="18:29"><expr pos:start="18:17" pos:end="18:28"><name pos:start="18:17" pos:end="18:21">added</name> <operator pos:start="18:23" pos:end="18:23">=</operator> <literal type="boolean" pos:start="18:25" pos:end="18:28">true</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <if_stmt pos:start="21:9" pos:end="23:9"><if pos:start="21:9" pos:end="23:9">if <condition pos:start="21:12" pos:end="21:19">(<expr pos:start="21:13" pos:end="21:18"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:18">added</name></expr>)</condition> <block pos:start="21:21" pos:end="23:9">{<block_content pos:start="22:13" pos:end="22:28">
            <expr_stmt pos:start="22:13" pos:end="22:28"><expr pos:start="22:13" pos:end="22:27"><call pos:start="22:13" pos:end="22:27"><name pos:start="22:13" pos:end="22:21"><name pos:start="22:13" pos:end="22:17">dates</name><operator pos:start="22:18" pos:end="22:18">.</operator><name pos:start="22:19" pos:end="22:21">add</name></name><argument_list pos:start="22:22" pos:end="22:27">(<argument pos:start="22:23" pos:end="22:26"><expr pos:start="22:23" pos:end="22:26"><name pos:start="22:23" pos:end="22:26">date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="24:9" pos:end="24:20">return <expr pos:start="24:16" pos:end="24:19"><literal type="boolean" pos:start="24:16" pos:end="24:19">true</literal></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
