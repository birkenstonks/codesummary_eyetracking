<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getUserNameFromCookie_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="24:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:25">CookieParser</name> <block pos:start="1:27" pos:end="24:1">{
    <decl_stmt pos:start="2:5" pos:end="2:65"><decl pos:start="2:5" pos:end="2:64"><type pos:start="2:5" pos:end="2:49"><specifier pos:start="2:5" pos:end="2:11">private</specifier> <name pos:start="2:13" pos:end="2:49"><name pos:start="2:13" pos:end="2:17">javax</name><operator pos:start="2:18" pos:end="2:18">.</operator><name pos:start="2:19" pos:end="2:25">servlet</name><operator pos:start="2:26" pos:end="2:26">.</operator><name pos:start="2:27" pos:end="2:30">http</name><operator pos:start="2:31" pos:end="2:31">.</operator><name pos:start="2:32" pos:end="2:49">HttpServletRequest</name></name></type> <name pos:start="2:51" pos:end="2:64">servletRequest</name></decl>;</decl_stmt>

    <constructor pos:start="4:5" pos:end="6:5"><specifier pos:start="4:5" pos:end="4:10">public</specifier> <name pos:start="4:12" pos:end="4:23">CookieParser</name><parameter_list pos:start="4:24" pos:end="4:77">(<parameter pos:start="4:25" pos:end="4:76"><decl pos:start="4:25" pos:end="4:76"><type pos:start="4:25" pos:end="4:61"><name pos:start="4:25" pos:end="4:61"><name pos:start="4:25" pos:end="4:29">javax</name><operator pos:start="4:30" pos:end="4:30">.</operator><name pos:start="4:31" pos:end="4:37">servlet</name><operator pos:start="4:38" pos:end="4:38">.</operator><name pos:start="4:39" pos:end="4:42">http</name><operator pos:start="4:43" pos:end="4:43">.</operator><name pos:start="4:44" pos:end="4:61">HttpServletRequest</name></name></type> <name pos:start="4:63" pos:end="4:76">servletRequest</name></decl></parameter>)</parameter_list> <block pos:start="4:79" pos:end="6:5">{<block_content pos:start="5:9" pos:end="5:45">
        <expr_stmt pos:start="5:9" pos:end="5:45"><expr pos:start="5:9" pos:end="5:44"><name pos:start="5:9" pos:end="5:27"><name pos:start="5:9" pos:end="5:12">this</name><operator pos:start="5:13" pos:end="5:13">.</operator><name pos:start="5:14" pos:end="5:27">servletRequest</name></name> <operator pos:start="5:29" pos:end="5:29">=</operator> <name pos:start="5:31" pos:end="5:44">servletRequest</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function pos:start="8:5" pos:end="23:5"><type pos:start="8:5" pos:end="8:18"><specifier pos:start="8:5" pos:end="8:11">private</specifier> <name pos:start="8:13" pos:end="8:18">String</name></type> <name pos:start="8:20" pos:end="8:40">getUserNameFromCookie</name><parameter_list pos:start="8:41" pos:end="8:42">()</parameter_list> <throws pos:start="8:44" pos:end="8:59">throws <argument pos:start="8:51" pos:end="8:59"><expr pos:start="8:51" pos:end="8:59"><name pos:start="8:51" pos:end="8:59">Exception</name></expr></argument></throws> <block pos:start="8:61" pos:end="23:5">{<block_content pos:start="9:9" pos:end="22:24">
        <decl_stmt pos:start="9:9" pos:end="9:31"><decl pos:start="9:9" pos:end="9:30"><type pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:14">String</name></type> <name pos:start="9:16" pos:end="9:23">userName</name> <init pos:start="9:25" pos:end="9:30">= <expr pos:start="9:27" pos:end="9:30"><literal type="null" pos:start="9:27" pos:end="9:30">null</literal></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:start="10:9" pos:end="10:24">// get user name</comment>
        <decl_stmt pos:start="11:9" pos:end="11:55"><decl pos:start="11:9" pos:end="11:54"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:14">Cookie</name><index pos:start="11:15" pos:end="11:16">[]</index></name></type> <name pos:start="11:18" pos:end="11:24">cookies</name> <init pos:start="11:26" pos:end="11:54">= <expr pos:start="11:28" pos:end="11:54"><call pos:start="11:28" pos:end="11:54"><name pos:start="11:28" pos:end="11:52"><name pos:start="11:28" pos:end="11:41">servletRequest</name><operator pos:start="11:42" pos:end="11:42">.</operator><name pos:start="11:43" pos:end="11:52">getCookies</name></name><argument_list pos:start="11:53" pos:end="11:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <for pos:start="13:9" pos:end="21:9">for <control pos:start="13:13" pos:end="13:48">(<init pos:start="13:14" pos:end="13:23"><decl pos:start="13:14" pos:end="13:22"><type pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">i</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</init> <condition pos:start="13:25" pos:end="13:43"><expr pos:start="13:25" pos:end="13:42"><name pos:start="13:25" pos:end="13:25">i</name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <name pos:start="13:29" pos:end="13:42"><name pos:start="13:29" pos:end="13:35">cookies</name><operator pos:start="13:36" pos:end="13:36">.</operator><name pos:start="13:37" pos:end="13:42">length</name></name></expr>;</condition> <incr pos:start="13:45" pos:end="13:47"><expr pos:start="13:45" pos:end="13:47"><name pos:start="13:45" pos:end="13:45">i</name><operator pos:start="13:46" pos:end="13:47">++</operator></expr></incr>)</control> <block pos:start="13:50" pos:end="21:9">{<block_content pos:start="14:13" pos:end="20:13">
            <decl_stmt pos:start="14:13" pos:end="14:39"><decl pos:start="14:13" pos:end="14:38"><type pos:start="14:13" pos:end="14:18"><name pos:start="14:13" pos:end="14:18">Cookie</name></type> <name pos:start="14:20" pos:end="14:25">cookie</name> <init pos:start="14:27" pos:end="14:38">= <expr pos:start="14:29" pos:end="14:38"><name pos:start="14:29" pos:end="14:38"><name pos:start="14:29" pos:end="14:35">cookies</name><index pos:start="14:36" pos:end="14:38">[<expr pos:start="14:37" pos:end="14:37"><name pos:start="14:37" pos:end="14:37">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="16:13" pos:end="20:13"><if pos:start="16:13" pos:end="20:13">if <condition pos:start="16:16" pos:end="16:79">(<expr pos:start="16:17" pos:end="16:78"><name pos:start="16:17" pos:end="16:22">cookie</name> <operator pos:start="16:24" pos:end="16:25">!=</operator> <literal type="null" pos:start="16:27" pos:end="16:30">null</literal> <operator pos:start="16:32" pos:end="16:33">&amp;&amp;</operator> <call pos:start="16:35" pos:end="16:50"><name pos:start="16:35" pos:end="16:48"><name pos:start="16:35" pos:end="16:40">cookie</name><operator pos:start="16:41" pos:end="16:41">.</operator><name pos:start="16:42" pos:end="16:48">getName</name></name><argument_list pos:start="16:49" pos:end="16:50">()</argument_list></call><operator pos:start="16:51" pos:end="16:51">.</operator><call pos:start="16:52" pos:end="16:78"><name pos:start="16:52" pos:end="16:57">equals</name><argument_list pos:start="16:58" pos:end="16:78">(<argument pos:start="16:59" pos:end="16:77"><expr pos:start="16:59" pos:end="16:77"><literal type="string" pos:start="16:59" pos:end="16:77">"platform.username"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:81" pos:end="20:13">{<block_content pos:start="17:17" pos:end="19:22">
                <decl_stmt pos:start="17:17" pos:end="17:49"><decl pos:start="17:17" pos:end="17:48"><type pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">String</name></type> <name pos:start="17:24" pos:end="17:28">value</name> <init pos:start="17:30" pos:end="17:48">= <expr pos:start="17:32" pos:end="17:48"><call pos:start="17:32" pos:end="17:48"><name pos:start="17:32" pos:end="17:46"><name pos:start="17:32" pos:end="17:37">cookie</name><operator pos:start="17:38" pos:end="17:38">.</operator><name pos:start="17:39" pos:end="17:46">getValue</name></name><argument_list pos:start="17:47" pos:end="17:48">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="18:17" pos:end="18:69"><expr pos:start="18:17" pos:end="18:68"><name pos:start="18:17" pos:end="18:24">userName</name> <operator pos:start="18:26" pos:end="18:26">=</operator> <call pos:start="18:28" pos:end="18:53"><name pos:start="18:28" pos:end="18:51"><name pos:start="18:28" pos:end="18:39">DesEncrypter</name><operator pos:start="18:40" pos:end="18:40">.</operator><name pos:start="18:41" pos:end="18:51">getInstance</name></name><argument_list pos:start="18:52" pos:end="18:53">()</argument_list></call><operator pos:start="18:54" pos:end="18:54">.</operator><call pos:start="18:55" pos:end="18:68"><name pos:start="18:55" pos:end="18:61">decrypt</name><argument_list pos:start="18:62" pos:end="18:68">(<argument pos:start="18:63" pos:end="18:67"><expr pos:start="18:63" pos:end="18:67"><name pos:start="18:63" pos:end="18:67">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="19:17" pos:end="19:22">break;</break>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <return pos:start="22:9" pos:end="22:24">return <expr pos:start="22:16" pos:end="22:23"><name pos:start="22:16" pos:end="22:23">userName</name></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
