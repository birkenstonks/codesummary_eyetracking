<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/testSetChkEvtID_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="13:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:22">EmailTest</name> <block pos:start="1:24" pos:end="13:1">{
    <function pos:start="2:5" pos:end="12:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:31">testSetChkEvtID</name><parameter_list pos:start="2:32" pos:end="2:33">()</parameter_list> <block pos:start="2:35" pos:end="12:5">{<block_content pos:start="3:9" pos:end="11:48">
        <expr_stmt pos:start="3:9" pos:end="3:44"><expr pos:start="3:9" pos:end="3:43"><call pos:start="3:9" pos:end="3:43"><name pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:14">System</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:18">out</name><operator pos:start="3:19" pos:end="3:19">.</operator><name pos:start="3:20" pos:end="3:26">println</name></name><argument_list pos:start="3:27" pos:end="3:43">( <argument pos:start="3:29" pos:end="3:41"><expr pos:start="3:29" pos:end="3:41"><literal type="string" pos:start="3:29" pos:end="3:41">"setChkEvtID"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            
        <decl_stmt pos:start="5:9" pos:end="5:29"><decl pos:start="5:9" pos:end="5:28"><type pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:14">String</name></type> <name pos:start="5:16" pos:end="5:23">ChkEvtID</name> <init pos:start="5:25" pos:end="5:28">= <expr pos:start="5:27" pos:end="5:28"><literal type="string" pos:start="5:27" pos:end="5:28">""</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="6:9" pos:end="6:51"><decl pos:start="6:9" pos:end="6:50"><type pos:start="6:9" pos:end="6:20"><name pos:start="6:9" pos:end="6:20">Email_DBImpl</name></type> <name pos:start="6:22" pos:end="6:29">instance</name> <init pos:start="6:31" pos:end="6:50">= <expr pos:start="6:33" pos:end="6:50"><operator pos:start="6:33" pos:end="6:35">new</operator> <call pos:start="6:37" pos:end="6:50"><name pos:start="6:37" pos:end="6:48">Email_DBImpl</name><argument_list pos:start="6:49" pos:end="6:50">()</argument_list></call></expr></init></decl>;</decl_stmt>
            
        <expr_stmt pos:start="8:9" pos:end="8:41"><expr pos:start="8:9" pos:end="8:40"><call pos:start="8:9" pos:end="8:40"><name pos:start="8:9" pos:end="8:28"><name pos:start="8:9" pos:end="8:16">instance</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:28">setChkEvtID</name></name><argument_list pos:start="8:29" pos:end="8:40">( <argument pos:start="8:31" pos:end="8:38"><expr pos:start="8:31" pos:end="8:38"><name pos:start="8:31" pos:end="8:38">ChkEvtID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            
        <comment type="line" pos:start="10:9" pos:end="10:83">// TODO review the generated test code and remove the default call to fail.</comment>
        <expr_stmt pos:start="11:9" pos:end="11:48"><expr pos:start="11:9" pos:end="11:47"><call pos:start="11:9" pos:end="11:47"><name pos:start="11:9" pos:end="11:12">fail</name><argument_list pos:start="11:13" pos:end="11:47">( <argument pos:start="11:15" pos:end="11:45"><expr pos:start="11:15" pos:end="11:45"><literal type="string" pos:start="11:15" pos:end="11:45">"The test case is a prototype."</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
