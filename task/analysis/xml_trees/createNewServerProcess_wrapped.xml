<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="wrapped_functions/createNewServerProcess_wrapped.java"><class><specifier>public</specifier> class <name>Server</name> <block>{
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>createNewServerProcess</name><parameter_list>( <parameter><decl><type><name>Socket</name></type> <name>socket</name></decl></parameter> )</parameter_list><block>{<block_content>
        <expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>info</name></name><argument_list>( <argument><expr><literal type="string">"Received connection on port "</literal> <operator>+</operator> <call><name>getPort</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" from ["</literal> <operator>+</operator> <call><name><name>socket</name><operator>.</operator><name>getInetAddress</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">":"</literal> <operator>+</operator> <call><name><name>socket</name><operator>.</operator><name>getPort</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"]."</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Thread</name></type> <name>t</name> <init>= <expr><operator>new</operator> <call><name>Thread</name><argument_list>( <argument><expr><call><name>getNewServerProcess</name><argument_list>( <argument><expr><name>socket</name></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>t</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>getServerProcesses</name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>( <argument><expr><name>t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><operator>new</operator> <call><name>Thread</name><argument_list>( <argument><expr><operator>new</operator> <call><name>Monitor</name><argument_list>( <argument><expr><name>t</name></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>start</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
