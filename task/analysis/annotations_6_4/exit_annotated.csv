word,occurrence,tree_parts
public,0,"['function', 'type', 'specifier']"
void,0,"['function', 'type', 'name']"
exit,0,"['function', 'name']"
EventObject,0,"['function', 'parameter_list', 'parameter', 'decl', 'type', 'name']"
event,0,"['function', 'parameter_list', 'parameter', 'decl', 'name']"
for,0,"['function', 'block', 'block_content', 'for']"
ExitListener,0,"['function', 'block', 'block_content', 'for', 'control', 'init', 'decl', 'type', 'name']"
listener,0,"['function', 'block', 'block_content', 'for', 'control', 'init', 'decl', 'name']"
:,0,"['function', 'block', 'block_content', 'for', 'control', 'init', 'decl', 'range']"
exitListeners,0,"['function', 'block', 'block_content', 'for', 'control', 'init', 'decl', 'range', 'expr', 'name']"
if,0,"['function', 'block', 'block_content', 'for', 'block', 'block_content', 'if_stmt', 'if']"
!,0,"['function', 'block', 'block_content', 'for', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'operator']"
listener,1,"['function', 'block', 'block_content', 'for', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'call', 'name', 'name']"
canExit,0,"['function', 'block', 'block_content', 'for', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'call', 'name', 'name']"
event,1,"['function', 'block', 'block_content', 'for', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
return;,0,"['function', 'block', 'block_content', 'for', 'block', 'block_content', 'if_stmt', 'if', 'block', 'block_content', 'return']"
try,0,"['function', 'block', 'block_content', 'try']"
for,1,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for']"
ExitListener,1,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'control', 'init', 'decl', 'type', 'name']"
listener,2,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'control', 'init', 'decl', 'name']"
:,1,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'control', 'init', 'decl', 'range']"
exitListeners,1,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'control', 'init', 'decl', 'range', 'expr', 'name']"
try,1,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try']"
listener,3,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
willExit,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
event,2,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
catch,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch']"
Exception,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch', 'parameter_list', 'parameter', 'decl', 'type', 'name']"
e,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch', 'parameter_list', 'parameter', 'decl', 'name']"
logger,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
log,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
Level,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name', 'name']"
WARNING,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name', 'name']"
"""ExitListener.willExit() failed""",0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
e,1,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'for', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
shutdown,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name']"
catch,1,"['function', 'block', 'block_content', 'try', 'catch']"
Exception,1,"['function', 'block', 'block_content', 'try', 'catch', 'parameter_list', 'parameter', 'decl', 'type', 'name']"
e,2,"['function', 'block', 'block_content', 'try', 'catch', 'parameter_list', 'parameter', 'decl', 'name']"
logger,1,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
log,1,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
Level,1,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name', 'name']"
WARNING,1,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name', 'name']"
"""unexpected error in Application.shutdown()""",0,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
e,3,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
finally,0,"['function', 'block', 'block_content', 'try', 'finally']"
end,0,"['function', 'block', 'block_content', 'try', 'finally', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name']"