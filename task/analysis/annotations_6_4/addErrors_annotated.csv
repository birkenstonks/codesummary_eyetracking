word,occurrence,tree_parts
public,0,"['function', 'type', 'specifier']"
void,0,"['function', 'type', 'name']"
addErrors,0,"['function', 'name']"
String,0,"['function', 'parameter_list', 'parameter', 'decl', 'type', 'name']"
el,0,"['function', 'parameter_list', 'parameter', 'decl', 'name']"
IErrorDescription,0,"['function', 'parameter_list', 'parameter', 'decl', 'type', 'name']"
...,0,"['function', 'parameter_list', 'parameter', 'decl', 'type', 'modifier']"
error,0,"['function', 'parameter_list', 'parameter', 'decl', 'name']"
final,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'specifier']"
IErrorDescription,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name', 'name']"
[],0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name', 'index']"
msg,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
errors,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
get,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
el,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
// we expect that the main scenario is to add only once errors per property...,0,"['function', 'block', 'block_content', 'comment']"
errors,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
put,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
el,2,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
msg,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'condition', 'expr', 'name']"
==,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'condition', 'expr', 'operator']"
null,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'condition', 'expr', 'literal']"
?,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'condition']"
error,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'then', 'expr', 'name']"
:,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'else']"
merge,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'else', 'expr', 'call', 'name']"
msg,2,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'else', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
error,2,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'else', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"