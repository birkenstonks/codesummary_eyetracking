<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getScopePartnerLinks_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="15:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:35">ScopePartnerLinkFinder</name> <block pos:start="1:37" pos:end="15:1">{
    <function pos:start="2:5" pos:end="14:5"><type pos:start="2:5" pos:end="2:16"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:16">EList</name></type> <name pos:start="2:18" pos:end="2:37">getScopePartnerLinks</name><parameter_list pos:start="2:38" pos:end="2:60">(<parameter pos:start="2:39" pos:end="2:59"><decl pos:start="2:39" pos:end="2:59"><type pos:start="2:39" pos:end="2:51"><specifier pos:start="2:39" pos:end="2:43">final</specifier> <name pos:start="2:45" pos:end="2:51">EObject</name></type> <name pos:start="2:53" pos:end="2:59">process</name></decl></parameter>)</parameter_list> <block pos:start="2:62" pos:end="14:5">{<block_content pos:start="3:9" pos:end="13:23">
        <decl_stmt pos:start="3:9" pos:end="3:55"><decl pos:start="3:9" pos:end="3:54"><type pos:start="3:9" pos:end="3:20"><name pos:start="3:9" pos:end="3:20">TreeIterator</name></type> <name pos:start="3:22" pos:end="3:29">contents</name> <init pos:start="3:31" pos:end="3:54">= <expr pos:start="3:33" pos:end="3:54"><call pos:start="3:33" pos:end="3:54"><name pos:start="3:33" pos:end="3:52"><name pos:start="3:33" pos:end="3:39">process</name><operator pos:start="3:40" pos:end="3:40">.</operator><name pos:start="3:41" pos:end="3:52">eAllContents</name></name><argument_list pos:start="3:53" pos:end="3:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="4:9" pos:end="4:41"><decl pos:start="4:9" pos:end="4:40"><type pos:start="4:9" pos:end="4:13"><name pos:start="4:9" pos:end="4:13">EList</name></type> <name pos:start="4:15" pos:end="4:21">results</name> <init pos:start="4:23" pos:end="4:40">= <expr pos:start="4:25" pos:end="4:40"><operator pos:start="4:25" pos:end="4:27">new</operator> <call pos:start="4:29" pos:end="4:40"><name pos:start="4:29" pos:end="4:38">BasicEList</name><argument_list pos:start="4:39" pos:end="4:40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            
        <while pos:start="6:9" pos:end="12:9">while <condition pos:start="6:15" pos:end="6:34">(<expr pos:start="6:16" pos:end="6:33"><call pos:start="6:16" pos:end="6:33"><name pos:start="6:16" pos:end="6:31"><name pos:start="6:16" pos:end="6:23">contents</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:31">hasNext</name></name><argument_list pos:start="6:32" pos:end="6:33">()</argument_list></call></expr>)</condition> <block pos:start="6:36" pos:end="12:9">{<block_content pos:start="7:13" pos:end="11:13">
            <decl_stmt pos:start="7:13" pos:end="7:52"><decl pos:start="7:13" pos:end="7:51"><type pos:start="7:13" pos:end="7:19"><name pos:start="7:13" pos:end="7:19">EObject</name></type> <name pos:start="7:21" pos:end="7:23">obj</name> <init pos:start="7:25" pos:end="7:51">= <expr pos:start="7:27" pos:end="7:51"><operator pos:start="7:27" pos:end="7:27">(</operator><name pos:start="7:28" pos:end="7:34">EObject</name><operator pos:start="7:35" pos:end="7:35">)</operator> <call pos:start="7:37" pos:end="7:51"><name pos:start="7:37" pos:end="7:49"><name pos:start="7:37" pos:end="7:44">contents</name><operator pos:start="7:45" pos:end="7:45">.</operator><name pos:start="7:46" pos:end="7:49">next</name></name><argument_list pos:start="7:50" pos:end="7:51">()</argument_list></call></expr></init></decl>;</decl_stmt>
                
            <if_stmt pos:start="9:13" pos:end="11:13"><if pos:start="9:13" pos:end="11:13">if <condition pos:start="9:16" pos:end="9:37">(<expr pos:start="9:17" pos:end="9:36"><name pos:start="9:17" pos:end="9:19">obj</name> <operator pos:start="9:21" pos:end="9:30">instanceof</operator> <name pos:start="9:32" pos:end="9:36">Scope</name></expr>)</condition> <block pos:start="9:39" pos:end="11:13">{<block_content pos:start="10:17" pos:end="10:78">
                <expr_stmt pos:start="10:17" pos:end="10:78"><expr pos:start="10:17" pos:end="10:77"><call pos:start="10:17" pos:end="10:77"><name pos:start="10:17" pos:end="10:30"><name pos:start="10:17" pos:end="10:23">results</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:30">addAll</name></name><argument_list pos:start="10:31" pos:end="10:77">(<argument pos:start="10:32" pos:end="10:76"><expr pos:start="10:32" pos:end="10:76"><operator pos:start="10:32" pos:end="10:32">(</operator><operator pos:start="10:33" pos:end="10:33">(</operator><name pos:start="10:34" pos:end="10:38">Scope</name><operator pos:start="10:39" pos:end="10:39">)</operator> <name pos:start="10:41" pos:end="10:43">obj</name><operator pos:start="10:44" pos:end="10:44">)</operator><operator pos:start="10:45" pos:end="10:45">.</operator><call pos:start="10:46" pos:end="10:62"><name pos:start="10:46" pos:end="10:60">getPartnerLinks</name><argument_list pos:start="10:61" pos:end="10:62">()</argument_list></call><operator pos:start="10:63" pos:end="10:63">.</operator><call pos:start="10:64" pos:end="10:76"><name pos:start="10:64" pos:end="10:74">getChildren</name><argument_list pos:start="10:75" pos:end="10:76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>   
        </block_content>}</block></while>
        <return pos:start="13:9" pos:end="13:23">return <expr pos:start="13:16" pos:end="13:22"><name pos:start="13:16" pos:end="13:22">results</name></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
