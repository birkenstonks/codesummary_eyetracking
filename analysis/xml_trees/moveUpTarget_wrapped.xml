<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/moveUpTarget_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="18:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:25">MoveUpTarget</name> <block pos:start="1:27" pos:end="18:1">{

    <function pos:start="3:5" pos:end="16:5"><type pos:start="3:5" pos:end="3:15"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:15">void</name></type> <name pos:start="3:17" pos:end="3:28">moveUpTarget</name><parameter_list pos:start="3:29" pos:end="3:41">( <parameter pos:start="3:31" pos:end="3:39"><decl pos:start="3:31" pos:end="3:39"><type pos:start="3:31" pos:end="3:33"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:39">index</name></decl></parameter> )</parameter_list> <block pos:start="3:43" pos:end="16:5">{<block_content pos:start="4:9" pos:end="15:9">
        <decl_stmt pos:start="4:9" pos:end="4:44"><decl pos:start="4:9" pos:end="4:43"><type pos:start="4:9" pos:end="4:14"><name pos:start="4:9" pos:end="4:14">Object</name></type> <name pos:start="4:16" pos:end="4:21">target</name><init pos:start="4:22" pos:end="4:43">= <expr pos:start="4:24" pos:end="4:43"><call pos:start="4:24" pos:end="4:43"><name pos:start="4:24" pos:end="4:34"><name pos:start="4:24" pos:end="4:30">targets</name><operator pos:start="4:31" pos:end="4:31">.</operator><name pos:start="4:32" pos:end="4:34">get</name></name><argument_list pos:start="4:35" pos:end="4:43">( <argument pos:start="4:37" pos:end="4:41"><expr pos:start="4:37" pos:end="4:41"><name pos:start="4:37" pos:end="4:41">index</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="6:9" pos:end="8:9"><if pos:start="6:9" pos:end="8:9">if <condition pos:start="6:12" pos:end="6:43">( <expr pos:start="6:14" pos:end="6:41"><name pos:start="6:14" pos:end="6:18">index</name> <operator pos:start="6:20" pos:end="6:21">==</operator> <literal type="number" pos:start="6:23" pos:end="6:23">0</literal> <operator pos:start="6:25" pos:end="6:26">||</operator> <name pos:start="6:28" pos:end="6:33">target</name> <operator pos:start="6:35" pos:end="6:36">==</operator> <literal type="null" pos:start="6:38" pos:end="6:41">null</literal></expr> )</condition> <block pos:start="6:45" pos:end="8:9">{<block_content pos:start="7:13" pos:end="7:19">
            <return pos:start="7:13" pos:end="7:19">return;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:54"><expr pos:start="9:9" pos:end="9:53"><call pos:start="9:9" pos:end="9:53"><name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:15">targets</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:19">set</name></name><argument_list pos:start="9:20" pos:end="9:53">( <argument pos:start="9:22" pos:end="9:26"><expr pos:start="9:22" pos:end="9:26"><name pos:start="9:22" pos:end="9:26">index</name></expr></argument>, <argument pos:start="9:29" pos:end="9:52"><expr pos:start="9:29" pos:end="9:52"><call pos:start="9:29" pos:end="9:52"><name pos:start="9:29" pos:end="9:39"><name pos:start="9:29" pos:end="9:35">targets</name><operator pos:start="9:36" pos:end="9:36">.</operator><name pos:start="9:37" pos:end="9:39">get</name></name><argument_list pos:start="9:40" pos:end="9:52">( <argument pos:start="9:42" pos:end="9:50"><expr pos:start="9:42" pos:end="9:50"><name pos:start="9:42" pos:end="9:46">index</name> <operator pos:start="9:48" pos:end="9:48">-</operator> <literal type="number" pos:start="9:50" pos:end="9:50">1</literal></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:41"><expr pos:start="10:9" pos:end="10:40"><call pos:start="10:9" pos:end="10:40"><name pos:start="10:9" pos:end="10:19"><name pos:start="10:9" pos:end="10:15">targets</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:19">set</name></name><argument_list pos:start="10:20" pos:end="10:40">( <argument pos:start="10:22" pos:end="10:30"><expr pos:start="10:22" pos:end="10:30"><name pos:start="10:22" pos:end="10:26">index</name> <operator pos:start="10:28" pos:end="10:28">-</operator> <literal type="number" pos:start="10:30" pos:end="10:30">1</literal></expr></argument>, <argument pos:start="10:33" pos:end="10:38"><expr pos:start="10:33" pos:end="10:38"><name pos:start="10:33" pos:end="10:38">target</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:11">log</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:17">debug</name></name><argument_list pos:start="11:18" pos:end="11:35">( <argument pos:start="11:20" pos:end="11:33"><expr pos:start="11:20" pos:end="11:33"><literal type="string" pos:start="11:20" pos:end="11:33">"New ordering"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <for pos:start="13:9" pos:end="15:9">for <control pos:start="13:13" pos:end="13:50">( <init pos:start="13:15" pos:end="13:24"><decl pos:start="13:15" pos:end="13:23"><type pos:start="13:15" pos:end="13:17"><name pos:start="13:15" pos:end="13:17">int</name></type> <name pos:start="13:19" pos:end="13:19">i</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</init> <condition pos:start="13:26" pos:end="13:44"><expr pos:start="13:26" pos:end="13:43"><name pos:start="13:26" pos:end="13:26">i</name> <operator pos:start="13:28" pos:end="13:28">&lt;</operator> <call pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:41"><name pos:start="13:30" pos:end="13:36">targets</name><operator pos:start="13:37" pos:end="13:37">.</operator><name pos:start="13:38" pos:end="13:41">size</name></name><argument_list pos:start="13:42" pos:end="13:43">()</argument_list></call></expr>;</condition> <incr pos:start="13:46" pos:end="13:48"><expr pos:start="13:46" pos:end="13:48"><name pos:start="13:46" pos:end="13:46">i</name><operator pos:start="13:47" pos:end="13:48">++</operator></expr></incr> )</control> <block pos:start="13:52" pos:end="15:9">{<block_content pos:start="14:13" pos:end="14:52">
            <expr_stmt pos:start="14:13" pos:end="14:52"><expr pos:start="14:13" pos:end="14:51"><call pos:start="14:13" pos:end="14:51"><name pos:start="14:13" pos:end="14:21"><name pos:start="14:13" pos:end="14:15">log</name><operator pos:start="14:16" pos:end="14:16">.</operator><name pos:start="14:17" pos:end="14:21">debug</name></name><argument_list pos:start="14:22" pos:end="14:51">( <argument pos:start="14:24" pos:end="14:50"><expr pos:start="14:24" pos:end="14:50"><literal type="string" pos:start="14:24" pos:end="14:27">"|t"</literal> <operator pos:start="14:29" pos:end="14:29">+</operator> <name pos:start="14:31" pos:end="14:31">i</name> <operator pos:start="14:33" pos:end="14:33">+</operator> <call pos:start="14:35" pos:end="14:50"><name pos:start="14:35" pos:end="14:45"><name pos:start="14:35" pos:end="14:41">targets</name><operator pos:start="14:42" pos:end="14:42">.</operator><name pos:start="14:43" pos:end="14:45">get</name></name><argument_list pos:start="14:46" pos:end="14:50">( <argument pos:start="14:48" pos:end="14:48"><expr pos:start="14:48" pos:end="14:48"><name pos:start="14:48" pos:end="14:48">i</name></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></function>
    
}</block></class></unit>
