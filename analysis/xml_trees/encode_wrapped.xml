<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/encode_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="21:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:20">Encoder</name> <block pos:start="1:22" pos:end="21:1">{
    
    <function pos:start="3:5" pos:end="16:5"><type pos:start="3:5" pos:end="3:17"><specifier pos:start="3:5" pos:end="3:10">public</specifier> <name pos:start="3:12" pos:end="3:17">String</name></type> <name pos:start="3:19" pos:end="3:24">encode</name><parameter_list pos:start="3:25" pos:end="3:41">( <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:32"><name pos:start="3:27" pos:end="3:32">String</name></type> <name pos:start="3:34" pos:end="3:39">string</name></decl></parameter> )</parameter_list> <throws pos:start="3:43" pos:end="3:65">throws <argument pos:start="3:50" pos:end="3:65"><expr pos:start="3:50" pos:end="3:65"><name pos:start="3:50" pos:end="3:65">EncoderException</name></expr></argument></throws> <block pos:start="3:67" pos:end="16:5">{<block_content pos:start="4:9" pos:end="15:30">
        <decl_stmt pos:start="4:9" pos:end="4:36"><decl pos:start="4:9" pos:end="4:20"><type pos:start="4:9" pos:end="4:14"><name pos:start="4:9" pos:end="4:14"><name pos:start="4:9" pos:end="4:12">byte</name><index pos:start="4:13" pos:end="4:14">[]</index></name></type> <name pos:start="4:16" pos:end="4:20">bytes</name></decl>, <decl pos:start="4:23" pos:end="4:35"><type ref="prev" pos:start="4:9" pos:end="4:14"/><name pos:start="4:23" pos:end="4:35">encoded_bytes</name></decl>;</decl_stmt>
        <decl_stmt pos:start="5:9" pos:end="5:35"><decl pos:start="5:9" pos:end="5:34"><type pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:14">String</name></type> <name pos:start="5:16" pos:end="5:29">encoded_string</name> <init pos:start="5:31" pos:end="5:34">= <expr pos:start="5:33" pos:end="5:34"><literal type="string" pos:start="5:33" pos:end="5:34">""</literal></expr></init></decl>;</decl_stmt>
            
        <try pos:start="7:9" pos:end="14:9">try <block pos:start="7:13" pos:end="12:9">{<block_content pos:start="8:13" pos:end="10:57">
            <expr_stmt pos:start="8:13" pos:end="8:47"><expr pos:start="8:13" pos:end="8:46"><name pos:start="8:13" pos:end="8:17">bytes</name> <operator pos:start="8:19" pos:end="8:19">=</operator> <call pos:start="8:21" pos:end="8:46"><name pos:start="8:21" pos:end="8:35"><name pos:start="8:21" pos:end="8:26">string</name><operator pos:start="8:27" pos:end="8:27">.</operator><name pos:start="8:28" pos:end="8:35">getBytes</name></name><argument_list pos:start="8:36" pos:end="8:46">( <argument pos:start="8:38" pos:end="8:44"><expr pos:start="8:38" pos:end="8:44"><literal type="string" pos:start="8:38" pos:end="8:44">"UTF-8"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="9:13" pos:end="9:50"><expr pos:start="9:13" pos:end="9:49"><name pos:start="9:13" pos:end="9:25">encoded_bytes</name> <operator pos:start="9:27" pos:end="9:27">=</operator> <call pos:start="9:29" pos:end="9:49"><name pos:start="9:29" pos:end="9:40">encodeBase64</name><argument_list pos:start="9:41" pos:end="9:49">( <argument pos:start="9:43" pos:end="9:47"><expr pos:start="9:43" pos:end="9:47"><name pos:start="9:43" pos:end="9:47">bytes</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="10:13" pos:end="10:57"><expr pos:start="10:13" pos:end="10:56"><name pos:start="10:13" pos:end="10:26">encoded_string</name> <operator pos:start="10:28" pos:end="10:28">=</operator> <operator pos:start="10:30" pos:end="10:32">new</operator> <call pos:start="10:34" pos:end="10:56"><name pos:start="10:34" pos:end="10:39">String</name><argument_list pos:start="10:40" pos:end="10:56">( <argument pos:start="10:42" pos:end="10:54"><expr pos:start="10:42" pos:end="10:54"><name pos:start="10:42" pos:end="10:54">encoded_bytes</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            
        </block_content>}</block> <catch pos:start="12:11" pos:end="14:9">catch <parameter_list pos:start="12:17" pos:end="12:51">( <parameter pos:start="12:19" pos:end="12:49"><decl pos:start="12:19" pos:end="12:49"><type pos:start="12:19" pos:end="12:49"><name pos:start="12:19" pos:end="12:46">UnsupportedEncodingException</name></type> <name pos:start="12:48" pos:end="12:49">ex</name></decl></parameter> )</parameter_list> <block pos:start="12:53" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:33">
            <expr_stmt pos:start="13:13" pos:end="13:33"><expr pos:start="13:13" pos:end="13:32"><call pos:start="13:13" pos:end="13:32"><name pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:14">ex</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:30">printStackTrace</name></name><argument_list pos:start="13:31" pos:end="13:32">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <return pos:start="15:9" pos:end="15:30">return <expr pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:29">encoded_string</name></expr>;</return>
    </block_content>}</block></function>

    <function pos:start="18:5" pos:end="20:5"><type pos:start="18:5" pos:end="18:18"><specifier pos:start="18:5" pos:end="18:11">private</specifier> <name pos:start="18:13" pos:end="18:18"><name pos:start="18:13" pos:end="18:16">byte</name><index pos:start="18:17" pos:end="18:18">[]</index></name></type> <name pos:start="18:20" pos:end="18:31">encodeBase64</name><parameter_list pos:start="18:32" pos:end="18:47">( <parameter pos:start="18:34" pos:end="18:45"><decl pos:start="18:34" pos:end="18:45"><type pos:start="18:34" pos:end="18:39"><name pos:start="18:34" pos:end="18:39"><name pos:start="18:34" pos:end="18:37">byte</name><index pos:start="18:38" pos:end="18:39">[]</index></name></type> <name pos:start="18:41" pos:end="18:45">bytes</name></decl></parameter> )</parameter_list> <block pos:start="18:49" pos:end="20:5">{<block_content>
        <comment type="line" pos:start="19:9" pos:end="19:50">// implementation of Base64 encoding logic</comment>
    </block_content>}</block></function>
}</block></class></unit>
