<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/selectBracketingEntries_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="15:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:20">Wrapper</name> <block pos:start="1:22" pos:end="15:1">{

    <function pos:start="3:5" pos:end="14:5"><type pos:start="3:5" pos:end="3:21"><specifier pos:start="3:5" pos:end="3:13">protected</specifier> <name pos:start="3:15" pos:end="3:21">boolean</name></type> <name pos:start="3:23" pos:end="3:45">selectBracketingEntries</name><parameter_list pos:start="3:46" pos:end="3:70">(<parameter pos:start="3:47" pos:end="3:69"><decl pos:start="3:47" pos:end="3:69"><type pos:start="3:47" pos:end="3:64"><specifier pos:start="3:47" pos:end="3:51">final</specifier> <name pos:start="3:53" pos:end="3:64">AbsoluteDate</name></type> <name pos:start="3:66" pos:end="3:69">date</name></decl></parameter>)</parameter_list> <block pos:start="3:72" pos:end="14:5">{<block_content pos:start="4:9" pos:end="13:9">
        <try pos:start="4:9" pos:end="13:9">try <block pos:start="4:13" pos:end="9:9">{<block_content pos:start="6:13" pos:end="8:24">
            <comment type="line" pos:start="5:13" pos:end="5:45">// select the bracketing elements</comment>
            <expr_stmt pos:start="6:13" pos:end="6:66"><expr pos:start="6:13" pos:end="6:65"><name pos:start="6:13" pos:end="6:16">next</name> <operator pos:start="6:18" pos:end="6:18">=</operator> <operator pos:start="6:20" pos:end="6:20">(</operator><name pos:start="6:21" pos:end="6:36">TimeStampedEntry</name><operator pos:start="6:37" pos:end="6:37">)</operator> <operator pos:start="6:39" pos:end="6:39">(</operator><call pos:start="6:40" pos:end="6:56"><name pos:start="6:40" pos:end="6:50"><name pos:start="6:40" pos:end="6:42">eop</name><operator pos:start="6:43" pos:end="6:43">.</operator><name pos:start="6:44" pos:end="6:50">tailSet</name></name><argument_list pos:start="6:51" pos:end="6:56">(<argument pos:start="6:52" pos:end="6:55"><expr pos:start="6:52" pos:end="6:55"><name pos:start="6:52" pos:end="6:55">date</name></expr></argument>)</argument_list></call><operator pos:start="6:57" pos:end="6:57">.</operator><call pos:start="6:58" pos:end="6:64"><name pos:start="6:58" pos:end="6:62">first</name><argument_list pos:start="6:63" pos:end="6:64">()</argument_list></call><operator pos:start="6:65" pos:end="6:65">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="7:13" pos:end="7:69"><expr pos:start="7:13" pos:end="7:68"><name pos:start="7:13" pos:end="7:20">previous</name> <operator pos:start="7:22" pos:end="7:22">=</operator> <operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:40">TimeStampedEntry</name><operator pos:start="7:41" pos:end="7:41">)</operator> <operator pos:start="7:43" pos:end="7:43">(</operator><call pos:start="7:44" pos:end="7:60"><name pos:start="7:44" pos:end="7:54"><name pos:start="7:44" pos:end="7:46">eop</name><operator pos:start="7:47" pos:end="7:47">.</operator><name pos:start="7:48" pos:end="7:54">headSet</name></name><argument_list pos:start="7:55" pos:end="7:60">(<argument pos:start="7:56" pos:end="7:59"><expr pos:start="7:56" pos:end="7:59"><name pos:start="7:56" pos:end="7:59">next</name></expr></argument>)</argument_list></call><operator pos:start="7:61" pos:end="7:61">.</operator><call pos:start="7:62" pos:end="7:67"><name pos:start="7:62" pos:end="7:65">last</name><argument_list pos:start="7:66" pos:end="7:67">()</argument_list></call><operator pos:start="7:68" pos:end="7:68">)</operator></expr>;</expr_stmt>
            <return pos:start="8:13" pos:end="8:24">return <expr pos:start="8:20" pos:end="8:23"><literal type="boolean" pos:start="8:20" pos:end="8:23">true</literal></expr>;</return>
        </block_content>}</block> <catch pos:start="9:11" pos:end="13:9">catch <parameter_list pos:start="9:17" pos:end="9:45">(<parameter pos:start="9:18" pos:end="9:44"><decl pos:start="9:18" pos:end="9:44"><type pos:start="9:18" pos:end="9:44"><name pos:start="9:18" pos:end="9:39">NoSuchElementException</name></type> <name pos:start="9:41" pos:end="9:44">nsee</name></decl></parameter>)</parameter_list> <block pos:start="9:47" pos:end="13:9">{<block_content pos:start="10:13" pos:end="12:25">
            <expr_stmt pos:start="10:13" pos:end="10:28"><expr pos:start="10:13" pos:end="10:27"><name pos:start="10:13" pos:end="10:20">previous</name> <operator pos:start="10:22" pos:end="10:22">=</operator> <literal type="null" pos:start="10:24" pos:end="10:27">null</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="11:13" pos:end="11:24"><expr pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:16">next</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <literal type="null" pos:start="11:20" pos:end="11:23">null</literal></expr>;</expr_stmt>
            <return pos:start="12:13" pos:end="12:25">return <expr pos:start="12:20" pos:end="12:24"><literal type="boolean" pos:start="12:20" pos:end="12:24">false</literal></expr>;</return>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
}</block></class></unit>
