<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/genSql_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="13:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:25">SqlGenerator</name> <block pos:start="1:27" pos:end="13:1">{
    <function pos:start="2:5" pos:end="12:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:22">genSql</name><parameter_list pos:start="2:23" pos:end="2:24">()</parameter_list> <throws pos:start="2:26" pos:end="2:47">throws <argument pos:start="2:33" pos:end="2:47"><expr pos:start="2:33" pos:end="2:47"><name pos:start="2:33" pos:end="2:47">PositionedError</name></expr></argument></throws> <block pos:start="2:49" pos:end="12:5">{<block_content pos:start="3:9" pos:end="11:9">
        <try pos:start="3:9" pos:end="11:9">try <block pos:start="3:13" pos:end="8:9">{<block_content pos:start="4:13" pos:end="7:24">
            <decl_stmt pos:start="4:13" pos:end="4:34"><decl pos:start="4:13" pos:end="4:33"><type pos:start="4:13" pos:end="4:29"><name pos:start="4:13" pos:end="4:29">SqlcPrettyPrinter</name></type> <name pos:start="4:31" pos:end="4:33">spp</name></decl>;</decl_stmt>
            <expr_stmt pos:start="5:13" pos:end="5:57"><expr pos:start="5:13" pos:end="5:56"><name pos:start="5:13" pos:end="5:15">spp</name> <operator pos:start="5:17" pos:end="5:17">=</operator> <operator pos:start="5:19" pos:end="5:21">new</operator> <call pos:start="5:23" pos:end="5:56"><name pos:start="5:23" pos:end="5:39">SqlcPrettyPrinter</name><argument_list pos:start="5:40" pos:end="5:56">( <argument pos:start="5:42" pos:end="5:54"><expr pos:start="5:42" pos:end="5:54"><call pos:start="5:42" pos:end="5:54"><name pos:start="5:42" pos:end="5:52"><name pos:start="5:42" pos:end="5:44">ref</name><operator pos:start="5:45" pos:end="5:45">.</operator><name pos:start="5:46" pos:end="5:52">getFile</name></name><argument_list pos:start="5:53" pos:end="5:54">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="6:13" pos:end="6:36"><expr pos:start="6:13" pos:end="6:35"><call pos:start="6:13" pos:end="6:35"><name pos:start="6:13" pos:end="6:26"><name pos:start="6:13" pos:end="6:15">spp</name><operator pos:start="6:16" pos:end="6:16">.</operator><name pos:start="6:17" pos:end="6:26">printCUnit</name></name><argument_list pos:start="6:27" pos:end="6:35">( <argument pos:start="6:29" pos:end="6:33"><expr pos:start="6:29" pos:end="6:33"><name pos:start="6:29" pos:end="6:33">elems</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="7:13" pos:end="7:24"><expr pos:start="7:13" pos:end="7:23"><call pos:start="7:13" pos:end="7:23"><name pos:start="7:13" pos:end="7:21"><name pos:start="7:13" pos:end="7:15">spp</name><operator pos:start="7:16" pos:end="7:16">.</operator><name pos:start="7:17" pos:end="7:21">close</name></name><argument_list pos:start="7:22" pos:end="7:23">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch pos:start="8:11" pos:end="11:9">catch <parameter_list pos:start="8:17" pos:end="8:35">( <parameter pos:start="8:19" pos:end="8:33"><decl pos:start="8:19" pos:end="8:33"><type pos:start="8:19" pos:end="8:33"><name pos:start="8:19" pos:end="8:29">IOException</name></type> <name pos:start="8:31" pos:end="8:33">ioe</name></decl></parameter> )</parameter_list> <block pos:start="8:37" pos:end="11:9">{<block_content pos:start="9:13" pos:end="10:67">
            <expr_stmt pos:start="9:13" pos:end="9:34"><expr pos:start="9:13" pos:end="9:33"><call pos:start="9:13" pos:end="9:33"><name pos:start="9:13" pos:end="9:31"><name pos:start="9:13" pos:end="9:15">ioe</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:31">printStackTrace</name></name><argument_list pos:start="9:32" pos:end="9:33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="10:13" pos:end="10:67"><expr pos:start="10:13" pos:end="10:66"><call pos:start="10:13" pos:end="10:66"><name pos:start="10:13" pos:end="10:30"><name pos:start="10:13" pos:end="10:18">System</name><operator pos:start="10:19" pos:end="10:19">.</operator><name pos:start="10:20" pos:end="10:22">err</name><operator pos:start="10:23" pos:end="10:23">.</operator><name pos:start="10:24" pos:end="10:30">println</name></name><argument_list pos:start="10:31" pos:end="10:66">( <argument pos:start="10:33" pos:end="10:64"><expr pos:start="10:33" pos:end="10:64"><literal type="string" pos:start="10:33" pos:end="10:48">"cannot write: "</literal> <operator pos:start="10:50" pos:end="10:50">+</operator> <call pos:start="10:52" pos:end="10:64"><name pos:start="10:52" pos:end="10:62"><name pos:start="10:52" pos:end="10:54">ref</name><operator pos:start="10:55" pos:end="10:55">.</operator><name pos:start="10:56" pos:end="10:62">getFile</name></name><argument_list pos:start="10:63" pos:end="10:64">()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
}</block></class></unit>
