<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/testGetEvtIDs_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="12:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:29">Email_DBImplTest</name> <block pos:start="1:31" pos:end="12:1">{
    <function pos:start="2:5" pos:end="11:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:29">testGetEvtIDs</name><parameter_list pos:start="2:30" pos:end="2:31">()</parameter_list> <block pos:start="2:33" pos:end="11:5">{<block_content pos:start="3:9" pos:end="10:48">
        <expr_stmt pos:start="3:9" pos:end="3:42"><expr pos:start="3:9" pos:end="3:41"><call pos:start="3:9" pos:end="3:41"><name pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:14">System</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:18">out</name><operator pos:start="3:19" pos:end="3:19">.</operator><name pos:start="3:20" pos:end="3:26">println</name></name><argument_list pos:start="3:27" pos:end="3:41">( <argument pos:start="3:29" pos:end="3:39"><expr pos:start="3:29" pos:end="3:39"><literal type="string" pos:start="3:29" pos:end="3:39">"getEvtIDs"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="4:9" pos:end="4:51"><decl pos:start="4:9" pos:end="4:50"><type pos:start="4:9" pos:end="4:20"><name pos:start="4:9" pos:end="4:20">Email_DBImpl</name></type> <name pos:start="4:22" pos:end="4:29">instance</name> <init pos:start="4:31" pos:end="4:50">= <expr pos:start="4:33" pos:end="4:50"><operator pos:start="4:33" pos:end="4:35">new</operator> <call pos:start="4:37" pos:end="4:50"><name pos:start="4:37" pos:end="4:48">Email_DBImpl</name><argument_list pos:start="4:49" pos:end="4:50">()</argument_list></call></expr></init></decl>;</decl_stmt>     
        <decl_stmt pos:start="5:9" pos:end="5:34"><decl pos:start="5:9" pos:end="5:33"><type pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:14">String</name><index pos:start="5:15" pos:end="5:16">[]</index></name></type> <name pos:start="5:18" pos:end="5:26">expResult</name> <init pos:start="5:28" pos:end="5:33">= <expr pos:start="5:30" pos:end="5:33"><literal type="null" pos:start="5:30" pos:end="5:33">null</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="6:9" pos:end="6:47"><decl pos:start="6:9" pos:end="6:46"><type pos:start="6:9" pos:end="6:16"><name pos:start="6:9" pos:end="6:16"><name pos:start="6:9" pos:end="6:14">String</name><index pos:start="6:15" pos:end="6:16">[]</index></name></type> <name pos:start="6:18" pos:end="6:23">result</name> <init pos:start="6:25" pos:end="6:46">= <expr pos:start="6:27" pos:end="6:46"><call pos:start="6:27" pos:end="6:46"><name pos:start="6:27" pos:end="6:44"><name pos:start="6:27" pos:end="6:34">instance</name><operator pos:start="6:35" pos:end="6:35">.</operator><name pos:start="6:36" pos:end="6:44">getEvtIDs</name></name><argument_list pos:start="6:45" pos:end="6:46">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:42"><expr pos:start="7:9" pos:end="7:41"><call pos:start="7:9" pos:end="7:41"><name pos:start="7:9" pos:end="7:20">assertEquals</name><argument_list pos:start="7:21" pos:end="7:41">( <argument pos:start="7:23" pos:end="7:31"><expr pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:31">expResult</name></expr></argument>, <argument pos:start="7:34" pos:end="7:39"><expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">result</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            
        <comment type="line" pos:start="9:9" pos:end="9:83">// TODO review the generated test code and remove the default call to fail.</comment>
        <expr_stmt pos:start="10:9" pos:end="10:48"><expr pos:start="10:9" pos:end="10:47"><call pos:start="10:9" pos:end="10:47"><name pos:start="10:9" pos:end="10:12">fail</name><argument_list pos:start="10:13" pos:end="10:47">( <argument pos:start="10:15" pos:end="10:45"><expr pos:start="10:15" pos:end="10:45"><literal type="string" pos:start="10:15" pos:end="10:45">"The test case is a prototype."</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
