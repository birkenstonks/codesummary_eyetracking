<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/load_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="18:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:29">LockedFileLoader</name> <block pos:start="1:31" pos:end="18:1">{
    
    <function pos:start="3:5" pos:end="16:5"><type pos:start="3:5" pos:end="3:16"><specifier pos:start="3:5" pos:end="3:11">private</specifier> <name pos:start="3:13" pos:end="3:16">void</name></type> <name pos:start="3:18" pos:end="3:21">load</name><parameter_list pos:start="3:22" pos:end="3:40">( <parameter pos:start="3:24" pos:end="3:38"><decl pos:start="3:24" pos:end="3:38"><type pos:start="3:24" pos:end="3:33"><name pos:start="3:24" pos:end="3:33">LockedFile</name></type> <name pos:start="3:35" pos:end="3:38">file</name></decl></parameter> )</parameter_list> <throws pos:start="3:42" pos:end="3:62">throws <argument pos:start="3:49" pos:end="3:62"><expr pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:62">SQLIOException</name></expr></argument></throws> <block pos:start="3:64" pos:end="16:5">{<block_content pos:start="4:9" pos:end="15:35">
        <expr_stmt pos:start="4:9" pos:end="4:39"><expr pos:start="4:9" pos:end="4:38"><call pos:start="4:9" pos:end="4:38"><name pos:start="4:9" pos:end="4:24"><name pos:start="4:9" pos:end="4:12">file</name><operator pos:start="4:13" pos:end="4:13">.</operator><name pos:start="4:14" pos:end="4:24">setPosition</name></name><argument_list pos:start="4:25" pos:end="4:38">( <argument pos:start="4:27" pos:end="4:36"><expr pos:start="4:27" pos:end="4:36"><name pos:start="4:27" pos:end="4:36">POS_HEADER</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    
        <decl_stmt pos:start="6:9" pos:end="6:53"><decl pos:start="6:9" pos:end="6:52"><type pos:start="6:9" pos:end="6:14"><name pos:start="6:9" pos:end="6:14"><name pos:start="6:9" pos:end="6:12">byte</name><index pos:start="6:13" pos:end="6:14">[]</index></name></type> <name pos:start="6:16" pos:end="6:21">buffer</name> <init pos:start="6:23" pos:end="6:52">= <expr pos:start="6:25" pos:end="6:52"><operator pos:start="6:25" pos:end="6:27">new</operator> <name pos:start="6:29" pos:end="6:52"><name pos:start="6:29" pos:end="6:32">byte</name><index pos:start="6:33" pos:end="6:52">[ <expr pos:start="6:35" pos:end="6:50"><name pos:start="6:35" pos:end="6:50">BASE_HEADER_SIZE</name></expr> ]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:49"><expr pos:start="7:9" pos:end="7:48"><call pos:start="7:9" pos:end="7:48"><name pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:12">file</name><operator pos:start="7:13" pos:end="7:13">.</operator><name pos:start="7:14" pos:end="7:17">read</name></name><argument_list pos:start="7:18" pos:end="7:48">( <argument pos:start="7:20" pos:end="7:25"><expr pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:25">buffer</name></expr></argument>, <argument pos:start="7:28" pos:end="7:28"><expr pos:start="7:28" pos:end="7:28"><literal type="number" pos:start="7:28" pos:end="7:28">0</literal></expr></argument>, <argument pos:start="7:31" pos:end="7:46"><expr pos:start="7:31" pos:end="7:46"><name pos:start="7:31" pos:end="7:46">BASE_HEADER_SIZE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    
        <expr_stmt pos:start="9:9" pos:end="9:34"><expr pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:12">type</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <name pos:start="9:16" pos:end="9:33"><name pos:start="9:16" pos:end="9:21">buffer</name><index pos:start="9:22" pos:end="9:33">[ <expr pos:start="9:24" pos:end="9:31"><name pos:start="9:24" pos:end="9:31">POS_TYPE</name></expr> ]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:60"><expr pos:start="10:9" pos:end="10:59"><name pos:start="10:9" pos:end="10:18">lastUpdate</name> <operator pos:start="10:20" pos:end="10:20">=</operator> <call pos:start="10:22" pos:end="10:59"><name pos:start="10:22" pos:end="10:32">decode3Date</name><argument_list pos:start="10:33" pos:end="10:59">( <argument pos:start="10:35" pos:end="10:40"><expr pos:start="10:35" pos:end="10:40"><name pos:start="10:35" pos:end="10:40">buffer</name></expr></argument>, <argument pos:start="10:43" pos:end="10:57"><expr pos:start="10:43" pos:end="10:57"><name pos:start="10:43" pos:end="10:57">POS_LAST_UDPATE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:76"><expr pos:start="11:9" pos:end="11:75"><name pos:start="11:9" pos:end="11:18">recordsNum</name> <operator pos:start="11:20" pos:end="11:20">=</operator> <call pos:start="11:22" pos:end="11:75"><name pos:start="11:22" pos:end="11:48"><name pos:start="11:22" pos:end="11:29">DbfUtils</name><operator pos:start="11:30" pos:end="11:30">.</operator><name pos:start="11:31" pos:end="11:48">decodeLittleUint16</name></name><argument_list pos:start="11:49" pos:end="11:75">( <argument pos:start="11:51" pos:end="11:56"><expr pos:start="11:51" pos:end="11:56"><name pos:start="11:51" pos:end="11:56">buffer</name></expr></argument>, <argument pos:start="11:59" pos:end="11:73"><expr pos:start="11:59" pos:end="11:73"><name pos:start="11:59" pos:end="11:73">POS_RECORDS_NUM</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:76"><expr pos:start="12:9" pos:end="12:75"><name pos:start="12:9" pos:end="12:18">recordSize</name> <operator pos:start="12:20" pos:end="12:20">=</operator> <call pos:start="12:22" pos:end="12:75"><name pos:start="12:22" pos:end="12:48"><name pos:start="12:22" pos:end="12:29">DbfUtils</name><operator pos:start="12:30" pos:end="12:30">.</operator><name pos:start="12:31" pos:end="12:48">decodeLittleUint16</name></name><argument_list pos:start="12:49" pos:end="12:75">( <argument pos:start="12:51" pos:end="12:56"><expr pos:start="12:51" pos:end="12:56"><name pos:start="12:51" pos:end="12:56">buffer</name></expr></argument>, <argument pos:start="12:59" pos:end="12:73"><expr pos:start="12:59" pos:end="12:73"><name pos:start="12:59" pos:end="12:73">POS_RECORD_SIZE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:76"><expr pos:start="13:9" pos:end="13:75"><name pos:start="13:9" pos:end="13:18">headerSize</name> <operator pos:start="13:20" pos:end="13:20">=</operator> <call pos:start="13:22" pos:end="13:75"><name pos:start="13:22" pos:end="13:48"><name pos:start="13:22" pos:end="13:29">DbfUtils</name><operator pos:start="13:30" pos:end="13:30">.</operator><name pos:start="13:31" pos:end="13:48">decodeLittleUint16</name></name><argument_list pos:start="13:49" pos:end="13:75">( <argument pos:start="13:51" pos:end="13:56"><expr pos:start="13:51" pos:end="13:56"><name pos:start="13:51" pos:end="13:56">buffer</name></expr></argument>, <argument pos:start="13:59" pos:end="13:73"><expr pos:start="13:59" pos:end="13:73"><name pos:start="13:59" pos:end="13:73">POS_HEADER_SIZE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    
        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:26">verifyAndFixHeader</name><argument_list pos:start="15:27" pos:end="15:34">( <argument pos:start="15:29" pos:end="15:32"><expr pos:start="15:29" pos:end="15:32"><name pos:start="15:29" pos:end="15:32">file</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function> 

}</block></class></unit>
