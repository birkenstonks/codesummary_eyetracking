<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/saveCRCReply_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="17:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:25">SaveCRCReply</name> <block pos:start="1:27" pos:end="17:1">{
    <function pos:start="2:5" pos:end="16:5"><type pos:start="2:5" pos:end="2:16"><specifier pos:start="2:5" pos:end="2:11">private</specifier> <name pos:start="2:13" pos:end="2:16">void</name></type> <name pos:start="2:18" pos:end="2:29">saveCRCReply</name><parameter_list pos:start="2:30" pos:end="2:66">(<parameter pos:start="2:31" pos:end="2:65"><decl pos:start="2:31" pos:end="2:65"><type pos:start="2:31" pos:end="2:56"><name pos:start="2:31" pos:end="2:56">ClientRemoteContainerReply</name></type> <name pos:start="2:58" pos:end="2:65">crcReply</name></decl></parameter>)</parameter_list> <block pos:start="2:68" pos:end="16:5">{<block_content pos:start="3:9" pos:end="15:49">	
        <expr_stmt pos:start="3:9" pos:end="3:48"><expr pos:start="3:9" pos:end="3:47"><name pos:start="3:9" pos:end="3:40"><name pos:start="3:9" pos:end="3:19">LoadService</name><operator pos:start="3:20" pos:end="3:20">.</operator><name pos:start="3:21" pos:end="3:40">currentlyWritingFile</name></name> <operator pos:start="3:42" pos:end="3:42">=</operator> <literal type="boolean" pos:start="3:44" pos:end="3:47">true</literal></expr>;</expr_stmt>
        <decl_stmt pos:start="4:9" pos:end="4:72"><decl pos:start="4:9" pos:end="4:71"><type pos:start="4:9" pos:end="4:14"><name pos:start="4:9" pos:end="4:14">String</name></type> <name pos:start="4:16" pos:end="4:27">mySavingPath</name> <init pos:start="4:29" pos:end="4:71">= <expr pos:start="4:31" pos:end="4:71"><name pos:start="4:31" pos:end="4:71"><name pos:start="4:31" pos:end="4:41">LoadService</name><operator pos:start="4:42" pos:end="4:42">.</operator><name pos:start="4:43" pos:end="4:71">SERVICE_NODE_DESCRIPTION_FILE</name></name></expr></init></decl>;</decl_stmt>
        <try pos:start="5:9" pos:end="14:9">try <block pos:start="5:13" pos:end="10:9">{<block_content pos:start="6:13" pos:end="9:24">
            <decl_stmt pos:start="6:13" pos:end="6:96"><decl pos:start="6:13" pos:end="6:95"><type pos:start="6:13" pos:end="6:30"><name pos:start="6:13" pos:end="6:30">ObjectOutputStream</name></type> <name pos:start="6:32" pos:end="6:34">out</name> <init pos:start="6:36" pos:end="6:95">= <expr pos:start="6:38" pos:end="6:95"><operator pos:start="6:38" pos:end="6:40">new</operator> <call pos:start="6:42" pos:end="6:95"><name pos:start="6:42" pos:end="6:59">ObjectOutputStream</name><argument_list pos:start="6:60" pos:end="6:95">(<argument pos:start="6:61" pos:end="6:94"><expr pos:start="6:61" pos:end="6:94"><operator pos:start="6:61" pos:end="6:63">new</operator> <call pos:start="6:65" pos:end="6:94"><name pos:start="6:65" pos:end="6:80">FileOutputStream</name><argument_list pos:start="6:81" pos:end="6:94">(<argument pos:start="6:82" pos:end="6:93"><expr pos:start="6:82" pos:end="6:93"><name pos:start="6:82" pos:end="6:93">mySavingPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="7:13" pos:end="7:38"><expr pos:start="7:13" pos:end="7:37"><call pos:start="7:13" pos:end="7:37"><name pos:start="7:13" pos:end="7:27"><name pos:start="7:13" pos:end="7:15">out</name><operator pos:start="7:16" pos:end="7:16">.</operator><name pos:start="7:17" pos:end="7:27">writeObject</name></name><argument_list pos:start="7:28" pos:end="7:37">(<argument pos:start="7:29" pos:end="7:36"><expr pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:36">crcReply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="8:13" pos:end="8:24"><expr pos:start="8:13" pos:end="8:23"><call pos:start="8:13" pos:end="8:23"><name pos:start="8:13" pos:end="8:21"><name pos:start="8:13" pos:end="8:15">out</name><operator pos:start="8:16" pos:end="8:16">.</operator><name pos:start="8:17" pos:end="8:21">flush</name></name><argument_list pos:start="8:22" pos:end="8:23">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="9:13" pos:end="9:24"><expr pos:start="9:13" pos:end="9:23"><call pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:15">out</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:21">close</name></name><argument_list pos:start="9:22" pos:end="9:23">()</argument_list></call></expr>;</expr_stmt>	
        </block_content>}</block> <catch pos:start="10:11" pos:end="12:9">catch <parameter_list pos:start="10:17" pos:end="10:42">(<parameter pos:start="10:18" pos:end="10:41"><decl pos:start="10:18" pos:end="10:41"><type pos:start="10:18" pos:end="10:41"><name pos:start="10:18" pos:end="10:38">FileNotFoundException</name></type> <name pos:start="10:40" pos:end="10:41">e1</name></decl></parameter>)</parameter_list> <block pos:start="10:44" pos:end="12:9">{<block_content pos:start="11:13" pos:end="11:33">
            <expr_stmt pos:start="11:13" pos:end="11:33"><expr pos:start="11:13" pos:end="11:32"><call pos:start="11:13" pos:end="11:32"><name pos:start="11:13" pos:end="11:30"><name pos:start="11:13" pos:end="11:14">e1</name><operator pos:start="11:15" pos:end="11:15">.</operator><name pos:start="11:16" pos:end="11:30">printStackTrace</name></name><argument_list pos:start="11:31" pos:end="11:32">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch> <catch pos:start="12:11" pos:end="14:9">catch <parameter_list pos:start="12:17" pos:end="12:32">(<parameter pos:start="12:18" pos:end="12:31"><decl pos:start="12:18" pos:end="12:31"><type pos:start="12:18" pos:end="12:31"><name pos:start="12:18" pos:end="12:28">IOException</name></type> <name pos:start="12:30" pos:end="12:31">e1</name></decl></parameter>)</parameter_list> <block pos:start="12:34" pos:end="14:9">{<block_content pos:start="13:13" pos:end="13:33">
            <expr_stmt pos:start="13:13" pos:end="13:33"><expr pos:start="13:13" pos:end="13:32"><call pos:start="13:13" pos:end="13:32"><name pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:14">e1</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:30">printStackTrace</name></name><argument_list pos:start="13:31" pos:end="13:32">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <expr_stmt pos:start="15:9" pos:end="15:49"><expr pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:19">LoadService</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:40">currentlyWritingFile</name></name> <operator pos:start="15:42" pos:end="15:42">=</operator> <literal type="boolean" pos:start="15:44" pos:end="15:48">false</literal></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
