<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/store_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="9:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:27">ZipFileHandler</name> <block pos:start="1:29" pos:end="9:1">{
    <function pos:start="2:5" pos:end="8:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:21">store</name><parameter_list pos:start="2:22" pos:end="2:54">(<parameter pos:start="2:23" pos:end="2:33"><decl pos:start="2:23" pos:end="2:33"><type pos:start="2:23" pos:end="2:33"><name pos:start="2:23" pos:end="2:28">String</name></type> <name pos:start="2:30" pos:end="2:33">path</name></decl></parameter>, <parameter pos:start="2:36" pos:end="2:53"><decl pos:start="2:36" pos:end="2:53"><type pos:start="2:36" pos:end="2:53"><name pos:start="2:36" pos:end="2:46">InputStream</name></type> <name pos:start="2:48" pos:end="2:53">stream</name></decl></parameter>)</parameter_list> <throws pos:start="2:56" pos:end="2:73">throws <argument pos:start="2:63" pos:end="2:73"><expr pos:start="2:63" pos:end="2:73"><name pos:start="2:63" pos:end="2:73">IOException</name></expr></argument></throws> <block pos:start="2:75" pos:end="8:5">{<block_content pos:start="3:9" pos:end="7:31">
        <expr_stmt pos:start="3:9" pos:end="3:42"><expr pos:start="3:9" pos:end="3:41"><call pos:start="3:9" pos:end="3:41"><name pos:start="3:9" pos:end="3:20"><name pos:start="3:9" pos:end="3:16">toIgnore</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:20">add</name></name><argument_list pos:start="3:21" pos:end="3:41">(<argument pos:start="3:22" pos:end="3:40"><expr pos:start="3:22" pos:end="3:40"><call pos:start="3:22" pos:end="3:40"><name pos:start="3:22" pos:end="3:34">normalizePath</name><argument_list pos:start="3:35" pos:end="3:40">(<argument pos:start="3:36" pos:end="3:39"><expr pos:start="3:36" pos:end="3:39"><name pos:start="3:36" pos:end="3:39">path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="4:9" pos:end="4:44"><decl pos:start="4:9" pos:end="4:43"><type pos:start="4:9" pos:end="4:16"><name pos:start="4:9" pos:end="4:16">ZipEntry</name></type> <name pos:start="4:18" pos:end="4:22">entry</name> <init pos:start="4:24" pos:end="4:43">= <expr pos:start="4:26" pos:end="4:43"><operator pos:start="4:26" pos:end="4:28">new</operator> <call pos:start="4:30" pos:end="4:43"><name pos:start="4:30" pos:end="4:37">ZipEntry</name><argument_list pos:start="4:38" pos:end="4:43">(<argument pos:start="4:39" pos:end="4:42"><expr pos:start="4:39" pos:end="4:42"><name pos:start="4:39" pos:end="4:42">path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="5:9" pos:end="5:38"><expr pos:start="5:9" pos:end="5:37"><call pos:start="5:9" pos:end="5:37"><name pos:start="5:9" pos:end="5:30"><name pos:start="5:9" pos:end="5:17">zipOutput</name><operator pos:start="5:18" pos:end="5:18">.</operator><name pos:start="5:19" pos:end="5:30">putNextEntry</name></name><argument_list pos:start="5:31" pos:end="5:37">(<argument pos:start="5:32" pos:end="5:36"><expr pos:start="5:32" pos:end="5:36"><name pos:start="5:32" pos:end="5:36">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="6:9" pos:end="6:40"><expr pos:start="6:9" pos:end="6:39"><call pos:start="6:9" pos:end="6:39"><name pos:start="6:9" pos:end="6:20"><name pos:start="6:9" pos:end="6:15">IOUtils</name><operator pos:start="6:16" pos:end="6:16">.</operator><name pos:start="6:17" pos:end="6:20">copy</name></name><argument_list pos:start="6:21" pos:end="6:39">(<argument pos:start="6:22" pos:end="6:27"><expr pos:start="6:22" pos:end="6:27"><name pos:start="6:22" pos:end="6:27">stream</name></expr></argument>, <argument pos:start="6:30" pos:end="6:38"><expr pos:start="6:30" pos:end="6:38"><name pos:start="6:30" pos:end="6:38">zipOutput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:31"><expr pos:start="7:9" pos:end="7:30"><call pos:start="7:9" pos:end="7:30"><name pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:17">zipOutput</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:28">closeEntry</name></name><argument_list pos:start="7:29" pos:end="7:30">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
