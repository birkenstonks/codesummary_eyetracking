<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/joinTableRender_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="19:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:28">JoinTableRender</name> <block pos:start="1:30" pos:end="19:1">{

  <decl_stmt pos:start="3:3" pos:end="3:30"><decl pos:start="3:3" pos:end="3:29"><type pos:start="3:3" pos:end="3:19"><specifier pos:start="3:3" pos:end="3:9">private</specifier> <name pos:start="3:11" pos:end="3:19">Datamodel</name></type> <name pos:start="3:21" pos:end="3:29">datamodel</name></decl>;</decl_stmt>

  <constructor pos:start="5:3" pos:end="7:3"><specifier pos:start="5:3" pos:end="5:8">public</specifier> <name pos:start="5:10" pos:end="5:24">JoinTableRender</name><parameter_list pos:start="5:25" pos:end="5:45">(<parameter pos:start="5:26" pos:end="5:44"><decl pos:start="5:26" pos:end="5:44"><type pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:34">Datamodel</name></type> <name pos:start="5:36" pos:end="5:44">datamodel</name></decl></parameter>)</parameter_list> <block pos:start="5:47" pos:end="7:3">{<block_content pos:start="6:5" pos:end="6:31">
    <expr_stmt pos:start="6:5" pos:end="6:31"><expr pos:start="6:5" pos:end="6:30"><name pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:8">this</name><operator pos:start="6:9" pos:end="6:9">.</operator><name pos:start="6:10" pos:end="6:18">datamodel</name></name> <operator pos:start="6:20" pos:end="6:20">=</operator> <name pos:start="6:22" pos:end="6:30">datamodel</name></expr>;</expr_stmt>
  </block_content>}</block></constructor>

  <function pos:start="9:3" pos:end="18:3"><type pos:start="9:3" pos:end="9:15"><specifier pos:start="9:3" pos:end="9:8">public</specifier> <name pos:start="9:10" pos:end="9:15">String</name></type> <name pos:start="9:17" pos:end="9:31">joinTableRender</name><parameter_list pos:start="9:32" pos:end="9:68">(<parameter pos:start="9:33" pos:end="9:42"><decl pos:start="9:33" pos:end="9:42"><type pos:start="9:33" pos:end="9:42"><name pos:start="9:33" pos:end="9:37">Table</name></type> <name pos:start="9:39" pos:end="9:42">from</name></decl></parameter>, <parameter pos:start="9:45" pos:end="9:67"><decl pos:start="9:45" pos:end="9:67"><type pos:start="9:45" pos:end="9:67"><name pos:start="9:45" pos:end="9:55">Association</name></type> <name pos:start="9:57" pos:end="9:67">association</name></decl></parameter>)</parameter_list> <block pos:start="9:70" pos:end="18:3">{<block_content pos:start="10:5" pos:end="17:109">
    <decl_stmt pos:start="10:5" pos:end="10:14"><decl pos:start="10:5" pos:end="10:13"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:9">n</name> <init pos:start="10:11" pos:end="10:13">= <expr pos:start="10:13" pos:end="10:13"><literal type="number" pos:start="10:13" pos:end="10:13">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="12:5" pos:end="16:5">for <control pos:start="12:9" pos:end="12:43">(<init pos:start="12:10" pos:end="12:42"><decl pos:start="12:10" pos:end="12:42"><type pos:start="12:10" pos:end="12:20"><name pos:start="12:10" pos:end="12:20">Association</name></type> <name pos:start="12:22" pos:end="12:22">a</name> <range pos:start="12:24" pos:end="12:42">: <expr pos:start="12:26" pos:end="12:42"><name pos:start="12:26" pos:end="12:42"><name pos:start="12:26" pos:end="12:29">from</name><operator pos:start="12:30" pos:end="12:30">.</operator><name pos:start="12:31" pos:end="12:42">associations</name></name></expr></range></decl></init>)</control> <block pos:start="12:45" pos:end="16:5">{<block_content pos:start="13:7" pos:end="15:7">
      <if_stmt pos:start="13:7" pos:end="15:7"><if pos:start="13:7" pos:end="15:7">if <condition pos:start="13:10" pos:end="13:51">(<expr pos:start="13:11" pos:end="13:50"><name pos:start="13:11" pos:end="13:23"><name pos:start="13:11" pos:end="13:11">a</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:23">destination</name></name> <operator pos:start="13:25" pos:end="13:26">==</operator> <name pos:start="13:28" pos:end="13:50"><name pos:start="13:28" pos:end="13:38">association</name><operator pos:start="13:39" pos:end="13:39">.</operator><name pos:start="13:40" pos:end="13:50">destination</name></name></expr>)</condition> <block pos:start="13:53" pos:end="15:7">{<block_content pos:start="14:9" pos:end="14:12">
        <expr_stmt pos:start="14:9" pos:end="14:12"><expr pos:start="14:9" pos:end="14:11"><operator pos:start="14:9" pos:end="14:10">++</operator><name pos:start="14:11" pos:end="14:11">n</name></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return pos:start="17:5" pos:end="17:109">return <expr pos:start="17:12" pos:end="17:108"><call pos:start="17:12" pos:end="17:60"><name pos:start="17:12" pos:end="17:35"><name pos:start="17:12" pos:end="17:20">datamodel</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:35">getDisplayName</name></name><argument_list pos:start="17:36" pos:end="17:60">(<argument pos:start="17:37" pos:end="17:59"><expr pos:start="17:37" pos:end="17:59"><name pos:start="17:37" pos:end="17:59"><name pos:start="17:37" pos:end="17:47">association</name><operator pos:start="17:48" pos:end="17:48">.</operator><name pos:start="17:49" pos:end="17:59">destination</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:62" pos:end="17:62">+</operator> <operator pos:start="17:64" pos:end="17:64">(</operator><ternary pos:start="17:65" pos:end="17:107"><condition pos:start="17:65" pos:end="17:71"><expr pos:start="17:65" pos:end="17:69"><name pos:start="17:65" pos:end="17:65">n</name> <operator pos:start="17:67" pos:end="17:67">&gt;</operator> <literal type="number" pos:start="17:69" pos:end="17:69">1</literal></expr> ?</condition><then pos:start="17:73" pos:end="17:102"> <expr pos:start="17:73" pos:end="17:102"><literal type="string" pos:start="17:73" pos:end="17:78">" on "</literal> <operator pos:start="17:80" pos:end="17:80">+</operator> <call pos:start="17:82" pos:end="17:102"><name pos:start="17:82" pos:end="17:100"><name pos:start="17:82" pos:end="17:92">association</name><operator pos:start="17:93" pos:end="17:93">.</operator><name pos:start="17:94" pos:end="17:100">getName</name></name><argument_list pos:start="17:101" pos:end="17:102">()</argument_list></call></expr> </then><else pos:start="17:104" pos:end="17:107">: <expr pos:start="17:106" pos:end="17:107"><literal type="string" pos:start="17:106" pos:end="17:107">""</literal></expr></else></ternary><operator pos:start="17:108" pos:end="17:108">)</operator></expr>;</return>
  </block_content>}</block></function>
}</block></class></unit>
