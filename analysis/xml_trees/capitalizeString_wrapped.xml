<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/capitalizeString_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="12:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:31">StringManipulation</name> <block pos:start="1:33" pos:end="12:1">{
    <function pos:start="2:5" pos:end="11:5"><type pos:start="2:5" pos:end="2:17"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:17">String</name></type> <name pos:start="2:19" pos:end="2:34">capitalizeString</name><parameter_list pos:start="2:35" pos:end="2:46">( <parameter pos:start="2:37" pos:end="2:44"><decl pos:start="2:37" pos:end="2:44"><type pos:start="2:37" pos:end="2:42"><name pos:start="2:37" pos:end="2:42">String</name></type> <name pos:start="2:44" pos:end="2:44">s</name></decl></parameter> )</parameter_list> <block pos:start="2:48" pos:end="11:5">{<block_content pos:start="3:9" pos:end="10:22">
        <decl_stmt pos:start="3:9" pos:end="3:27"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:14"><name pos:start="3:9" pos:end="3:14">String</name></type> <name pos:start="3:16" pos:end="3:21">result</name> <init pos:start="3:23" pos:end="3:26">= <expr pos:start="3:25" pos:end="3:26"><literal type="string" pos:start="3:25" pos:end="3:26">""</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="4:9" pos:end="9:9">for<control pos:start="4:12" pos:end="4:45">( <init pos:start="4:14" pos:end="4:23"><decl pos:start="4:14" pos:end="4:22"><type pos:start="4:14" pos:end="4:16"><name pos:start="4:14" pos:end="4:16">int</name></type> <name pos:start="4:18" pos:end="4:18">i</name> <init pos:start="4:20" pos:end="4:22">= <expr pos:start="4:22" pos:end="4:22"><literal type="number" pos:start="4:22" pos:end="4:22">0</literal></expr></init></decl>;</init> <condition pos:start="4:25" pos:end="4:39"><expr pos:start="4:25" pos:end="4:38"><name pos:start="4:25" pos:end="4:25">i</name> <operator pos:start="4:27" pos:end="4:27">&lt;</operator> <call pos:start="4:29" pos:end="4:38"><name pos:start="4:29" pos:end="4:36"><name pos:start="4:29" pos:end="4:29">s</name><operator pos:start="4:30" pos:end="4:30">.</operator><name pos:start="4:31" pos:end="4:36">length</name></name><argument_list pos:start="4:37" pos:end="4:38">()</argument_list></call></expr>;</condition> <incr pos:start="4:41" pos:end="4:43"><expr pos:start="4:41" pos:end="4:43"><name pos:start="4:41" pos:end="4:41">i</name><operator pos:start="4:42" pos:end="4:43">++</operator></expr></incr> )</control> <block pos:start="4:47" pos:end="9:9">{<block_content pos:start="5:13" pos:end="8:50">
            <if_stmt pos:start="5:13" pos:end="8:50"><if pos:start="5:13" pos:end="6:64">if <condition pos:start="5:16" pos:end="5:65">( <expr pos:start="5:18" pos:end="5:64"><name pos:start="5:18" pos:end="5:18">i</name> <operator pos:start="5:20" pos:end="5:21">==</operator> <literal type="number" pos:start="5:23" pos:end="5:23">0</literal> <operator pos:start="5:25" pos:end="5:26">||</operator> <call pos:start="5:28" pos:end="5:50"><name pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:38">substring</name></name><argument_list pos:start="5:39" pos:end="5:50">( <argument pos:start="5:41" pos:end="5:45"><expr pos:start="5:41" pos:end="5:45"><name pos:start="5:41" pos:end="5:41">i</name> <operator pos:start="5:43" pos:end="5:43">-</operator> <literal type="number" pos:start="5:45" pos:end="5:45">1</literal></expr></argument>, <argument pos:start="5:48" pos:end="5:48"><expr pos:start="5:48" pos:end="5:48"><name pos:start="5:48" pos:end="5:48">i</name></expr></argument> )</argument_list></call><operator pos:start="5:51" pos:end="5:51">.</operator><call pos:start="5:52" pos:end="5:64"><name pos:start="5:52" pos:end="5:57">equals</name><argument_list pos:start="5:58" pos:end="5:64">( <argument pos:start="5:60" pos:end="5:62"><expr pos:start="5:60" pos:end="5:62"><literal type="string" pos:start="5:60" pos:end="5:62">" "</literal></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo" pos:start="6:17" pos:end="6:64"><block_content pos:start="6:17" pos:end="6:64">
                <expr_stmt pos:start="6:17" pos:end="6:64"><expr pos:start="6:17" pos:end="6:63"><name pos:start="6:17" pos:end="6:22">result</name> <operator pos:start="6:24" pos:end="6:25">+=</operator> <call pos:start="6:27" pos:end="6:49"><name pos:start="6:27" pos:end="6:37"><name pos:start="6:27" pos:end="6:27">s</name><operator pos:start="6:28" pos:end="6:28">.</operator><name pos:start="6:29" pos:end="6:37">substring</name></name><argument_list pos:start="6:38" pos:end="6:49">( <argument pos:start="6:40" pos:end="6:40"><expr pos:start="6:40" pos:end="6:40"><name pos:start="6:40" pos:end="6:40">i</name></expr></argument>, <argument pos:start="6:43" pos:end="6:47"><expr pos:start="6:43" pos:end="6:47"><name pos:start="6:43" pos:end="6:43">i</name> <operator pos:start="6:45" pos:end="6:45">+</operator> <literal type="number" pos:start="6:47" pos:end="6:47">1</literal></expr></argument> )</argument_list></call><operator pos:start="6:50" pos:end="6:50">.</operator><call pos:start="6:51" pos:end="6:63"><name pos:start="6:51" pos:end="6:61">toUpperCase</name><argument_list pos:start="6:62" pos:end="6:63">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="7:13" pos:end="8:50">else<block type="pseudo" pos:start="8:17" pos:end="8:50"><block_content pos:start="8:17" pos:end="8:50">
                <expr_stmt pos:start="8:17" pos:end="8:50"><expr pos:start="8:17" pos:end="8:49"><name pos:start="8:17" pos:end="8:22">result</name> <operator pos:start="8:24" pos:end="8:25">+=</operator> <call pos:start="8:27" pos:end="8:49"><name pos:start="8:27" pos:end="8:37"><name pos:start="8:27" pos:end="8:27">s</name><operator pos:start="8:28" pos:end="8:28">.</operator><name pos:start="8:29" pos:end="8:37">substring</name></name><argument_list pos:start="8:38" pos:end="8:49">( <argument pos:start="8:40" pos:end="8:40"><expr pos:start="8:40" pos:end="8:40"><name pos:start="8:40" pos:end="8:40">i</name></expr></argument>, <argument pos:start="8:43" pos:end="8:47"><expr pos:start="8:43" pos:end="8:47"><name pos:start="8:43" pos:end="8:43">i</name> <operator pos:start="8:45" pos:end="8:45">+</operator> <literal type="number" pos:start="8:47" pos:end="8:47">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>          
        </block_content>}</block></for>  
        <return pos:start="10:9" pos:end="10:22">return <expr pos:start="10:16" pos:end="10:21"><name pos:start="10:16" pos:end="10:21">result</name></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
