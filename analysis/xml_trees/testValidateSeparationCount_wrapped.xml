<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/testValidateSeparationCount_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="18:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:32">LinearDimensionTest</name> <block pos:start="1:34" pos:end="18:1">{
    <function pos:start="2:5" pos:end="17:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:43">testValidateSeparationCount</name><parameter_list pos:start="2:44" pos:end="2:45">()</parameter_list> <block pos:start="2:47" pos:end="17:5">{<block_content pos:start="3:9" pos:end="16:56">
        <try pos:start="3:9" pos:end="8:9">try <block pos:start="3:13" pos:end="6:9">{<block_content pos:start="4:13" pos:end="5:19">
            <expr_stmt pos:start="4:13" pos:end="4:57"><expr pos:start="4:13" pos:end="4:56"><call pos:start="4:13" pos:end="4:56"><name pos:start="4:13" pos:end="4:51"><name pos:start="4:13" pos:end="4:27">LinearDimension</name><operator pos:start="4:28" pos:end="4:28">.</operator><name pos:start="4:29" pos:end="4:51">validateSeparationCount</name></name><argument_list pos:start="4:52" pos:end="4:56">( <argument pos:start="4:54" pos:end="4:54"><expr pos:start="4:54" pos:end="4:54"><literal type="number" pos:start="4:54" pos:end="4:54">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="5:13" pos:end="5:19"><expr pos:start="5:13" pos:end="5:18"><call pos:start="5:13" pos:end="5:18"><name pos:start="5:13" pos:end="5:16">fail</name><argument_list pos:start="5:17" pos:end="5:18">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch pos:start="6:11" pos:end="8:9">catch <parameter_list pos:start="6:17" pos:end="6:47">( <parameter pos:start="6:19" pos:end="6:45"><decl pos:start="6:19" pos:end="6:45"><type pos:start="6:19" pos:end="6:45"><name pos:start="6:19" pos:end="6:42">IllegalArgumentException</name></type> <name pos:start="6:44" pos:end="6:45">ex</name></decl></parameter> )</parameter_list> <block pos:start="6:49" pos:end="8:9">{<block_content>
            <comment type="line" pos:start="7:13" pos:end="7:17">// ok</comment>
        </block_content>}</block></catch></try>
        <try pos:start="9:9" pos:end="14:9">try <block pos:start="9:13" pos:end="12:9">{<block_content pos:start="10:13" pos:end="11:19">
            <expr_stmt pos:start="10:13" pos:end="10:58"><expr pos:start="10:13" pos:end="10:57"><call pos:start="10:13" pos:end="10:57"><name pos:start="10:13" pos:end="10:51"><name pos:start="10:13" pos:end="10:27">LinearDimension</name><operator pos:start="10:28" pos:end="10:28">.</operator><name pos:start="10:29" pos:end="10:51">validateSeparationCount</name></name><argument_list pos:start="10:52" pos:end="10:57">( <argument pos:start="10:54" pos:end="10:55"><expr pos:start="10:54" pos:end="10:55"><operator pos:start="10:54" pos:end="10:54">-</operator><literal type="number" pos:start="10:55" pos:end="10:55">2</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="11:13" pos:end="11:19"><expr pos:start="11:13" pos:end="11:18"><call pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:16">fail</name><argument_list pos:start="11:17" pos:end="11:18">()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch pos:start="12:11" pos:end="14:9">catch <parameter_list pos:start="12:17" pos:end="12:47">( <parameter pos:start="12:19" pos:end="12:45"><decl pos:start="12:19" pos:end="12:45"><type pos:start="12:19" pos:end="12:45"><name pos:start="12:19" pos:end="12:42">IllegalArgumentException</name></type> <name pos:start="12:44" pos:end="12:45">ex</name></decl></parameter> )</parameter_list> <block pos:start="12:49" pos:end="14:9">{<block_content>
            <comment type="line" pos:start="13:13" pos:end="13:17">// ok</comment>
        </block_content>}</block></catch></try>
        <expr_stmt pos:start="15:9" pos:end="15:53"><expr pos:start="15:9" pos:end="15:52"><call pos:start="15:9" pos:end="15:52"><name pos:start="15:9" pos:end="15:47"><name pos:start="15:9" pos:end="15:23">LinearDimension</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:47">validateSeparationCount</name></name><argument_list pos:start="15:48" pos:end="15:52">( <argument pos:start="15:50" pos:end="15:50"><expr pos:start="15:50" pos:end="15:50"><literal type="number" pos:start="15:50" pos:end="15:50">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:56"><expr pos:start="16:9" pos:end="16:55"><call pos:start="16:9" pos:end="16:55"><name pos:start="16:9" pos:end="16:47"><name pos:start="16:9" pos:end="16:23">LinearDimension</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:47">validateSeparationCount</name></name><argument_list pos:start="16:48" pos:end="16:55">( <argument pos:start="16:50" pos:end="16:53"><expr pos:start="16:50" pos:end="16:53"><literal type="number" pos:start="16:50" pos:end="16:53">2988</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function> 
}</block></class></unit>
