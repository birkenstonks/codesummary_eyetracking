<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/go_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="22:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:23">ChatClient</name> <block pos:start="1:25" pos:end="22:1">{
    <function pos:start="2:5" pos:end="21:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:18">go</name><parameter_list pos:start="2:19" pos:end="2:40">( <parameter pos:start="2:21" pos:end="2:38"><decl pos:start="2:21" pos:end="2:38"><type pos:start="2:21" pos:end="2:26"><name pos:start="2:21" pos:end="2:26">String</name></type> <name pos:start="2:28" pos:end="2:38">theUserName</name></decl></parameter> )</parameter_list> <block pos:start="2:42" pos:end="21:5">{<block_content pos:start="3:9" pos:end="20:9">
        <try pos:start="3:9" pos:end="20:9">try <block pos:start="3:13" pos:end="16:9">{<block_content pos:start="4:13" pos:end="15:13">
            <expr_stmt pos:start="4:13" pos:end="4:68"><expr pos:start="4:13" pos:end="4:67"><operator pos:start="4:13" pos:end="4:15">new</operator> <call pos:start="4:17" pos:end="4:67"><name pos:start="4:17" pos:end="4:22">ChatUI</name><argument_list pos:start="4:23" pos:end="4:67">(<argument pos:start="4:24" pos:end="4:52"><expr pos:start="4:24" pos:end="4:52"><operator pos:start="4:24" pos:end="4:24">(</operator> <name pos:start="4:26" pos:end="4:45">MessageInputReceiver</name> <operator pos:start="4:47" pos:end="4:47">)</operator> <name pos:start="4:49" pos:end="4:52">this</name></expr></argument>, <argument pos:start="4:55" pos:end="4:65"><expr pos:start="4:55" pos:end="4:65"><name pos:start="4:55" pos:end="4:65">theUserName</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:start="5:13" pos:end="5:26">// shake hands</comment>
            <expr_stmt pos:start="6:13" pos:end="6:42"><expr pos:start="6:13" pos:end="6:41"><call pos:start="6:13" pos:end="6:41"><name pos:start="6:13" pos:end="6:26"><name pos:start="6:13" pos:end="6:18">writer</name><operator pos:start="6:19" pos:end="6:19">.</operator><name pos:start="6:20" pos:end="6:26">println</name></name><argument_list pos:start="6:27" pos:end="6:41">( <argument pos:start="6:29" pos:end="6:39"><expr pos:start="6:29" pos:end="6:39"><name pos:start="6:29" pos:end="6:39">theUserName</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="7:13" pos:end="7:27"><expr pos:start="7:13" pos:end="7:26"><call pos:start="7:13" pos:end="7:26"><name pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:18">writer</name><operator pos:start="7:19" pos:end="7:19">.</operator><name pos:start="7:20" pos:end="7:24">flush</name></name><argument_list pos:start="7:25" pos:end="7:26">()</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:start="8:13" pos:end="8:50">// OK means init with server went well</comment>

            <if_stmt pos:start="10:13" pos:end="15:13"><if pos:start="10:13" pos:end="13:13">if <condition pos:start="10:16" pos:end="10:50">( <expr pos:start="10:18" pos:end="10:49"><call pos:start="10:18" pos:end="10:34"><name pos:start="10:18" pos:end="10:32"><name pos:start="10:18" pos:end="10:23">reader</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:32">readLine</name></name><argument_list pos:start="10:33" pos:end="10:34">()</argument_list></call><operator pos:start="10:35" pos:end="10:35">.</operator><call pos:start="10:36" pos:end="10:49"><name pos:start="10:36" pos:end="10:41">equals</name><argument_list pos:start="10:42" pos:end="10:49">( <argument pos:start="10:44" pos:end="10:47"><expr pos:start="10:44" pos:end="10:47"><literal type="string" pos:start="10:44" pos:end="10:47">"OK"</literal></expr></argument> )</argument_list></call></expr>)</condition> <block pos:start="10:52" pos:end="13:13">{<block_content pos:start="11:17" pos:end="12:27">
                <expr_stmt pos:start="11:17" pos:end="11:35"><expr pos:start="11:17" pos:end="11:34"><name pos:start="11:17" pos:end="11:27">initialized</name> <operator pos:start="11:29" pos:end="11:29">=</operator> <literal type="boolean" pos:start="11:31" pos:end="11:34">true</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="12:17" pos:end="12:27"><expr pos:start="12:17" pos:end="12:26"><call pos:start="12:17" pos:end="12:26"><name pos:start="12:17" pos:end="12:24">readChat</name><argument_list pos:start="12:25" pos:end="12:26">()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="13:15" pos:end="15:13">else <block pos:start="13:20" pos:end="15:13">{<block_content pos:start="14:17" pos:end="14:64">
                <expr_stmt pos:start="14:17" pos:end="14:64"><expr pos:start="14:17" pos:end="14:63"><call pos:start="14:17" pos:end="14:63"><name pos:start="14:17" pos:end="14:23">bailOut</name><argument_list pos:start="14:24" pos:end="14:63">( <argument pos:start="14:26" pos:end="14:62"><expr pos:start="14:26" pos:end="14:62"><operator pos:start="14:26" pos:end="14:28">new</operator> <call pos:start="14:30" pos:end="14:62"><name pos:start="14:30" pos:end="14:40">IOException</name><argument_list pos:start="14:41" pos:end="14:62">( <argument pos:start="14:43" pos:end="14:60"><expr pos:start="14:43" pos:end="14:60"><literal type="string" pos:start="14:43" pos:end="14:60">"handshake failed"</literal></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
        </block_content>}</block> <catch pos:start="16:11" pos:end="18:9">catch <parameter_list pos:start="16:17" pos:end="16:35">( <parameter pos:start="16:19" pos:end="16:33"><decl pos:start="16:19" pos:end="16:33"><type pos:start="16:19" pos:end="16:33"><name pos:start="16:19" pos:end="16:29">IOException</name></type> <name pos:start="16:31" pos:end="16:33">ioe</name></decl></parameter> )</parameter_list> <block pos:start="16:37" pos:end="18:9">{<block_content pos:start="17:13" pos:end="17:27">
            <expr_stmt pos:start="17:13" pos:end="17:27"><expr pos:start="17:13" pos:end="17:26"><call pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:19">bailOut</name><argument_list pos:start="17:20" pos:end="17:26">( <argument pos:start="17:22" pos:end="17:24"><expr pos:start="17:22" pos:end="17:24"><name pos:start="17:22" pos:end="17:24">ioe</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch> <catch pos:start="18:11" pos:end="20:9">catch <parameter_list pos:start="18:17" pos:end="18:31">( <parameter pos:start="18:19" pos:end="18:29"><decl pos:start="18:19" pos:end="18:29"><type pos:start="18:19" pos:end="18:29"><name pos:start="18:19" pos:end="18:27">Exception</name></type> <name pos:start="18:29" pos:end="18:29">e</name></decl></parameter> )</parameter_list> <block pos:start="18:33" pos:end="20:9">{<block_content pos:start="19:13" pos:end="19:25">
            <expr_stmt pos:start="19:13" pos:end="19:25"><expr pos:start="19:13" pos:end="19:24"><call pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:19">bailOut</name><argument_list pos:start="19:20" pos:end="19:24">( <argument pos:start="19:22" pos:end="19:22"><expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">e</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
}</block></class></unit>
