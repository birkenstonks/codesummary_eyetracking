<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/testMoveRFWithNullContainer_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="11:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:23">MoveRFTest</name> <block pos:start="1:25" pos:end="11:1">{
    <function pos:start="2:5" pos:end="10:5"><type pos:start="2:5" pos:end="2:15"><specifier pos:start="2:5" pos:end="2:10">public</specifier> <name pos:start="2:12" pos:end="2:15">void</name></type> <name pos:start="2:17" pos:end="2:43">testMoveRFWithNullContainer</name><parameter_list pos:start="2:44" pos:end="2:45">()</parameter_list> <throws pos:start="2:47" pos:end="2:66">throws <argument pos:start="2:54" pos:end="2:66"><expr pos:start="2:54" pos:end="2:66"><name pos:start="2:54" pos:end="2:66">CoreException</name></expr></argument></throws> <block pos:start="2:68" pos:end="10:5">{<block_content pos:start="3:9" pos:end="9:83">
        <decl_stmt pos:start="3:9" pos:end="3:61"><decl pos:start="3:9" pos:end="3:60"><type pos:start="3:9" pos:end="3:18"><name pos:start="3:9" pos:end="3:18">IRodinFile</name></type> <name pos:start="3:20" pos:end="3:27">rfSource</name> <init pos:start="3:29" pos:end="3:60">= <expr pos:start="3:31" pos:end="3:60"><call pos:start="3:31" pos:end="3:60"><name pos:start="3:31" pos:end="3:45">createRodinFile</name><argument_list pos:start="3:46" pos:end="3:60">( <argument pos:start="3:48" pos:end="3:58"><expr pos:start="3:48" pos:end="3:58"><literal type="string" pos:start="3:48" pos:end="3:58">"/P/X.test"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <try pos:start="4:9" pos:end="8:9">try <block pos:start="4:13" pos:end="6:9">{<block_content pos:start="5:13" pos:end="5:59">
            <expr_stmt pos:start="5:13" pos:end="5:59"><expr pos:start="5:13" pos:end="5:58"><call pos:start="5:13" pos:end="5:58"><name pos:start="5:13" pos:end="5:25"><name pos:start="5:13" pos:end="5:20">rfSource</name><operator pos:start="5:21" pos:end="5:21">.</operator><name pos:start="5:22" pos:end="5:25">move</name></name><argument_list pos:start="5:26" pos:end="5:58">( <argument pos:start="5:28" pos:end="5:31"><expr pos:start="5:28" pos:end="5:31"><literal type="null" pos:start="5:28" pos:end="5:31">null</literal></expr></argument>, <argument pos:start="5:34" pos:end="5:37"><expr pos:start="5:34" pos:end="5:37"><literal type="null" pos:start="5:34" pos:end="5:37">null</literal></expr></argument>, <argument pos:start="5:40" pos:end="5:43"><expr pos:start="5:40" pos:end="5:43"><literal type="null" pos:start="5:40" pos:end="5:43">null</literal></expr></argument>, <argument pos:start="5:46" pos:end="5:50"><expr pos:start="5:46" pos:end="5:50"><literal type="boolean" pos:start="5:46" pos:end="5:50">false</literal></expr></argument>, <argument pos:start="5:53" pos:end="5:56"><expr pos:start="5:53" pos:end="5:56"><literal type="null" pos:start="5:53" pos:end="5:56">null</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch pos:start="6:11" pos:end="8:9">catch <parameter_list pos:start="6:17" pos:end="6:48">( <parameter pos:start="6:19" pos:end="6:46"><decl pos:start="6:19" pos:end="6:46"><type pos:start="6:19" pos:end="6:46"><name pos:start="6:19" pos:end="6:42">IllegalArgumentException</name></type> <name pos:start="6:44" pos:end="6:46">iae</name></decl></parameter> )</parameter_list> <block pos:start="6:50" pos:end="8:9">{<block_content pos:start="7:13" pos:end="7:19">
            <return pos:start="7:13" pos:end="7:19">return;</return>
        </block_content>}</block></catch></try>
        <expr_stmt pos:start="9:9" pos:end="9:83"><expr pos:start="9:9" pos:end="9:82"><call pos:start="9:9" pos:end="9:82"><name pos:start="9:9" pos:end="9:18">assertTrue</name><argument_list pos:start="9:19" pos:end="9:82">( <argument pos:start="9:21" pos:end="9:73"><expr pos:start="9:21" pos:end="9:73"><literal type="string" pos:start="9:21" pos:end="9:73">"Should not be able to move a rf to a null container"</literal></expr></argument>, <argument pos:start="9:76" pos:end="9:80"><expr pos:start="9:76" pos:end="9:80"><literal type="boolean" pos:start="9:76" pos:end="9:80">false</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class></unit>
