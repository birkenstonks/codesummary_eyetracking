<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/getNAGString_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="18:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:28">NAGStringParser</name> <block pos:start="1:30" pos:end="18:1">{
   <function pos:start="2:4" pos:end="17:4"><type pos:start="2:4" pos:end="2:16"><specifier pos:start="2:4" pos:end="2:9">public</specifier> <name pos:start="2:11" pos:end="2:16">String</name></type> <name pos:start="2:18" pos:end="2:29">getNAGString</name><parameter_list pos:start="2:30" pos:end="2:49">(<parameter pos:start="2:31" pos:end="2:48"><decl pos:start="2:31" pos:end="2:48"><type pos:start="2:31" pos:end="2:37"><name pos:start="2:31" pos:end="2:37">boolean</name></type> <name pos:start="2:39" pos:end="2:48">allNumeric</name></decl></parameter>)</parameter_list> <block pos:start="2:51" pos:end="17:4">{<block_content pos:start="3:7" pos:end="16:27">
      <if_stmt pos:start="3:7" pos:end="4:21"><if pos:start="3:7" pos:end="4:21">if <condition pos:start="3:10" pos:end="3:23">(<expr pos:start="3:11" pos:end="3:22"><name pos:start="3:11" pos:end="3:14">nags</name> <operator pos:start="3:16" pos:end="3:17">==</operator> <literal type="null" pos:start="3:19" pos:end="3:22">null</literal></expr>)</condition><block type="pseudo" pos:start="4:10" pos:end="4:21"><block_content pos:start="4:10" pos:end="4:21">
         <return pos:start="4:10" pos:end="4:21">return <expr pos:start="4:17" pos:end="4:20"><literal type="null" pos:start="4:17" pos:end="4:20">null</literal></expr>;</return></block_content></block></if></if_stmt>
      <decl_stmt pos:start="5:7" pos:end="5:45"><decl pos:start="5:7" pos:end="5:44"><type pos:start="5:7" pos:end="5:19"><name pos:start="5:7" pos:end="5:19">StringBuilder</name></type> <name pos:start="5:21" pos:end="5:22">sb</name> <init pos:start="5:24" pos:end="5:44">= <expr pos:start="5:26" pos:end="5:44"><operator pos:start="5:26" pos:end="5:28">new</operator> <call pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:42">StringBuilder</name><argument_list pos:start="5:43" pos:end="5:44">()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt pos:start="6:7" pos:end="6:25"><decl pos:start="6:7" pos:end="6:24"><type pos:start="6:7" pos:end="6:12"><name pos:start="6:7" pos:end="6:12">String</name></type> <name pos:start="6:14" pos:end="6:17">suff</name> <init pos:start="6:19" pos:end="6:24">= <expr pos:start="6:21" pos:end="6:24"><literal type="null" pos:start="6:21" pos:end="6:24">null</literal></expr></init></decl>;</decl_stmt>
      <decl_stmt pos:start="7:7" pos:end="7:20"><decl pos:start="7:7" pos:end="7:19"><type pos:start="7:7" pos:end="7:9"><name pos:start="7:7" pos:end="7:9">int</name></type> <name pos:start="7:11" pos:end="7:15">count</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>;</decl_stmt>
      <for pos:start="8:7" pos:end="15:7">for <control pos:start="8:11" pos:end="8:43">(<init pos:start="8:12" pos:end="8:21"><decl pos:start="8:12" pos:end="8:20"><type pos:start="8:12" pos:end="8:14"><name pos:start="8:12" pos:end="8:14">int</name></type> <name pos:start="8:16" pos:end="8:16">i</name> <init pos:start="8:18" pos:end="8:20">= <expr pos:start="8:20" pos:end="8:20"><literal type="number" pos:start="8:20" pos:end="8:20">0</literal></expr></init></decl>;</init> <condition pos:start="8:23" pos:end="8:38"><expr pos:start="8:23" pos:end="8:37"><name pos:start="8:23" pos:end="8:23">i</name> <operator pos:start="8:25" pos:end="8:25">&lt;</operator> <name pos:start="8:27" pos:end="8:37"><name pos:start="8:27" pos:end="8:30">nags</name><operator pos:start="8:31" pos:end="8:31">.</operator><name pos:start="8:32" pos:end="8:37">length</name></name></expr>;</condition> <incr pos:start="8:40" pos:end="8:42"><expr pos:start="8:40" pos:end="8:42"><name pos:start="8:40" pos:end="8:40">i</name><operator pos:start="8:41" pos:end="8:42">++</operator></expr></incr>)</control> <block pos:start="8:45" pos:end="15:7">{<block_content pos:start="9:10" pos:end="14:10">
         <expr_stmt pos:start="9:10" pos:end="9:56"><expr pos:start="9:10" pos:end="9:55"><name pos:start="9:10" pos:end="9:13">suff</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <call pos:start="9:17" pos:end="9:55"><name pos:start="9:17" pos:end="9:34"><name pos:start="9:17" pos:end="9:19">NAG</name><operator pos:start="9:20" pos:end="9:20">.</operator><name pos:start="9:21" pos:end="9:34">numberToString</name></name><argument_list pos:start="9:35" pos:end="9:55">(<argument pos:start="9:36" pos:end="9:42"><expr pos:start="9:36" pos:end="9:42"><name pos:start="9:36" pos:end="9:42"><name pos:start="9:36" pos:end="9:39">nags</name><index pos:start="9:40" pos:end="9:42">[<expr pos:start="9:41" pos:end="9:41"><name pos:start="9:41" pos:end="9:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="9:45" pos:end="9:54"><expr pos:start="9:45" pos:end="9:54"><name pos:start="9:45" pos:end="9:54">allNumeric</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <if_stmt pos:start="10:10" pos:end="14:10"><if pos:start="10:10" pos:end="14:10">if <condition pos:start="10:13" pos:end="10:26">(<expr pos:start="10:14" pos:end="10:25"><name pos:start="10:14" pos:end="10:17">suff</name> <operator pos:start="10:19" pos:end="10:20">!=</operator> <literal type="null" pos:start="10:22" pos:end="10:25">null</literal></expr>)</condition> <block pos:start="10:28" pos:end="14:10">{<block_content pos:start="11:13" pos:end="13:28">
            <if_stmt pos:start="11:13" pos:end="12:30"><if pos:start="11:13" pos:end="12:30">if <condition pos:start="11:16" pos:end="11:28">(<expr pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:21">count</name><operator pos:start="11:22" pos:end="11:23">++</operator> <operator pos:start="11:25" pos:end="11:25">&gt;</operator> <literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr>)</condition><block type="pseudo" pos:start="12:16" pos:end="12:30"><block_content pos:start="12:16" pos:end="12:30">
               <expr_stmt pos:start="12:16" pos:end="12:30"><expr pos:start="12:16" pos:end="12:29"><call pos:start="12:16" pos:end="12:29"><name pos:start="12:16" pos:end="12:24"><name pos:start="12:16" pos:end="12:17">sb</name><operator pos:start="12:18" pos:end="12:18">.</operator><name pos:start="12:19" pos:end="12:24">append</name></name><argument_list pos:start="12:25" pos:end="12:29">(<argument pos:start="12:26" pos:end="12:28"><expr pos:start="12:26" pos:end="12:28"><literal type="string" pos:start="12:26" pos:end="12:28">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:28"><expr pos:start="13:13" pos:end="13:27"><call pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:14">sb</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:21">append</name></name><argument_list pos:start="13:22" pos:end="13:27">(<argument pos:start="13:23" pos:end="13:26"><expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">suff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         </block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
      <return pos:start="16:7" pos:end="16:27">return <expr pos:start="16:14" pos:end="16:26"><call pos:start="16:14" pos:end="16:26"><name pos:start="16:14" pos:end="16:24"><name pos:start="16:14" pos:end="16:15">sb</name><operator pos:start="16:16" pos:end="16:16">.</operator><name pos:start="16:17" pos:end="16:24">toString</name></name><argument_list pos:start="16:25" pos:end="16:26">()</argument_list></call></expr>;</return>
   </block_content>}</block></function>
}</block></class></unit>
