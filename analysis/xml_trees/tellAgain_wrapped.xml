<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="wrapped_functions/tellAgain_wrapped.java" pos:tabs="8"><class pos:start="1:1" pos:end="28:1"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:20">MyClass</name> <block pos:start="1:22" pos:end="28:1">{
    <function pos:start="2:5" pos:end="27:5"><type pos:start="2:5" pos:end="2:18"><specifier pos:start="2:5" pos:end="2:13">protected</specifier> <name pos:start="2:15" pos:end="2:18">void</name></type> <name pos:start="2:20" pos:end="2:28">tellAgain</name><parameter_list pos:start="2:29" pos:end="2:51">( <parameter pos:start="2:31" pos:end="2:49"><decl pos:start="2:31" pos:end="2:49"><type pos:start="2:31" pos:end="2:41"><specifier pos:start="2:31" pos:end="2:35">final</specifier> <name pos:start="2:37" pos:end="2:41">QName</name></type> <name pos:start="2:43" pos:end="2:49">message</name></decl></parameter> )</parameter_list> <throws pos:start="2:53" pos:end="2:74">throws <argument pos:start="2:60" pos:end="2:74"><expr pos:start="2:60" pos:end="2:74"><name pos:start="2:60" pos:end="2:74">RemoteException</name></expr></argument></throws><block pos:start="2:75" pos:end="27:5">{<block_content pos:start="3:9" pos:end="26:9">
        <decl_stmt pos:start="3:9" pos:end="4:39"><decl pos:start="3:9" pos:end="4:38"><type pos:start="3:9" pos:end="3:43"><specifier pos:start="3:9" pos:end="3:13">final</specifier> <name pos:start="3:15" pos:end="3:43">AbstractCoordParticipantProxy</name></type> <name pos:start="3:45" pos:end="3:49">proxy</name> <init pos:start="3:51" pos:end="4:38">=
            <expr pos:start="4:13" pos:end="4:38"><call pos:start="4:13" pos:end="4:38"><name pos:start="4:13" pos:end="4:36"><name pos:start="4:13" pos:end="4:16">this</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:36">getParticipantProxy</name></name><argument_list pos:start="4:37" pos:end="4:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="6:9" pos:end="26:9"><if pos:start="6:9" pos:end="9:9">if <condition pos:start="6:12" pos:end="6:52">( <expr pos:start="6:14" pos:end="6:51"><call pos:start="6:14" pos:end="6:51"><name pos:start="6:14" pos:end="6:40"><name pos:start="6:14" pos:end="6:18">State</name><operator pos:start="6:19" pos:end="6:19">.</operator><name pos:start="6:20" pos:end="6:33">MESSAGE_CANCEL</name><operator pos:start="6:34" pos:end="6:34">.</operator><name pos:start="6:35" pos:end="6:40">equals</name></name><argument_list pos:start="6:41" pos:end="6:51">( <argument pos:start="6:43" pos:end="6:49"><expr pos:start="6:43" pos:end="6:49"><name pos:start="6:43" pos:end="6:49">message</name></expr></argument> )</argument_list></call></expr>)</condition><block pos:start="6:53" pos:end="9:9">{<block_content pos:start="7:13" pos:end="7:42">
            <expr_stmt pos:start="7:13" pos:end="7:42"><expr pos:start="7:13" pos:end="7:41"><call pos:start="7:13" pos:end="7:41"><name pos:start="7:13" pos:end="7:33"><name pos:start="7:13" pos:end="7:17">proxy</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:33">cancelOperation</name></name><argument_list pos:start="7:34" pos:end="7:41">( <argument pos:start="7:36" pos:end="7:39"><expr pos:start="7:36" pos:end="7:39"><literal type="null" pos:start="7:36" pos:end="7:39">null</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="9:11" pos:end="12:9">else if <condition pos:start="9:19" pos:end="9:63">( <expr pos:start="9:21" pos:end="9:62"><call pos:start="9:21" pos:end="9:62"><name pos:start="9:21" pos:end="9:51"><name pos:start="9:21" pos:end="9:25">State</name><operator pos:start="9:26" pos:end="9:26">.</operator><name pos:start="9:27" pos:end="9:44">MESSAGE_COMPENSATE</name><operator pos:start="9:45" pos:end="9:45">.</operator><name pos:start="9:46" pos:end="9:51">equals</name></name><argument_list pos:start="9:52" pos:end="9:62">( <argument pos:start="9:54" pos:end="9:60"><expr pos:start="9:54" pos:end="9:60"><name pos:start="9:54" pos:end="9:60">message</name></expr></argument> )</argument_list></call></expr>)</condition><block pos:start="9:64" pos:end="12:9">{<block_content pos:start="10:13" pos:end="10:46">
            <expr_stmt pos:start="10:13" pos:end="10:46"><expr pos:start="10:13" pos:end="10:45"><call pos:start="10:13" pos:end="10:45"><name pos:start="10:13" pos:end="10:37"><name pos:start="10:13" pos:end="10:17">proxy</name><operator pos:start="10:18" pos:end="10:18">.</operator><name pos:start="10:19" pos:end="10:37">compensateOperation</name></name><argument_list pos:start="10:38" pos:end="10:45">( <argument pos:start="10:40" pos:end="10:43"><expr pos:start="10:40" pos:end="10:43"><literal type="null" pos:start="10:40" pos:end="10:43">null</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="12:11" pos:end="15:9">else if <condition pos:start="12:19" pos:end="12:58">( <expr pos:start="12:21" pos:end="12:57"><call pos:start="12:21" pos:end="12:57"><name pos:start="12:21" pos:end="12:46"><name pos:start="12:21" pos:end="12:25">State</name><operator pos:start="12:26" pos:end="12:26">.</operator><name pos:start="12:27" pos:end="12:39">MESSAGE_CLOSE</name><operator pos:start="12:40" pos:end="12:40">.</operator><name pos:start="12:41" pos:end="12:46">equals</name></name><argument_list pos:start="12:47" pos:end="12:57">( <argument pos:start="12:49" pos:end="12:55"><expr pos:start="12:49" pos:end="12:55"><name pos:start="12:49" pos:end="12:55">message</name></expr></argument> )</argument_list></call></expr>)</condition><block pos:start="12:59" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:41">
            <expr_stmt pos:start="13:13" pos:end="13:41"><expr pos:start="13:13" pos:end="13:40"><call pos:start="13:13" pos:end="13:40"><name pos:start="13:13" pos:end="13:32"><name pos:start="13:13" pos:end="13:17">proxy</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:32">closeOperation</name></name><argument_list pos:start="13:33" pos:end="13:40">( <argument pos:start="13:35" pos:end="13:38"><expr pos:start="13:35" pos:end="13:38"><literal type="null" pos:start="13:35" pos:end="13:38">null</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="15:11" pos:end="18:9">else if <condition pos:start="15:19" pos:end="15:59">( <expr pos:start="15:21" pos:end="15:58"><call pos:start="15:21" pos:end="15:58"><name pos:start="15:21" pos:end="15:47"><name pos:start="15:21" pos:end="15:25">State</name><operator pos:start="15:26" pos:end="15:26">.</operator><name pos:start="15:27" pos:end="15:40">MESSAGE_EXITED</name><operator pos:start="15:41" pos:end="15:41">.</operator><name pos:start="15:42" pos:end="15:47">equals</name></name><argument_list pos:start="15:48" pos:end="15:58">( <argument pos:start="15:50" pos:end="15:56"><expr pos:start="15:50" pos:end="15:56"><name pos:start="15:50" pos:end="15:56">message</name></expr></argument> )</argument_list></call></expr>)</condition><block pos:start="15:60" pos:end="18:9">{<block_content pos:start="16:13" pos:end="16:42">
            <expr_stmt pos:start="16:13" pos:end="16:42"><expr pos:start="16:13" pos:end="16:41"><call pos:start="16:13" pos:end="16:41"><name pos:start="16:13" pos:end="16:33"><name pos:start="16:13" pos:end="16:17">proxy</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:33">exitedOperation</name></name><argument_list pos:start="16:34" pos:end="16:41">( <argument pos:start="16:36" pos:end="16:39"><expr pos:start="16:36" pos:end="16:39"><literal type="null" pos:start="16:36" pos:end="16:39">null</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="18:11" pos:end="21:9">else if <condition pos:start="18:19" pos:end="18:60">( <expr pos:start="18:21" pos:end="18:59"><call pos:start="18:21" pos:end="18:59"><name pos:start="18:21" pos:end="18:48"><name pos:start="18:21" pos:end="18:25">State</name><operator pos:start="18:26" pos:end="18:26">.</operator><name pos:start="18:27" pos:end="18:41">MESSAGE_FAULTED</name><operator pos:start="18:42" pos:end="18:42">.</operator><name pos:start="18:43" pos:end="18:48">equals</name></name><argument_list pos:start="18:49" pos:end="18:59">( <argument pos:start="18:51" pos:end="18:57"><expr pos:start="18:51" pos:end="18:57"><name pos:start="18:51" pos:end="18:57">message</name></expr></argument> )</argument_list></call></expr>)</condition><block pos:start="18:61" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:43">
            <expr_stmt pos:start="19:13" pos:end="19:43"><expr pos:start="19:13" pos:end="19:42"><call pos:start="19:13" pos:end="19:42"><name pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:17">proxy</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:34">faultedOperation</name></name><argument_list pos:start="19:35" pos:end="19:42">( <argument pos:start="19:37" pos:end="19:40"><expr pos:start="19:37" pos:end="19:40"><literal type="null" pos:start="19:37" pos:end="19:40">null</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="21:11" pos:end="24:9">else if <condition pos:start="21:19" pos:end="21:62">( <expr pos:start="21:21" pos:end="21:61"><call pos:start="21:21" pos:end="21:61"><name pos:start="21:21" pos:end="21:50"><name pos:start="21:21" pos:end="21:25">State</name><operator pos:start="21:26" pos:end="21:26">.</operator><name pos:start="21:27" pos:end="21:43">MESSAGE_GETSTATUS</name><operator pos:start="21:44" pos:end="21:44">.</operator><name pos:start="21:45" pos:end="21:50">equals</name></name><argument_list pos:start="21:51" pos:end="21:61">( <argument pos:start="21:53" pos:end="21:59"><expr pos:start="21:53" pos:end="21:59"><name pos:start="21:53" pos:end="21:59">message</name></expr></argument> )</argument_list></call></expr>)</condition><block pos:start="21:63" pos:end="24:9">{<block_content pos:start="22:13" pos:end="22:45">
            <expr_stmt pos:start="22:13" pos:end="22:45"><expr pos:start="22:13" pos:end="22:44"><call pos:start="22:13" pos:end="22:44"><name pos:start="22:13" pos:end="22:36"><name pos:start="22:13" pos:end="22:17">proxy</name><operator pos:start="22:18" pos:end="22:18">.</operator><name pos:start="22:19" pos:end="22:36">getStatusOperation</name></name><argument_list pos:start="22:37" pos:end="22:44">( <argument pos:start="22:39" pos:end="22:42"><expr pos:start="22:39" pos:end="22:42"><literal type="null" pos:start="22:39" pos:end="22:42">null</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="24:11" pos:end="26:9">else<block pos:start="24:15" pos:end="26:9">{<block_content pos:start="25:13" pos:end="25:96">
            <throw pos:start="25:13" pos:end="25:96">throw <expr pos:start="25:19" pos:end="25:95"><operator pos:start="25:19" pos:end="25:21">new</operator> <call pos:start="25:23" pos:end="25:95"><name pos:start="25:23" pos:end="25:46">IllegalArgumentException</name><argument_list pos:start="25:47" pos:end="25:95">( <argument pos:start="25:49" pos:end="25:93"><expr pos:start="25:49" pos:end="25:93"><literal type="string" pos:start="25:49" pos:end="25:83">"Sorry, cannot tell a participant "</literal> <operator pos:start="25:85" pos:end="25:85">+</operator> <name pos:start="25:87" pos:end="25:93">message</name></expr></argument> )</argument_list></call></expr>;</throw>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
}</block></class></unit>
