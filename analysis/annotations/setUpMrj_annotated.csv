word,occurrence,tree_parts
private,0,"['function', 'type', 'specifier']"
void,0,"['function', 'type', 'name']"
setUpMrj,0,"['function', 'name']"
Belvedere4,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'name', 'name']"
mrjVersion,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'name', 'name']"
=,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'operator']"
System,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
getProperty,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
"""mrj.version""",0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
if,0,"['function', 'block', 'block_content', 'if_stmt', 'if']"
Belvedere4,1,"['function', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'name', 'name']"
mrjVersion,1,"['function', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'name', 'name']"
==,0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'operator']"
null,0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'literal']"
return;,0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'block', 'block_content', 'return']"
try,0,"['function', 'block', 'block_content', 'try']"
Belvedere4,2,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'name', 'name']"
mrjMajorVersion,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'name', 'name']"
=,1,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'operator']"
Double,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
valueOf,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
Belvedere4,3,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'call', 'name', 'name']"
mrjVersion,2,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'call', 'name', 'name']"
substring,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'call', 'name', 'name']"
0,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
3,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
doubleValue,0,"['function', 'block', 'block_content', 'try', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name']"
catch,0,"['function', 'block', 'block_content', 'try', 'catch']"
Exception,0,"['function', 'block', 'block_content', 'try', 'catch', 'parameter_list', 'parameter', 'decl', 'type', 'name']"
e,0,"['function', 'block', 'block_content', 'try', 'catch', 'parameter_list', 'parameter', 'decl', 'name']"
Belvedere4,4,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'name', 'name']"
mrjMajorVersion,1,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'name', 'name']"
=,2,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'operator']"
0,1,"['function', 'block', 'block_content', 'try', 'catch', 'block', 'block_content', 'expr_stmt', 'expr', 'literal']"
