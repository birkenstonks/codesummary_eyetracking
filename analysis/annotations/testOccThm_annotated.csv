word,occurrence,tree_parts
public,0,"['function', 'type', 'specifier']"
void,0,"['function', 'type', 'name']"
testOccThm,0,"['function', 'name']"
throws,0,"['function', 'throws']"
Exception,0,"['function', 'throws', 'argument', 'expr', 'name']"
final,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'specifier']"
IContextRoot,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
context,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
ResourceUtils,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
createContext,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
rodinProject,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
CTX_BARE_NAME,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
CST_1DECL_1REF_THM,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
final,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'specifier']"
IConstant,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
cst1,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
context,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
getConstant,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
INTERNAL_ELEMENT1,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
final,2,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'specifier']"
IDeclaration,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
declCst1,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,2,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
newDecl,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name']"
cst1,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
CST1,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
final,3,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'specifier']"
IAxiom,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
thm,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,3,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
context,2,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
getAxiom,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
INTERNAL_ELEMENT1,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
final,4,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'specifier']"
IOccurrence,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
occRef,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,4,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
makeRefPred,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name']"
thm,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
9,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
13,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
declCst1,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
final,5,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'specifier']"
BridgeStub,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
tk,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,5,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
new,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'operator']"
BridgeStub,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name']"
context,3,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
final,6,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'specifier']"
ContextIndexer,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
indexer,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,6,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
new,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'operator']"
ContextIndexer,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name']"
assertTrue,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name']"
indexer,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'call', 'name', 'name']"
index,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'call', 'name', 'name']"
tk,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
tk,2,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
assertOccurrencesOtherThanDecl,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
cst1,2,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
occRef,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
