word,occurrence,tree_parts
public,0,"['function', 'type', 'specifier']"
Map,0,"['function', 'type', 'name']"
asMap,0,"['function', 'name']"
Map,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
map,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
new,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'operator']"
HashMap,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name']"
"// map.put ( ""org_id"", org_id );",0,"['function', 'block', 'block_content', 'comment']"
map,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
put,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
"""startDate""",0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
start_date,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
map,2,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
put,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
"""endDate""",0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
end_date,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
if,0,"['function', 'block', 'block_content', 'if_stmt', 'if']"
this,0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'name', 'name']"
organization,0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'name', 'name']"
!=,0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'operator']"
null,0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'condition', 'expr', 'literal']"
map,3,"['function', 'block', 'block_content', 'if_stmt', 'if', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
put,2,"['function', 'block', 'block_content', 'if_stmt', 'if', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
"""organization""",0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
this,1,"['function', 'block', 'block_content', 'if_stmt', 'if', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name', 'name']"
organization,1,"['function', 'block', 'block_content', 'if_stmt', 'if', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name', 'name']"
acronym,0,"['function', 'block', 'block_content', 'if_stmt', 'if', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name', 'name']"
map,4,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
put,3,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
"""type""",0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
this,2,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'condition', 'expr', 'call', 'name', 'name']"
isVisitor,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'condition', 'expr', 'call', 'name', 'name']"
?,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'condition']"
"""Visitor""",0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'then', 'expr', 'literal']"
:,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'else']"
"""Employee""",0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'ternary', 'else', 'expr', 'literal']"
// return new JSONObject( map );,0,"['function', 'block', 'block_content', 'comment']"
return,0,"['function', 'block', 'block_content', 'return']"
map,5,"['function', 'block', 'block_content', 'return', 'expr', 'name']"
