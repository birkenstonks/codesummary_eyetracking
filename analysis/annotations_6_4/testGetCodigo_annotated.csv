word,occurrence,tree_parts
public,0,"['function', 'type', 'specifier']"
void,0,"['function', 'type', 'name']"
testGetCodigo,0,"['function', 'name']"
System,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
out,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
println,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name', 'name']"
"""getCodigo""",0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"
Cronograma,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
instance,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
null,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'literal']"
String,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
expResult,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
"""""",0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'literal']"
String,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'type', 'name']"
result,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'name']"
=,2,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init']"
instance,1,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
getCodigo,0,"['function', 'block', 'block_content', 'decl_stmt', 'decl', 'init', 'expr', 'call', 'name', 'name']"
assertEquals,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name']"
expResult,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
result,1,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'name']"
// TODO review the generated test code and remove the default call to fail.,0,"['function', 'block', 'block_content', 'comment']"
fail,0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'name']"
"""The test case is a prototype.""",0,"['function', 'block', 'block_content', 'expr_stmt', 'expr', 'call', 'argument_list', 'argument', 'expr', 'literal']"